<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="YHWMS" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="递增计数器" enabled="true">
        <stringProp name="CounterConfig.start">01</stringProp>
        <stringProp name="CounterConfig.end"></stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">ti</stringProp>
        <stringProp name="CounterConfig.format"></stringProp>
        <boolProp name="CounterConfig.per_user">false</boolProp>
      </CounterConfig>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">api.staging.yhglobal.cn</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="TestPlan.comments">api.beta.yhglobal.cn。api.staging.yhglobal.cn</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">x-warehouseId</stringProp>
            <stringProp name="Header.value">${defaultWarehouseId}</stringProp>
          </elementProp>
          <elementProp name="Authorization" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer ${token} </stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="时间戳" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="time" elementType="Argument">
            <stringProp name="Argument.name">time</stringProp>
            <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">精确到秒级别</stringProp>
          </elementProp>
          <elementProp name="shi_jian" elementType="Argument">
            <stringProp name="Argument.name">shi_jian</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">年月日时分秒</stringProp>
          </elementProp>
          <elementProp name="shi_jian+1" elementType="Argument">
            <stringProp name="Argument.name">shi_jian+1</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,P1D,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">当前日期+1天</stringProp>
          </elementProp>
          <elementProp name="time2" elementType="Argument">
            <stringProp name="Argument.name">time2</stringProp>
            <stringProp name="Argument.value">${__time(,)}</stringProp>
            <stringProp name="Argument.desc">13位比较适合压测</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="time3" elementType="Argument">
            <stringProp name="Argument.name">time3</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd,)}</stringProp>
            <stringProp name="Argument.desc">年月日</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="Dev-数据库" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">mysql</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://mysql.yhwms.api.staging.yhglobal.cn:3310/YHWmsOperationsStaging</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">jqG4imbhis5Egvnf</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">root</stringProp>
        <stringProp name="TestPlan.comments">，jdbc:mysql://mysql.yhwms.api.staging.yhglobal.cn:3310/YHWmsOperationsDev</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="写死数据-dev" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="name" elementType="Argument">
            <stringProp name="Argument.name">name</stringProp>
            <stringProp name="Argument.value">${__time(,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试${time}</stringProp>
          </elementProp>
          <elementProp name="warehouseAreaId" elementType="Argument">
            <stringProp name="Argument.name">warehouseAreaId</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">库区</stringProp>
          </elementProp>
          <elementProp name="actualBin_Id" elementType="Argument">
            <stringProp name="Argument.name">actualBin_Id</stringProp>
            <stringProp name="Argument.value">3a05136c-8934-b2cb-745d-702948b811c8</stringProp>
            <stringProp name="Argument.desc">3a04eead-acc3-6461-fefe-4e8b070be689，</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customerOrderCode" elementType="Argument">
            <stringProp name="Argument.name">customerOrderCode</stringProp>
            <stringProp name="Argument.value">${time}</stringProp>
            <stringProp name="Argument.desc">客户指令号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cargoId_1" elementType="Argument">
            <stringProp name="Argument.name">cargoId_1</stringProp>
            <stringProp name="Argument.value">&quot;3a04e376-2c34-7862-8220-35d6b61fed3c&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cargoId_2" elementType="Argument">
            <stringProp name="Argument.name">cargoId_2</stringProp>
            <stringProp name="Argument.value">&quot;3a04e376-2f22-056b-b01c-149e0ec19bda&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cargoId_3" elementType="Argument">
            <stringProp name="Argument.name">cargoId_3</stringProp>
            <stringProp name="Argument.value">&quot;3a04e376-3024-48ac-3498-4315d7b081f2&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="retry" elementType="Argument">
            <stringProp name="Argument.name">retry</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">重试次数</stringProp>
          </elementProp>
          <elementProp name="boci_good_1" elementType="Argument">
            <stringProp name="Argument.name">boci_good_1</stringProp>
            <stringProp name="Argument.value">&quot;3a04c4f1-e2b5-b965-7b84-5f257cc0d79d&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="boci_good_2" elementType="Argument">
            <stringProp name="Argument.name">boci_good_2</stringProp>
            <stringProp name="Argument.value">&quot;3a04c4f2-5b9a-c1a9-9ba7-7c78bbb5812d&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="lotAttrId" elementType="Argument">
            <stringProp name="Argument.name">lotAttrId</stringProp>
            <stringProp name="Argument.value">3a04fcf7-a713-35d6-236e-fd6cb743c93e</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="beta-数据库" enabled="false">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">mysql</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://mysqlopmaster.yhwms.platform.beta.yhglobal.cn:3306/YHWmsOperationsBeta</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">develop</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">develop</stringProp>
        <stringProp name="TestPlan.comments">jdbc:mysql://mysqlopmaster.yhwms.platform.beta.yhglobal.cn:3306/YHWmsOperationsBeta，jdbc:mysql://mysql.yhwms.api.staging.yhglobal.cn:3310/YHWmsOperationsDev</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="写死数据-bata" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="name" elementType="Argument">
            <stringProp name="Argument.name">name</stringProp>
            <stringProp name="Argument.value">${__time(dhS,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试${time}</stringProp>
          </elementProp>
          <elementProp name="cargoId" elementType="Argument">
            <stringProp name="Argument.name">cargoId</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">商品ID</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customerOrderCode" elementType="Argument">
            <stringProp name="Argument.name">customerOrderCode</stringProp>
            <stringProp name="Argument.value">${time}</stringProp>
            <stringProp name="Argument.desc">客户指令号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cargoId_1" elementType="Argument">
            <stringProp name="Argument.name">cargoId_1</stringProp>
            <stringProp name="Argument.value">&quot;3a04fd53-c156-23f8-103a-8b05cc32fc0c&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cargoId_2" elementType="Argument">
            <stringProp name="Argument.name">cargoId_2</stringProp>
            <stringProp name="Argument.value">&quot;3a04fd57-e8ab-1ee5-ea6d-305fd1c76b1a&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cargoId_3" elementType="Argument">
            <stringProp name="Argument.name">cargoId_3</stringProp>
            <stringProp name="Argument.value">&quot;3a04fd59-a78d-8901-41ec-f97aee35d3d2&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="codename_1" elementType="Argument">
            <stringProp name="Argument.name">codename_1</stringProp>
            <stringProp name="Argument.value">自动化-1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="codename_2" elementType="Argument">
            <stringProp name="Argument.name">codename_2</stringProp>
            <stringProp name="Argument.value">自动化-2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="codename_3" elementType="Argument">
            <stringProp name="Argument.name">codename_3</stringProp>
            <stringProp name="Argument.value">自动化-3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="actualBin_Id" elementType="Argument">
            <stringProp name="Argument.name">actualBin_Id</stringProp>
            <stringProp name="Argument.value">3a0507e0-1eb7-56dd-ef7e-8c028f5c16a8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">3a050252-7cbe-163c-ce3a-bfe8b4baeade，3a0507e0-1eb7-56dd-ef7e-8c028f5c16a8</stringProp>
          </elementProp>
          <elementProp name="lotAttrId" elementType="Argument">
            <stringProp name="Argument.name">lotAttrId</stringProp>
            <stringProp name="Argument.value">3a04fcfb-4307-71cb-1533-c55a42e692eb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="boci_good_1" elementType="Argument">
            <stringProp name="Argument.name">boci_good_1</stringProp>
            <stringProp name="Argument.value">&quot;3a050c69-dce7-f996-4e7c-60af6a67d8f4&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="boci_good_2" elementType="Argument">
            <stringProp name="Argument.name">boci_good_2</stringProp>
            <stringProp name="Argument.value">&quot;3a050c6a-3dad-7ad9-f484-cae893e4305f&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="boci_carrierId" elementType="Argument">
            <stringProp name="Argument.name">boci_carrierId</stringProp>
            <stringProp name="Argument.value">3a050c71-930f-5efb-e7ba-641ea2fe67eb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="retry" elementType="Argument">
            <stringProp name="Argument.name">retry</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.desc">重试次数</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="actualBin_Id_fang" elementType="Argument">
            <stringProp name="Argument.name">actualBin_Id_fang</stringProp>
            <stringProp name="Argument.value">3a05184a-0019-396e-656d-1519a4b0c9e8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="actualBin_Id" elementType="Argument">
            <stringProp name="Argument.name">actualBin_Id</stringProp>
            <stringProp name="Argument.value">3a05184a-0019-396e-656d-1519a4b0c9e8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="基础模块" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础数据" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="基础数据获取" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1110329708">测试Jenkins</stringProp>
              <stringProp name="84424398">YHWMS</stringProp>
              <stringProp name="-1364696058">全流程回归</stringProp>
              <stringProp name="-295315453">基础数据获取</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础资料" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="库区库位" enabled="true"/>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                <stringProp name="CounterConfig.start">0</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">n</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库区" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pId&quot;:&quot;&quot;,&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;areaType&quot;:&quot;10&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/warehouse-area/warehouse-area</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="warehouseAreaId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">warehouseAreaId</stringProp>
                  <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="96784904">error</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="库位创建" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库位" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;warehouseAreaId&quot;:${warehouseAreaId},&#xd;
    &quot;storageCondition&quot;:&quot;0&quot;,&#xd;
    &quot;binUseType&quot;:[&#xd;
        &quot;1&quot;,&#xd;
        &quot;2&quot;,&#xd;
        &quot;3&quot;,&#xd;
        &quot;4&quot;,&#xd;
        &quot;5&quot;,&#xd;
        &quot;6&quot;&#xd;
    ],&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;layers&quot;:1,&#xd;
    &quot;columns&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;rows&quot;:1,&#xd;
    &quot;binType&quot;:&quot;0&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/warehouse-bin/warehouse-bin</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="96784904">error</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="actualBin_Id" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">actualBin_Id</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.default"></stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="新建货类、策略" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基础货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-type/cargo-type</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="cargoTypeId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">cargoTypeId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pId&quot;:&quot;&quot;,&#xd;
    &quot;isSelectTop&quot;: true,&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-type-of-warehouse/cargo-type-of-warehouse</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="cargoTypeOfWarehouseId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">cargoTypeOfWarehouseId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;productionDateVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:true&#xd;
    },&#xd;
    &quot;expireDateVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:true&#xd;
    },&#xd;
    &quot;entryDateVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;productionBatchVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;plantVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;boxNoVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;batchCodeVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;returnReasonVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;virtualWarehouseVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;boxQtyVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;purchaseOrderVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/lot-attr/lot-attr</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="lotAttrId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">lotAttrId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;2&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/allocate-strategy/allocate-strategy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="allocateStrategyId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">allocateStrategyId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略-分配规则" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;strategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;name&quot;:&quot;${name}${__counter(false,id)}&quot;,&#xd;
    &quot;sequenceNo&quot;:1,&#xd;
    &quot;fixedAreaOrBin&quot;:1,&#xd;
    &quot;enableLotAttrRule&quot;:true,&#xd;
    &quot;outBinRule&quot;:10,&#xd;
    &quot;areas&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;allocateRuleSourceTypes&quot;:[&#xd;
        10,&#xd;
        20,&#xd;
        30,&#xd;
        40,&#xd;
        50,&#xd;
        60&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/allocate-rule/allocate-rule</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;3&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pick-strategy/pick-strategy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="putawayStrategyId1" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">putawayStrategyId1</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略-规则配置" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;strategyId&quot;:&quot;${putawayStrategyId1}&quot;,&#xd;
    &quot;id&quot;:&quot;&quot;,&#xd;
    &quot;name&quot;:&quot;1&quot;,&#xd;
    &quot;sequenceNo&quot;:2,&#xd;
    &quot;pickingOrderType&quot;:2,&#xd;
    &quot;cGroupPickOrderMaxQty&quot;:1000,&#xd;
    &quot;orderMinQtyLimit&quot;:1,&#xd;
    &quot;isSplitByBinQty&quot;:false,&#xd;
    &quot;isSplitByPickOrderVol&quot;:false,&#xd;
    &quot;isSplitByPack&quot;:false,&#xd;
    &quot;secKillTypes&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pick-rule/pick-rule</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;1&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/put-away-strategy/put-away-strategy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="putawayStrategyId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">putawayStrategyId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略-新建规则" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;${name}${__counter(false,id)}&quot;,&#xd;
    &quot;sequenceNo&quot;:1,&#xd;
    &quot;BinUseType&quot;:&quot;&quot;,&#xd;
    &quot;targetAreaId&quot;:&quot;&quot;,&#xd;
    &quot;allowEmpty&quot;:true,&#xd;
    &quot;strategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;putAwayTypes&quot;:[&#xd;
        1&#xd;
    ],&#xd;
    &quot;abcTypes&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;putAwayRuleBinSorts&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;expireDate&quot;:null,&#xd;
    &quot;entryDate&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/put-away-rule/put-away-rule</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="创建商品" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品计量单位" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-unit-selector</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="unitId 计量单位" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">unitId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;value&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-1" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-1" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_1" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId_1</stringProp>
                    <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_1" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_1}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">codename_1</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-2" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-2" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_2" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId_2</stringProp>
                    <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_2},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_2" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_2}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">codename_2</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-3" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-3" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_3" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId_3</stringProp>
                    <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_3" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_3}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">codename_3</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1110329708">测试Jenkins</stringProp>
              <stringProp name="84424398">YHWMS</stringProp>
              <stringProp name="-1364696058">全流程回归</stringProp>
              <stringProp name="1870330191">商品资料获取</stringProp>
              <stringProp name="1870330191">商品资料获取</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用例集合" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础数据" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="基础数据获取" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1110329708">测试Jenkins</stringProp>
              <stringProp name="84424398">YHWMS</stringProp>
              <stringProp name="-1364696058">全流程回归</stringProp>
              <stringProp name="-295315453">基础数据获取</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础资料" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="库区库位" enabled="true"/>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                <stringProp name="CounterConfig.start">0</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">n</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库区" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pId&quot;:&quot;&quot;,&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;areaType&quot;:&quot;10&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/warehouse-area/warehouse-area</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="warehouseAreaId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">warehouseAreaId</stringProp>
                  <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="96784904">error</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="库位创建" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库位" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;warehouseAreaId&quot;:${warehouseAreaId},&#xd;
    &quot;storageCondition&quot;:&quot;0&quot;,&#xd;
    &quot;binUseType&quot;:[&#xd;
        &quot;1&quot;,&#xd;
        &quot;2&quot;,&#xd;
        &quot;3&quot;,&#xd;
        &quot;4&quot;,&#xd;
        &quot;5&quot;,&#xd;
        &quot;6&quot;&#xd;
    ],&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;layers&quot;:1,&#xd;
    &quot;columns&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;rows&quot;:1,&#xd;
    &quot;binType&quot;:&quot;0&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/warehouse-bin/warehouse-bin</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="96784904">error</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="actualBin_Id" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">actualBin_Id</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.default"></stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="新建货类、策略" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基础货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-type/cargo-type</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="cargoTypeId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">cargoTypeId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pId&quot;:&quot;&quot;,&#xd;
    &quot;isSelectTop&quot;: true,&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-type-of-warehouse/cargo-type-of-warehouse</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="cargoTypeOfWarehouseId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">cargoTypeOfWarehouseId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;productionDateVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:true&#xd;
    },&#xd;
    &quot;expireDateVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:true&#xd;
    },&#xd;
    &quot;entryDateVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;productionBatchVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;plantVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;boxNoVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;batchCodeVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;returnReasonVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;virtualWarehouseVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;boxQtyVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;purchaseOrderVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/lot-attr/lot-attr</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="lotAttrId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">lotAttrId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;2&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/allocate-strategy/allocate-strategy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="allocateStrategyId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">allocateStrategyId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略-分配规则" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;strategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;name&quot;:&quot;${name}${__counter(false,id)}&quot;,&#xd;
    &quot;sequenceNo&quot;:1,&#xd;
    &quot;fixedAreaOrBin&quot;:1,&#xd;
    &quot;enableLotAttrRule&quot;:true,&#xd;
    &quot;outBinRule&quot;:10,&#xd;
    &quot;areas&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;allocateRuleSourceTypes&quot;:[&#xd;
        10,&#xd;
        20,&#xd;
        30,&#xd;
        40,&#xd;
        50,&#xd;
        60&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/allocate-rule/allocate-rule</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;3&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pick-strategy/pick-strategy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="putawayStrategyId1" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">putawayStrategyId1</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略-规则配置" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;strategyId&quot;:&quot;${putawayStrategyId1}&quot;,&#xd;
    &quot;id&quot;:&quot;&quot;,&#xd;
    &quot;name&quot;:&quot;1&quot;,&#xd;
    &quot;sequenceNo&quot;:2,&#xd;
    &quot;pickingOrderType&quot;:2,&#xd;
    &quot;cGroupPickOrderMaxQty&quot;:1000,&#xd;
    &quot;orderMinQtyLimit&quot;:1,&#xd;
    &quot;isSplitByBinQty&quot;:false,&#xd;
    &quot;isSplitByPickOrderVol&quot;:false,&#xd;
    &quot;isSplitByPack&quot;:false,&#xd;
    &quot;secKillTypes&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pick-rule/pick-rule</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;1&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/put-away-strategy/put-away-strategy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="putawayStrategyId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">putawayStrategyId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略-新建规则" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;${name}${__counter(false,id)}&quot;,&#xd;
    &quot;sequenceNo&quot;:1,&#xd;
    &quot;BinUseType&quot;:&quot;&quot;,&#xd;
    &quot;targetAreaId&quot;:&quot;&quot;,&#xd;
    &quot;allowEmpty&quot;:true,&#xd;
    &quot;strategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;putAwayTypes&quot;:[&#xd;
        1&#xd;
    ],&#xd;
    &quot;abcTypes&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;putAwayRuleBinSorts&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;expireDate&quot;:null,&#xd;
    &quot;entryDate&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/put-away-rule/put-away-rule</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="创建商品" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品计量单位" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-unit-selector</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="unitId 计量单位" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">unitId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;value&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-1" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-1" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_1" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId_1</stringProp>
                    <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_1" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_1}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">codename_1</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-2" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-2" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_2" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId_2</stringProp>
                    <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_2},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_2" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_2}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">codename_2</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-3" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-3" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_3" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId_3</stringProp>
                    <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_3" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_3}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">codename_3</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品资料获取" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取商品数据" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select code,name from Basic_Cargos where id = ${cargoId_1} or  id = ${cargoId_2} or id =${cargoId_3}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">code,codename</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="销售出库拣货用例" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础数据获取" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="登录" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;: &quot;caoyi&quot;,&#xd;
    &quot;password&quot;: &quot;Qq123.&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/login/login</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取token" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">token</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取默认仓库" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">defaultWarehouseId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;defaultWarehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取仓库id1" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">warehouseId1</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;warehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取仓库id2" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">warehouseId2</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;warehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$2$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取用户id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">userId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="调试后置处理程序" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySamplerProperties">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugPostProcessor>
                <hashTree/>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                  <stringProp name="CounterConfig.start">101</stringProp>
                  <stringProp name="CounterConfig.end">111111111</stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">time2</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="基础数据" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主管理" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;keyword&quot;:&quot;测试货主&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/customer/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="customer_id 货主id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">customer_Id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="承运商" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-carrier</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="carrier_Id 承运商id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">carrier_Id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="业务机会" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;keyword&quot;: &quot;测试业务机会&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/project/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="project_Id 业务机会ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">project_Id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询库位" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;binUseType&quot;: [&#xd;
        &quot;1&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/warehouse-bin/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="actualBin_Id  库位ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">actualBin_Id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="品质获取" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;warehouseId&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c395-1431-6c9a-6f2684476fc3&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-quality/paging-cargo-quality-relation</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="quality_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">quality_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="quality_name" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">quality_name</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="工作台获取" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/work-station/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="workStationId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">workStationId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="TestPlan.comments">工作台ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询货类、策略" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基础货类" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;keyword&quot;: &quot;1&quot;,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoTypeId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库货类" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type-of-warehouse/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoTypeOfWarehouseId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/lot-attr/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="lotAttrId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">lotAttrId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/allocate-strategy/paging-allocate-strategy-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="allocateStrategyId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">allocateStrategyId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/pick-strategy/paging-pick-strategy-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putawayStrategyId1" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">putawayStrategyId1</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyType&quot;: 1,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-strategy/paging-put-away-strategy-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putawayStrategyId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">putawayStrategyId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主货类" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type-of-customer/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId " enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoTypeOfCustomerId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">货主货类ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品资料获取" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取商品数据" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select code,name from Basic_Cargos where id = ${cargoId_1} or  id = ${cargoId_2} or id =${cargoId_3}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">code,codename</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="入库管理" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;ZY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:0.00001,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname"></stringProp>
                <stringProp name="RegexExtractor.regex"></stringProp>
                <stringProp name="RegexExtractor.template"></stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_2},&#xd;
            &quot;skuCode&quot;: &quot;${codename_2}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_2}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_3},&#xd;
            &quot;skuCode&quot;: &quot;${codename_3}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_3}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="到货通知单(PC收货）-多商品" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">code_id</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取收货管理单号" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select no from In_Asns where CustomerOrderCode like &quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">asnId</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货管理单号" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/query/api/app/receive-order/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="creatorId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">creatorId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">ietms[0].creatorId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ASNid" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">asnId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].asnId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取收货信息" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${no_dao}&quot;,&#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work/get-receive</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.*?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查LPN效验容器" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;${time}${code_id}&quot;,    //容器号&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work/check-lpn</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="生成临时容器id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">rq_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${code_1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:null, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId_1},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${codename_1}&quot;,     //商品名称,   &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveWorkId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">receiveWorkId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;receiveWorkId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息2" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${code_2}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId-2</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业2" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId-2}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId_2},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${codename_2}&quot;,     //商品名称,    &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息3" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${code_3}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId-3</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业3" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId-3}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId_3},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${codename_3}&quot;,     //商品名称,    &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
                <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查看是否生成上架单" enabled="true">
                <stringProp name="WhileController.condition">${__javaScript(&quot;${totalCount}&quot;!=1 &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;putAwayOrderStatus&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">-1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="100526016">items</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                    <stringProp name="ConstantTimer.delay">3000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">totalCount</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${w_counter}" enabled="true">
                  <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后通知" enabled="true">
                  <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      收货完成后，没有生成上架单&#xd;
      收货通知单号：${no_dao}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49586">200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">20</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="销售出库" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售出库通知单(手动创建页面)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;10&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;edi${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${carrier_Id}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;consigneeName&quot;:&quot;自动化&quot;,&#xd;
    &quot;consigneeTel&quot;:&quot;17777777777&quot;,&#xd;
    &quot;province&quot;:&quot;广东省&quot;,&#xd;
    &quot;city&quot;:&quot;深圳市&quot;,&#xd;
    &quot;area&quot;:&quot;罗湖区&quot;,&#xd;
    &quot;consigneeAddress&quot;:&quot;自动化&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="当创建成功就跳出" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${customerOrderCode}&quot;!=&quot;edi${time}${ti}&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单详情" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;edi${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;2024-03-22 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/query/api/app/out-bound-notice-order/paging-sale-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">dzd_id1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">dzh_id1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">customerOrderCode</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;customerOrderCode&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开始出库-创建销售出库单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${dzd_id1}&quot;,&#xd;
            &quot;no&quot;:&quot;${dzh_id1}&quot;&#xd;
        },&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;${xs_token}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bounding</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message">204</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看新建出库单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;edi${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-sale-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id11" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">dzd_id11</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号11" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">dzh_id11</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outBoundOrder_id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">outBoundOrder_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单预分配" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;outBoundOrderIds&quot;: [&#xd;
        &quot;${outBoundOrder_id}&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-order/pre-allot</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="当状态更新为预分配则跳出" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr}&quot;!=&quot;预分配&quot;&amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看新建出库单" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;edi${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-sale-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id11" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">dzd_id11</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号11" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">dzh_id11</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.*?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      销售出库状态没有变更为预分配&#xd;
      出库单号：${dzh_id11}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="波次汇总" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:100,&#xd;
    &quot;outBoundType&quot;:10,&#xd;
    &quot;orderSource&quot;:[],&#xd;
    &quot;no&quot;:&quot;${dzh_id11}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-waving-order/query-and-create-wave-query-result</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="queryId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">queryId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.queryId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="波次汇总选择策略确认" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pickingStrategyId&quot;:&quot;${putawayStrategyId1}&quot;,&#xd;
    &quot;isLastWave&quot;:false,&#xd;
    &quot;detail&quot;:[&#xd;
        {&#xd;
            &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
            &quot;carrierId&quot;:&quot;${carrier_Id}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;queryId&quot;:&quot;${queryId}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/wave-summary</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取波次单号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;outBoundOrderNo&quot;:&quot;${dzh_id11}&quot;,&#xd;
    &quot;beginCreationTime&quot;:&quot;2021-04-11 00:00:00&quot;,&#xd;
    &quot;endCreationTime&quot;:&quot;2025-04-19 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/wave/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="波次号IDbc_id1" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bc_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="单号bc_dh1" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bc_dh1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.items[0].waveNo</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="波次确认" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;waveId&quot;:[&#xd;
        &quot;${bc_id1}&quot;&#xd;
    ],&#xd;
   &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/wave-confirm</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应204断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49590">204</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询是否生成拣货单号" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${pickingOrderStatusStr}&quot;!=&quot;新建&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取拣货单单号" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${bc_dh1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-sale-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="单号jh_dh1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">jh_dh1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">pickingOrderStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;pickingOrderStatusStr&quot;:&quot;(.*?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">jhd_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取拣货单明细" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${jhd_id}&quot;,&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 50,&#xd;
  &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-sale-detail-list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="totalCount" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">totalCount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">totalCount</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="普通出库拣货用例" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础数据获取" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="登录" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;: &quot;caoyi&quot;,&#xd;
    &quot;password&quot;: &quot;Qq123.&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/login/login</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取token" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">token</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取默认仓库" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">defaultWarehouseId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;defaultWarehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取仓库id1" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">warehouseId1</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;warehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取仓库id2" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">warehouseId2</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;warehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$2$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取用户id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">userId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="调试后置处理程序" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySamplerProperties">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugPostProcessor>
                <hashTree/>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                  <stringProp name="CounterConfig.start">101</stringProp>
                  <stringProp name="CounterConfig.end">111111111</stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">time2</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="基础数据" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主管理" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;keyword&quot;:&quot;测试货主&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/customer/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="customer_id 货主id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">customer_Id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="承运商" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-carrier</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="carrier_Id 承运商id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">carrier_Id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="业务机会" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;keyword&quot;: &quot;测试业务机会&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/project/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="project_Id 业务机会ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">project_Id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询库位" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;binUseType&quot;: [&#xd;
        &quot;1&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/warehouse-bin/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="actualBin_Id  库位ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">actualBin_Id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="品质获取" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;warehouseId&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c395-1431-6c9a-6f2684476fc3&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-quality/paging-cargo-quality-relation</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="quality_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">quality_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="quality_name" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">quality_name</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="工作台获取" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/work-station/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="workStationId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">workStationId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="TestPlan.comments">工作台ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询货类、策略" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基础货类" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;keyword&quot;: &quot;1&quot;,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoTypeId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库货类" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type-of-warehouse/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoTypeOfWarehouseId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/lot-attr/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="lotAttrId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">lotAttrId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/allocate-strategy/paging-allocate-strategy-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="allocateStrategyId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">allocateStrategyId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/pick-strategy/paging-pick-strategy-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putawayStrategyId1" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">putawayStrategyId1</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyType&quot;: 1,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-strategy/paging-put-away-strategy-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putawayStrategyId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">putawayStrategyId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主货类" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type-of-customer/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId " enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoTypeOfCustomerId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">货主货类ID</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品资料获取" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取商品数据" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select code,name from Basic_Cargos where id = ${cargoId_1} or  id = ${cargoId_2} or id =${cargoId_3}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">code,codename</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="入库管理" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:0.00001,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname"></stringProp>
                <stringProp name="RegexExtractor.regex"></stringProp>
                <stringProp name="RegexExtractor.template"></stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_2},&#xd;
            &quot;skuCode&quot;: &quot;${codename_2}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_2}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_3},&#xd;
            &quot;skuCode&quot;: &quot;${codename_3}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_3}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="到货通知单(PC收货）-多商品" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">code_id</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取收货管理单号" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select no from In_Asns where CustomerOrderCode like &quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">asnId</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货管理单号" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/query/api/app/receive-order/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="creatorId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">creatorId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">ietms[0].creatorId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ASNid" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">asnId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].asnId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取收货信息" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${no_dao}&quot;,&#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work/get-receive</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.*?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查LPN效验容器" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;${time}${code_id}&quot;,    //容器号&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work/check-lpn</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="生成临时容器id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">rq_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${code_1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:null, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId_1},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${codename_1}&quot;,     //商品名称,   &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveWorkId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">receiveWorkId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;receiveWorkId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息2" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${code_2}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId-2</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业2" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId-2}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId_2},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${codename_2}&quot;,     //商品名称,    &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息3" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${code_3}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId-3</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业3" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId-3}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId_3},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${codename_3}&quot;,     //商品名称,    &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
                <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查看是否生成上架单" enabled="true">
                <stringProp name="WhileController.condition">${__javaScript(&quot;${totalCount}&quot;!=1 &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;putAwayOrderStatus&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">-1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="100526016">items</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                    <stringProp name="ConstantTimer.delay">3000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">totalCount</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${w_counter}" enabled="true">
                  <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后通知" enabled="true">
                  <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      收货完成后，没有生成上架单&#xd;
      收货通知单号：${no_dao}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49586">200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">20</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="普通出库" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="手动创建普通出库通知单接口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;20&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;30&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:0.00001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
         {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:0.00001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
            	&#xd;
            }&#xd;
            },&#xd;
             {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:0.00001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
            }&#xd;
            }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a045a27-1152-04d4-5a7c-b4b2ee35db56&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="JDBC 预处理程序" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select iaa.CargoId
from OP_InventoryAccountAdvances iaa INNER JOIN INV_AccountBalances iab ON iab.Id = iaa.Id
where iab.AvailableQty &gt; 1000</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EDI创建普通出库通知单接口" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;adapterCode&quot;: &quot;JD&quot;,   //适配器&#xd;
	&quot;deliveryOrder&quot;: {&#xd;
		&quot;deliveryOrderCode&quot;: &quot;dd${time}${ti}&quot;,  //客户指令号&#xd;
		&quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
		&quot;businessOrderType&quot;: &quot;PTCK&quot;,&#xd;
		&quot;orderType&quot;: 20,&#xd;
		&quot;customerCode&quot;: &quot;LCS202100000001&quot;,&#xd;
		&quot;opportunityCode&quot;: &quot;PR202100000001&quot;,&#xd;
		&quot;warehouseCode&quot;: &quot;W100001&quot;,&#xd;
		&quot;transportMode&quot;: 10,&#xd;
		&quot;receivedTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;latestOutBoundTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;requiredDeliveryTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;requiredSendTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;receiverInfo&quot;: {&#xd;
			&quot;name&quot;: &quot;开心超人&quot;,&#xd;
			&quot;zipCode&quot;: &quot;518000&quot;,&#xd;
			&quot;tel&quot;: &quot;1888888888&quot;,&#xd;
			&quot;province&quot;: &quot;广东省&quot;,&#xd;
			&quot;city&quot;: &quot;深圳市&quot;,&#xd;
			&quot;area&quot;: &quot;南山区&quot;,&#xd;
			&quot;detailAddress&quot;: &quot;越海全球供应链&quot;&#xd;
		},&#xd;
		&quot;remark&quot;: &quot;订单备注:测试&quot;&#xd;
	},&#xd;
	&quot;orderLines&quot;: [&#xd;
	 { &#xd;
            &quot;orderLineNo&quot;:&quot;0100&quot;,   //序号&#xd;
            &quot;cargoCode&quot;:&quot;${code}&quot;,   //sku&#xd;
            &quot;qualityCode&quot;:&quot;${quality_name}&quot;,  //品质&#xd;
            &quot;noticeQty&quot;:333,    //通知数量&#xd;
            &quot;batchCode&quot;:&quot;1&quot;,  //行号&#xd;
            &quot;produceCode&quot;:&quot;string&quot;,&#xd;
            &quot;remark&quot;:&quot;备注&quot;,&#xd;
        }&#xd;
	]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/open-out-bound-notice-order/stock-out-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言响应状态200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="当查询出订单后跳出" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${customerOrderCode}&quot;!=&quot;dd${time}${ti}&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单详情" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;2029-03-22 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-notice-order/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待3秒" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">pt_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">no_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">customerOrderCode</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;customerOrderCode&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开始出库-创建普通出库单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${pt_id}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_id}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bounding</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看新建出库单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;2029-03-22 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pt_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">no_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配成功" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;outBoundOrderIds&quot;:[&#xd;
        &quot;${pt_id1}&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-order/allocate-by-system</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49590">204</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询分配状态" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr}&quot;!=&quot;已分配&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);

</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询分配状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待5秒" enabled="true">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言状态" enabled="false">
                  <stringProp name="JSON_PATH">items[0].outBoundStatusStr</stringProp>
                  <stringProp name="EXPECTED_VALUE">已分配</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      普通出库单状态一直在库存扣减中&#xd;
      普通出库单号：${no_id1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="当订单状态变成已分配跳出" enabled="false">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr}&quot;!=&quot;已分配&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询分配状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;ff${time}${ti}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待5秒" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言状态" enabled="false">
                  <stringProp name="JSON_PATH">items[0].outBoundStatusStr</stringProp>
                  <stringProp name="EXPECTED_VALUE">已分配</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="当订单状态变成已分配跳出" enabled="false">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr}&quot;!=&quot;已分配&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询分配状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;ff${time}${ti}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待5秒" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言状态" enabled="false">
                  <stringProp name="JSON_PATH">items[0].outBoundStatusStr</stringProp>
                  <stringProp name="EXPECTED_VALUE">已分配</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="使用批量创建批次" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;outBoundOrderIds&quot;:[&#xd;
        &quot;${pt_id1}&quot;&#xd;
    ],&#xd;
   &quot;pickStrategyId&quot;:&quot;${putawayStrategyId1}&quot;,     //拣货策略id&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/generate-pick-batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取批量批次号id" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;outBoundOrderNo&quot;:&quot;${no_id1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/wave/paging-to-bWave-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取合并批次id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">hbpc_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取合并批次单号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">hbpc_no</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进行批次确认" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;waveIds&quot;:[&#xd;
        &quot;${hbpc_id}&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/confirm-pick-batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取拣货单号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${hbpc_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-common-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号单号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">jhd_no</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">jhd_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取拣货单明细" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${jhd_id}&quot;,&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 50,&#xd;
  &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-common-detail-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="totalCount" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">totalCount</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">totalCount</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="仅出库单唯一码" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="新建商品" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="-404062943">全场景造数据</stringProp>
              <stringProp name="701683419">基础资料</stringProp>
              <stringProp name="650241210">创建商品</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="商品资料获取" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="-404062943">全场景造数据</stringProp>
              <stringProp name="-295315453">基础数据获取</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取商品数据" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select code,name from Basic_Cargos where id = ${cargoId_1} or  id = ${cargoId_2} or id =${cargoId_3}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">code,codename</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="商品资料获取" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="-404062943">全场景造数据</stringProp>
              <stringProp name="1870330191">商品资料获取</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="入库管理" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="收货单创建" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:0.00001,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_2},&#xd;
            &quot;skuCode&quot;: &quot;${codename_2}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_2}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_3},&#xd;
            &quot;skuCode&quot;: &quot;${codename_3}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_3}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="到货通知单(PC收货）-多商品" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">code_id</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取收货管理单号" enabled="false">
                <stringProp name="dataSource"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select no from In_Asns where CustomerOrderCode like &quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">asnId</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货管理单号" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/receive-order/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="creatorId" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">creatorId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">ietms[0].creatorId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ASNid" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">asnId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].asnId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取收货信息" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${no_dao}&quot;,&#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-receive</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.*?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查LPN效验容器" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;${time}${code_id}&quot;,    //容器号&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/check-lpn</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="生成临时容器id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">rq_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${code_1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:null, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId_1},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${codename_1}&quot;,     //商品名称,   &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveWorkId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">receiveWorkId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;receiveWorkId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息2" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${code_2}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId-2</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业2" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId-2}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId_2},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${codename_2}&quot;,     //商品名称,    &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息3" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${code_3}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId-3</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业3" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId-3}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId_3},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${codename_3}&quot;,     //商品名称,    &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
                <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查看是否生成上架单" enabled="true">
                <stringProp name="WhileController.condition">${__javaScript(&quot;${totalCount}&quot;!=1 &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;putAwayOrderStatus&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">-1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="100526016">items</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                    <stringProp name="ConstantTimer.delay">3000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">totalCount</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${w_counter}" enabled="true">
                  <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后通知" enabled="true">
                  <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      收货完成后，没有生成上架单&#xd;
      收货通知单号：${no_dao}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49586">200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">20</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="普通出库" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;outBoundStatusStr&quot;,&quot;0&quot;); //普通出库查询分配状态

vars.put(&quot;w_counter_kcfp&quot;,&quot;0&quot;); //普通出库库存分配后状态</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建普通出库单" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="手动创建普通出库通知单接口" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;20&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;30&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:0.0001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
         {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:0.0001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
            	&#xd;
            }&#xd;
            },&#xd;
             {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:0.0001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
            }&#xd;
            }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a045a27-1152-04d4-5a7c-b4b2ee35db56&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="JDBC 预处理程序" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select iaa.CargoId
from OP_InventoryAccountAdvances iaa INNER JOIN INV_AccountBalances iab ON iab.Id = iaa.Id
where iab.AvailableQty &gt; 1000</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">id</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCPreProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EDI创建普通出库通知单接口" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;adapterCode&quot;: &quot;JD&quot;,   //适配器&#xd;
	&quot;deliveryOrder&quot;: {&#xd;
		&quot;deliveryOrderCode&quot;: &quot;dd${time}${ti}&quot;,  //客户指令号&#xd;
		&quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
		&quot;businessOrderType&quot;: &quot;PTCK&quot;,&#xd;
		&quot;orderType&quot;: 20,&#xd;
		&quot;customerCode&quot;: &quot;LCS202100000001&quot;,&#xd;
		&quot;opportunityCode&quot;: &quot;PR202100000001&quot;,&#xd;
		&quot;warehouseCode&quot;: &quot;W100001&quot;,&#xd;
		&quot;transportMode&quot;: 10,&#xd;
		&quot;receivedTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;latestOutBoundTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;requiredDeliveryTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;requiredSendTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;receiverInfo&quot;: {&#xd;
			&quot;name&quot;: &quot;开心超人&quot;,&#xd;
			&quot;zipCode&quot;: &quot;518000&quot;,&#xd;
			&quot;tel&quot;: &quot;1888888888&quot;,&#xd;
			&quot;province&quot;: &quot;广东省&quot;,&#xd;
			&quot;city&quot;: &quot;深圳市&quot;,&#xd;
			&quot;area&quot;: &quot;南山区&quot;,&#xd;
			&quot;detailAddress&quot;: &quot;越海全球供应链&quot;&#xd;
		},&#xd;
		&quot;remark&quot;: &quot;订单备注:测试&quot;&#xd;
	},&#xd;
	&quot;orderLines&quot;: [&#xd;
	 { &#xd;
            &quot;orderLineNo&quot;:&quot;0100&quot;,   //序号&#xd;
            &quot;cargoCode&quot;:&quot;${code}&quot;,   //sku&#xd;
            &quot;qualityCode&quot;:&quot;${quality_name}&quot;,  //品质&#xd;
            &quot;noticeQty&quot;:333,    //通知数量&#xd;
            &quot;batchCode&quot;:&quot;1&quot;,  //行号&#xd;
            &quot;produceCode&quot;:&quot;string&quot;,&#xd;
            &quot;remark&quot;:&quot;备注&quot;,&#xd;
        }&#xd;
	]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/open-out-bound-notice-order/stock-out-order</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言响应状态200" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">8</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="当查询出订单后跳出" enabled="true">
                <stringProp name="WhileController.condition">${__javaScript(&quot;${customerOrderCode}&quot;!=&quot;dd${time}${ti}&quot;)}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单详情" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;2029-03-22 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-notice-order/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待3秒" enabled="true">
                    <stringProp name="ConstantTimer.delay">3000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">pt_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues"> </stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">no_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues"> </stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">customerOrderCode</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;customerOrderCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开始出库-创建普通出库单" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${pt_id}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_id}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bounding</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看新建出库单" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;2029-03-22 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">pt_id1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">no_id1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="分配库存" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配成功" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;outBoundOrderIds&quot;:[&#xd;
        &quot;${pt_id1}&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-order/allocate-by-system</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49590">204</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询分配状态" enabled="true">
                <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr}&quot;!=&quot;已分配&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询分配状态" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待5秒" enabled="true">
                    <stringProp name="ConstantTimer.delay">5000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言状态" enabled="false">
                    <stringProp name="JSON_PATH">items[0].outBoundStatusStr</stringProp>
                    <stringProp name="EXPECTED_VALUE">已分配</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">true</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                  <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                  <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      普通出库单状态一直在库存扣减中&#xd;
      普通出库单号：${no_id1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49586">200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">20</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="批次确认与拣货" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="使用批量创建批次" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;outBoundOrderIds&quot;:[&#xd;
        &quot;${pt_id1}&quot;&#xd;
    ],&#xd;
   &quot;pickStrategyId&quot;:&quot;${putawayStrategyId1}&quot;,     //拣货策略id&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/generate-pick-batch</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取批量批次号id" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;outBoundOrderNo&quot;:&quot;${no_id1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/wave/paging-to-bWave-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取合并批次id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">hbpc_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取合并批次单号" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">hbpc_no</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进行批次确认" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;waveIds&quot;:[&#xd;
        &quot;${hbpc_id}&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/confirm-pick-batch</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取拣货单号" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${hbpc_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">jhd_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号单号" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">jhd_no</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货开始" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pickingUser&quot;:&quot;caoyi&quot;,&#xd;
    &quot;no&quot;:&quot;${jhd_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/start-picking</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货结束" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${jhd_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/sale-end-picking</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="逆向流程" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消拣货结束" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;pickingOrderId&quot;: &quot;${jhd_id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/cancel-common-picking-end</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消拣货开始" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pickingOrderId&quot;: &quot;${jhd_id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/cancel-common-picking-start</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消批次确认" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;waveIds&quot;: [&#xd;
        &quot;${hbpc_id}&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/wave/cancel-confirm-pick-batch</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消分配" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;:&quot;${pt_id1}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/out-bound-order/cancel-allocate</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询分配状态" enabled="true">
                <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr1}&quot;!=&quot;新建&quot; &amp;&amp; ${w_counter_kcfp}&lt;=${retry},)}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询分配状态" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待5秒" enabled="true">
                    <stringProp name="ConstantTimer.delay">5000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言状态" enabled="false">
                    <stringProp name="JSON_PATH">items[0].outBoundStatusStr</stringProp>
                    <stringProp name="EXPECTED_VALUE">已分配</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">true</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">outBoundStatusStr1</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                  <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter_kcfp}); // 普通出库库存分配

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter_kcfp&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="调试取样器" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                  <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      普通出库单取消分配后状态没回到新建&#xd;
      普通出库单号：${no_id1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49586">200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">20</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="分配库存" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="869052411">测试计划</stringProp>
                  <stringProp name="869052411">测试计划</stringProp>
                  <stringProp name="-404062943">全场景造数据</stringProp>
                  <stringProp name="817305669">普通出库</stringProp>
                  <stringProp name="662071660">分配库存</stringProp>
                  <stringProp name="614099055">查询分配状态</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="批次确认" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="869052411">测试计划</stringProp>
                  <stringProp name="869052411">测试计划</stringProp>
                  <stringProp name="-404062943">全场景造数据</stringProp>
                  <stringProp name="817305669">普通出库</stringProp>
                  <stringProp name="-736525900">批次确认与拣货</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="快速收货上架" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="基础数据" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="914278565">用例集合</stringProp>
              <stringProp name="701366788">基础数据</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="入库" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="-404062943">全场景造数据</stringProp>
              <stringProp name="645032659">入库管理</stringProp>
              <stringProp name="-743699965">收货单创建</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="快速收货上架" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="-404062943">全场景造数据</stringProp>
              <stringProp name="645032659">入库管理</stringProp>
              <stringProp name="767619968">快速上架</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="上架单多条明细" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="收货单创建" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:100000,&#xd;
            &quot;nwgt&quot;:100000,&#xd;
            &quot;gwgt&quot;:100000,&#xd;
            &quot;planQty&quot;:100000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_2},&#xd;
            &quot;skuCode&quot;: &quot;${codename_2}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_2}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_3},&#xd;
            &quot;skuCode&quot;: &quot;${codename_3}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_3}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="到货通知单(PC收货）-多商品" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;counter_ji&quot;,&quot;0&quot;);

vars.put(&quot;receiveWorkId&quot;,&quot;&quot;);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">code_id</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取收货管理单号" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select no from In_Asns where CustomerOrderCode like &quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">asnId</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货管理单号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/receive-order/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="creatorId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">creatorId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">ietms[0].creatorId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ASNid" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">asnId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].asnId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取收货信息" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${no_dao}&quot;,&#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-receive</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查LPN效验容器" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;${time}${code_id}&quot;,    //容器号&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/check-lpn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="生成临时容器id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">rq_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1000</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;test1&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:&quot;3a04fd53-c156-23f8-103a-8b05cc32fc0c&quot;,   //商品id&#xd;
    &quot;cargoName&quot;:&quot;自动化-1&quot;,     //商品名称,   &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:100,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;${__counter(false,)}&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveWorkId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">receiveWorkId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;receiveWorkId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="false">
              <stringProp name="ForeachController.inputVal">cargoId</stringProp>
              <stringProp name="ForeachController.returnVal">cargoId</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">10</stringProp>
            </ForeachController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数+1" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${counter_ji});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;counter_ji&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${__V(code_${counter_ji},)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${__V(codename_${counter_ji},)}&quot;,     //商品名称,   &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveWorkId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">receiveWorkId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;receiveWorkId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查看是否生成上架单" enabled="false">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${totalCount}&quot;!=1 &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;putAwayOrderStatus&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="100526016">items</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">totalCount</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后通知" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      收货完成后，没有生成上架单&#xd;
      收货通知单号：${no_dao}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="公共方法" enabled="false"/>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环校验" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
              <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后通知" enabled="true">
              <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell 取样器" enabled="true">
                <stringProp name="BeanShellSampler.query">vars.put(&quot;totalCount&quot;,&quot;0&quot;);</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      &#xd;
      通知单号：${no_dao}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="数量调整" enabled="true"/>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="判断库存" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="TestPlan.comments">每次有新增值的时候需要转成no</stringProp>
              <stringProp name="BeanShellSampler.query">vars.put(&quot;no&quot;,&quot;${pda_put_no}&quot;);
vars.put(&quot;no&quot;,&quot;${ruku_put_no}&quot;);
vars.put(&quot;no&quot;,&quot;${putAwayOrderNo}&quot;);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询是否上架完成" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;putAwayOrderNo&quot;: &quot;${no}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderStatusName" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">putAwayOrderStatusName</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;putAwayOrderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询二级库存流水" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;outSourceCode&quot;: &quot;${no}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/inventory-account-running-record-query/get-account-advance</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">totalCount</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断上架单状态" enabled="true">
              <stringProp name="IfController.condition">&quot;${totalCount}&quot; == &quot;0&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      二级库存流水不正确&#xd;
      单号：${no}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="生产环境回归测试" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="生产环境" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">yhwms.api.yhglobal.cn</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="TestPlan.comments">api.beta.yhglobal.cn。api.staging.yhglobal.cn</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-warehouseId</stringProp>
              <stringProp name="Header.value">${defaultWarehouseId}</stringProp>
            </elementProp>
            <elementProp name="Authorization" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${token} </stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="写死数据" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="name" elementType="Argument">
              <stringProp name="Argument.name">name</stringProp>
              <stringProp name="Argument.value">${__time(dhS,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">测试${time}</stringProp>
            </elementProp>
            <elementProp name="customerOrderCode" elementType="Argument">
              <stringProp name="Argument.name">customerOrderCode</stringProp>
              <stringProp name="Argument.value">${time}</stringProp>
              <stringProp name="Argument.desc">客户指令号</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cargoId_1" elementType="Argument">
              <stringProp name="Argument.name">cargoId_1</stringProp>
              <stringProp name="Argument.value">&quot;3a05e4dc-4dcd-d5a1-1596-14a4234d4020&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cargoId_2" elementType="Argument">
              <stringProp name="Argument.name">cargoId_2</stringProp>
              <stringProp name="Argument.value">&quot;3a05e4dc-b49a-33c9-5276-069a04c3ea3b&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="codename_11" elementType="Argument">
              <stringProp name="Argument.name">codename_11</stringProp>
              <stringProp name="Argument.value">jmeter1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="codename_21" elementType="Argument">
              <stringProp name="Argument.name">codename_21</stringProp>
              <stringProp name="Argument.value">jmeter2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="retry" elementType="Argument">
              <stringProp name="Argument.name">retry</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.desc">重试次数</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="actualBin_Id" elementType="Argument">
              <stringProp name="Argument.name">actualBin_Id</stringProp>
              <stringProp name="Argument.value">3a0593a8-24e9-cdfd-cf44-0955ad0547f1</stringProp>
              <stringProp name="Argument.desc">库位</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="code_11" elementType="Argument">
              <stringProp name="Argument.name">code_11</stringProp>
              <stringProp name="Argument.value">jmeter1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="code_21" elementType="Argument">
              <stringProp name="Argument.name">code_21</stringProp>
              <stringProp name="Argument.value">jmeter2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;receiveWorkId&quot;,&quot;&quot;);

vars.put(&quot;a_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;, &quot;0&quot;);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="基础数据" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="914278565">用例集合</stringProp>
            <stringProp name="701366788">基础数据</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="简单控制器" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="二级库存流水" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;outSourceCode&quot;: &quot;${no}&quot;,&#xd;
  &quot;occurrenceBeginDateTime&quot;: &quot;2022-08-16 00:00:00&quot;,&#xd;
  &quot;occurrenceEndDateTime&quot;: &quot;2022-08-24 00:00:00&quot;,&#xd;
  &quot;userId&quot;: &quot;3a0579b4-bd84-9622-8043-b93df2a0b4f1&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/inventory-account-running-record-query/get-account-advance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础数据获取" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="登录" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;: &quot;caoyi&quot;,&#xd;
    &quot;password&quot;: &quot;Qq123.&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/login/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取默认仓库" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">defaultWarehouseId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;defaultWarehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取仓库id1" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">warehouseId1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;warehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取仓库id2" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">warehouseId2</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;warehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$2$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取用户id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">userId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="调试后置处理程序" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                <stringProp name="CounterConfig.start">101</stringProp>
                <stringProp name="CounterConfig.end">111111111</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">time2</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
              </CounterConfig>
              <hashTree/>
            </hashTree>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="基础数据" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主管理" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;keyword&quot;:&quot;测试货主&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/customer/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="customer_id 货主id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">customer_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="承运商" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;filter&quot;: &quot;极兔&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-carrier</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="carrier_Id 承运商id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">carrier_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="业务机会" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;keyword&quot;: &quot;测试业务机会&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/project/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="project_Id 业务机会ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">project_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询库位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;binUseType&quot;: [&#xd;
        &quot;1&quot;&#xd;
    ],&#xd;
    &quot;warehouseBinCode&quot;: &quot;自动化&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/warehouse-bin/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="actualBin_Id  库位ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">actualBin_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="品质获取" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;name&quot;: &quot;良品&quot;,&#xd;
  &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c395-1431-6c9a-6f2684476fc3&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-quality/paging-cargo-quality-relation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="quality_id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">quality_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="quality_name" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">quality_name</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="工作台获取" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/work-station/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="workStationId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">workStationId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">工作台ID</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询货类、策略" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基础货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;keyword&quot;: &quot;自动化&quot;,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargoTypeId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;keyword&quot;: &quot;自动化&quot;,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type-of-warehouse/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargoTypeOfWarehouseId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;lotAttrName&quot;: &quot;自动化&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/lot-attr/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="lotAttrId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">lotAttrId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyName&quot;: &quot;自动化&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/allocate-strategy/paging-allocate-strategy-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="allocateStrategyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">allocateStrategyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyName&quot;: &quot;自动化&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/pick-strategy/paging-pick-strategy-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putawayStrategyId1" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">putawayStrategyId1</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyName&quot;: &quot;自动化&quot;,&#xd;
  &quot;strategyType&quot;: 1,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-strategy/paging-put-away-strategy-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putawayStrategyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">putawayStrategyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type-of-customer/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId " enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargoTypeOfCustomerId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="TestPlan.comments">货主货类ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="商品资料获取" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取商品数据" enabled="false">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select code,name from Basic_Cargos where id = ${cargoId_1} or  id = ${cargoId_2} or id =${cargoId_3} </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">code,codename</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="商品资料获取" enabled="true">
            <stringProp name="ForeachController.inputVal">cargoId</stringProp>
            <stringProp name="ForeachController.returnVal">cargoId</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">2</stringProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取商品信息" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: ${cargoId}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/cargo/get-cargo-by-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="code" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="codename" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">codename</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="商品信息赋值" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;code_${__counter(false,code_no)}&quot;,&quot;${code}&quot;);

vars.put(&quot;codename_${__counter(false,codename_no)}&quot;, &quot;${codename}&quot;);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="入库管理" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="收货单创建" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;planQty&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;planQty&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="交替控制器" enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
              <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
            </InterleaveControl>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">-1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 10,&#xd;
            &quot;actualQty&quot;: 10,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_2},&#xd;
            &quot;skuCode&quot;: &quot;${codename_2}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 10,&#xd;
            &quot;actualQty&quot;: 10,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_2}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="到货通知单(PC收货）-多商品" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">code_id</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货管理单号" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/receive-order/paging-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="creatorId" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">creatorId</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">ietms[0].creatorId</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ASNid" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">asnId</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].asnId</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取收货信息" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${no_dao}&quot;,&#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-receive</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.*?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查LPN效验容器" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;${time}${code_id}&quot;,    //容器号&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/check-lpn</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="生成临时容器id" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">rq_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
                  <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;receiveWorkId&quot;,&quot;&quot;);

vars.put(&quot;a_counter&quot;,&quot;0&quot;);
</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="收货" enabled="true">
                  <stringProp name="ForeachController.inputVal">cargoId</stringProp>
                  <stringProp name="ForeachController.returnVal">cargoId</stringProp>
                  <boolProp name="ForeachController.useSeparator">true</boolProp>
                  <stringProp name="ForeachController.startIndex">0</stringProp>
                  <stringProp name="ForeachController.endIndex">2</stringProp>
                </ForeachController>
                <hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${a_counter}" enabled="true">
                    <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${a_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;a_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${__V(code_${a_counter},)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">concurrencyId</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${__V(codename_${a_counter},)}&quot;,     //商品名称,   &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:10,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveWorkId" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">receiveWorkId</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;receiveWorkId&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查看是否生成上架单" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(&quot;${totalCount}&quot;!=1 &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
                </WhileController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;putAwayOrderStatus&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">-1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="100526016">items</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                      <stringProp name="ConstantTimer.delay">3000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">totalCount</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number"></stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${w_counter}" enabled="true">
                    <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败2次后通知" enabled="true">
                    <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;生产环境稳定性测试&#xd;
      收货完成后，没有生成上架单(10秒)&#xd;
      收货通知单号：${no_dao}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;所有人&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: &quot;@all&quot;&#xd;
       }&#xd;
}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="49586">200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">20</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="商品上架" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;putAwayOrderStatus&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">-1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="100526016">items</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                      <stringProp name="ConstantTimer.delay">3000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="put_id" enabled="true">
                      <stringProp name="TestPlan.comments">上架单ID</stringProp>
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">put_id</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderNo" enabled="true">
                      <stringProp name="TestPlan.comments">上架单ID</stringProp>
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">putAwayOrderNo</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;putAwayOrderNo&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架详情" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;:&quot;${outbound_id_1}&quot;,&#xd;
    &quot;pageSize&quot;:100,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/get-by-id</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="lotValueId" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">lotValueId</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;lotValueId&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="qualityId" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">qualityId</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;qualityId&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="batchNo" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">batchNo</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;batchNo&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">cargoId</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;cargoId&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="put-id" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">put-good-id</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">details[*].id</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品上架" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;:&quot;${put_id}&quot;,&#xd;
    &quot;putAwayWorkerId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${qualityId}&quot;,&#xd;
            &quot;actualLpnId&quot;:null,&#xd;
            &quot;sourceBinId&quot;:&quot;3a04595a-a685-b953-ca11-3465338e8b41&quot;, &#xd;
            &quot;planBinId&quot;:null,&#xd;
//            &quot;actualBinId&quot;:&quot;3a045a25-2ee7-1686-f972-99fccbb28ab7&quot;,&#xd;
            &quot;actualBinId&quot;:&quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;:10,&#xd;
            &quot;actualQty&quot;:5,&#xd;
            &quot;boxNum&quot;:1,&#xd;
            &quot;lotValueId&quot;:&quot;${lotValueId}&quot;,&#xd;
            &quot;batchNo&quot;:&quot;${batchNo}&quot;,&#xd;
            &quot;id&quot;:&quot;${put-good-id_1}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${qualityId}&quot;,&#xd;
            &quot;actualLpnId&quot;:null,&#xd;
            &quot;sourceBinId&quot;:&quot;3a04595a-a685-b953-ca11-3465338e8b41&quot;,  //内置库位，可写死&#xd;
            &quot;planBinId&quot;:null,&#xd;
//            &quot;actualBinId&quot;:&quot;3a045a25-2ee7-1686-f972-99fccbb28ab7&quot;,  //目标库位&#xd;
            &quot;actualBinId&quot;:&quot;${actualBin_Id}&quot;, &#xd;
            &quot;planQty&quot;:10,&#xd;
            &quot;actualQty&quot;:10,&#xd;
            &quot;boxNum&quot;:1,&#xd;
            &quot;lotValueId&quot;:&quot;${lotValueId}&quot;,&#xd;
            &quot;batchNo&quot;:&quot;${batchNo}&quot;,&#xd;
            &quot;id&quot;:&quot;${put-good-id_2}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;requestId&quot;:&quot;${__UUID}&quot;,&#xd;
    &quot;token&quot;:&quot;3a042b18e076d3843233ae4e12b00554&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/put-away-order/confirmed</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
                    <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;receiveWorkId&quot;,&quot;&quot;);

vars.put(&quot;a_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;, &quot;0&quot;);</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="判断上架单状态是否变更" enabled="true">
                    <stringProp name="WhileController.condition">${__javaScript(&quot;${putAwayOrderStatusName}&quot;!=&quot;上架完成&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}
</stringProp>
                  </WhileController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理-判断状态" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                        <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default"></stringProp>
                        <stringProp name="RegexExtractor.match_number">-1</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="100526016">items</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                        <stringProp name="ConstantTimer.delay">3000</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="put_id" enabled="true">
                        <stringProp name="TestPlan.comments">上架单ID</stringProp>
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">put_id</stringProp>
                        <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default"></stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderNo" enabled="true">
                        <stringProp name="TestPlan.comments">上架单ID</stringProp>
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">putAwayOrderNo</stringProp>
                        <stringProp name="RegexExtractor.regex">&quot;putAwayOrderNo&quot;:&quot;(.+?)&quot;</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default"></stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderStatusName" enabled="true">
                        <stringProp name="TestPlan.comments">上架单状态</stringProp>
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">putAwayOrderStatusName</stringProp>
                        <stringProp name="RegexExtractor.regex">&quot;putAwayOrderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default"></stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                    </hashTree>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${w_counter}" enabled="true">
                      <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败2次后通知" enabled="true">
                      <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;生产环境稳定性测试&#xd;
      上架单一直库存扣减中(10秒)&#xd;
      上架单号：${putAwayOrderNo}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;所有人&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: &quot;@all&quot;&#xd;
       }&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49586">200</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">20</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="差异单上架" enabled="false">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
                    <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="判断是否获取差异单明细" enabled="true">
                    <stringProp name="WhileController.condition">${__javaScript(&quot;${statusStr}&quot;!=&quot;新建&quot; &amp;&amp; ${w_counter}&lt;5,)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过上架单号查询差异单" enabled="false">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;sourceOrderNo&quot;: &quot;&quot;,&#xd;
    &quot;sourceOrderType&quot;: &quot;1&quot;,&#xd;
    &quot;status&quot;: &quot;10&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/difference-order/paging</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="difference_id" enabled="true">
                        <stringProp name="TestPlan.comments">差异单ID</stringProp>
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">difference_id</stringProp>
                        <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default"></stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="statusStr" enabled="true">
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">statusStr</stringProp>
                        <stringProp name="RegexExtractor.regex">&quot;statusStr&quot;:&quot;(.+?)&quot;</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default"></stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                        <stringProp name="ConstantTimer.delay">3000</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过上架单号查询差异单" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;sourceOrderNo&quot;: &quot;${putAwayOrderNo}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/difference-order/paging</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="difference_id" enabled="true">
                        <stringProp name="TestPlan.comments">差异单ID</stringProp>
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">difference_id</stringProp>
                        <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default"></stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                        <stringProp name="ConstantTimer.delay">3000</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="statusStr" enabled="true">
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">statusStr</stringProp>
                        <stringProp name="RegexExtractor.regex">&quot;statusStr&quot;:&quot;(.+?)&quot;</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default"></stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                    </hashTree>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                      <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过差异单ID取明细ID" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;differenceOrderId&quot;: &quot;${difference_id}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/difference-order/get-all-detail</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="detailId 差异单明细id" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">detailId</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;detailId&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="differenceQty 差异数量" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">differenceQty</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;differenceQty&quot;:(.+?).</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="差异单重新上架" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;id&quot;: &quot;${difference_id}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;differenceOrderDetailId&quot;: &quot;${detailId}&quot;,&#xd;
            &quot;binId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;qty&quot;: 5&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/difference-order/re-put-away</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree/>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询库存操作是否完成" enabled="true">
                    <stringProp name="WhileController.condition">${__javaScript(&quot;${statusStr}&quot;!=&quot;已处理&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}
</stringProp>
                  </WhileController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过上架单号查询差异单" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;sourceOrderNo&quot;: &quot;${putAwayOrderNo}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/difference-order/paging</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                        <stringProp name="ConstantTimer.delay">5000</stringProp>
                      </ConstantTimer>
                      <hashTree/>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="statusStr" enabled="true">
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">statusStr</stringProp>
                        <stringProp name="RegexExtractor.regex">&quot;statusStr&quot;:&quot;(.+?)&quot;</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default"></stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                    </hashTree>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                      <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                      <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;生产环境稳定性测试&#xd;
      差异单一直卡在库存扣减中(10秒)&#xd;
      数量调整单号：${adjustmentOrderNo_1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;所有人&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: &quot;@all&quot;&#xd;
       }&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49586">200</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">20</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="普通出库" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;outBoundStatusStr&quot;,&quot;0&quot;); //普通出库查询分配状态

vars.put(&quot;w_counter_kcfp&quot;,&quot;0&quot;); //普通出库库存分配后状态

vars.put (&quot;outBoundStatusStr1&quot;, &quot;0&quot;)</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建普通出库单" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="手动创建普通出库通知单接口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;20&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;30&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:20,&#xd;
            &quot;nwgt&quot;:20,&#xd;
            &quot;gwgt&quot;:20,&#xd;
            &quot;volume&quot;:0.0001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
         {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:20,&#xd;
            &quot;nwgt&quot;:20,&#xd;
            &quot;gwgt&quot;:20,&#xd;
            &quot;volume&quot;:0.0001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
            	&#xd;
            }&#xd;
            },&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a045a27-1152-04d4-5a7c-b4b2ee35db56&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="当查询出订单后跳出" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${customerOrderCode}&quot;!=&quot;dd${time}${ti}&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单详情" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;2029-03-22 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-notice-order/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待3秒" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">pt_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues"> </stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">no_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues"> </stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">customerOrderCode</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;customerOrderCode&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开始出库-创建普通出库单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${pt_id}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_id}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bounding</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看新建出库单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;2029-03-22 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pt_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">no_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="分配库存" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配成功" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;outBoundOrderIds&quot;:[&#xd;
        &quot;${pt_id1}&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-order/allocate-by-system</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">库存分配不够</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询分配状态" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr}&quot;!=&quot;已分配&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询分配状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待5秒" enabled="true">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言状态" enabled="false">
                  <stringProp name="JSON_PATH">items[0].outBoundStatusStr</stringProp>
                  <stringProp name="EXPECTED_VALUE">已分配</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;生产环境稳定性测试&#xd;
      普通出库单状态一直在库存扣减中(10秒)&#xd;
      普通出库单号：${no_id1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;所有人&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: &quot;@all&quot;&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="批次确认与拣货" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="使用批量创建批次" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;outBoundOrderIds&quot;:[&#xd;
        &quot;${pt_id1}&quot;&#xd;
    ],&#xd;
   &quot;pickStrategyId&quot;:&quot;${putawayStrategyId1}&quot;,     //拣货策略id&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/generate-pick-batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取批量批次号id" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;outBoundOrderNo&quot;:&quot;${no_id1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/wave/paging-to-bWave-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取合并批次id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">hbpc_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取合并批次单号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">hbpc_no</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进行批次确认" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;waveIds&quot;:[&#xd;
        &quot;${hbpc_id}&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/confirm-pick-batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取拣货单号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${hbpc_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-common-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">jhd_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号单号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">jhd_no</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货开始" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pickingUser&quot;:&quot;caoyi&quot;,&#xd;
    &quot;no&quot;:&quot;${jhd_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/start-picking</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货结束" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${jhd_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/sale-end-picking</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="619267059">拣货单号不存在
</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">5</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;outBoundStatusStr&quot;,&quot;0&quot;); //普通出库查询分配状态

vars.put(&quot;w_counter_kcfp&quot;,&quot;0&quot;); //普通出库库存分配后状态

vars.put (&quot;outBoundStatusStr1&quot;, &quot;0&quot;);

vars.put (&quot;pickingOrderStatusStr&quot;, &quot;0&quot;);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="拣货结束后查看拣货单状态" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${pickingOrderStatusStr}&quot;!=&quot;拣货结束&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取拣货单号" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${hbpc_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">jhd_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号单号" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">jhd_no</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="pickingOrderStatusStr 拣货单状态" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">pickingOrderStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;pickingOrderStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;生产环境稳定性测试&#xd;
      拣货结束拣货单一直库存扣减中(10秒)&#xd;
      拣货单号：${jhd_no}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;所有人&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: &quot;@all&quot;&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="逆向流程" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消拣货结束" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;pickingOrderId&quot;: &quot;${jhd_id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/cancel-common-picking-end</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消拣货开始" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pickingOrderId&quot;: &quot;${jhd_id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/cancel-common-picking-start</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消批次确认" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;waveIds&quot;: [&#xd;
        &quot;${hbpc_id}&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/wave/cancel-confirm-pick-batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消拣货批次" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;outBoundOrderIds&quot;: [&#xd;
    &quot;${pt_id1}&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/wave/cancel-generate-pick-batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消分配" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;:&quot;${pt_id1}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/out-bound-order/cancel-allocate</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;outBoundStatusStr&quot;,&quot;0&quot;); //普通出库查询分配状态

vars.put(&quot;w_counter_kcfp&quot;,&quot;0&quot;); //普通出库库存分配后状态

vars.put (&quot;outBoundStatusStr1&quot;, &quot;0&quot;)</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询分配状态" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr1}&quot;!=&quot;新建&quot; &amp;&amp; ${w_counter_kcfp}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询分配状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待5秒" enabled="true">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言状态" enabled="false">
                  <stringProp name="JSON_PATH">items[0].outBoundStatusStr</stringProp>
                  <stringProp name="EXPECTED_VALUE">已分配</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outBoundStatusStr1</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter_kcfp}); // 普通出库库存分配

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter_kcfp&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;生产环境稳定性测试&#xd;
      普通出库单取消分配后状态没回到新建(10秒)&#xd;
      普通出库单号：${no_id1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;所有人&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: &quot;@all&quot;&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="分配库存" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="84424398">YHWMS</stringProp>
                <stringProp name="-1775296710">生产环境回归测试</stringProp>
                <stringProp name="817305669">普通出库</stringProp>
                <stringProp name="662071660">分配库存</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="批次确认" enabled="false">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="-404062943">全场景造数据</stringProp>
                <stringProp name="817305669">普通出库</stringProp>
                <stringProp name="-736525900">批次确认与拣货</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="批次确认与拣货" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="84424398">YHWMS</stringProp>
              <stringProp name="-1775296710">生产环境回归测试</stringProp>
              <stringProp name="817305669">普通出库</stringProp>
              <stringProp name="-736525900">批次确认与拣货</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="出库确认" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${pt_id1}&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/out-bound-order/commorder-confirm-out-bound</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="全流程回归" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="ThreadGroup.ramp_time">100</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="配置" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="name" elementType="Argument">
              <stringProp name="Argument.name">name</stringProp>
              <stringProp name="Argument.value">${__time(S,)}</stringProp>
              <stringProp name="Argument.desc">测试${time}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="customerOrderCode" elementType="Argument">
              <stringProp name="Argument.name">customerOrderCode</stringProp>
              <stringProp name="Argument.value">${time}</stringProp>
              <stringProp name="Argument.desc">客户指令号</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="retry" elementType="Argument">
              <stringProp name="Argument.name">retry</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.desc">重试次数</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础数据获取" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="登录" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登录" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;: &quot;caoyi&quot;,&#xd;
    &quot;password&quot;: &quot;Qq123.&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/login/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取默认仓库" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">defaultWarehouseId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;defaultWarehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取仓库id1" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">warehouseId1</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;warehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取仓库id2" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">warehouseId2</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;warehouseId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$2$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取用户id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">userId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="调试后置处理程序" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySamplerProperties">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugPostProcessor>
              <hashTree/>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                <stringProp name="CounterConfig.start">101</stringProp>
                <stringProp name="CounterConfig.end">111111111</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">time2</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">true</boolProp>
              </CounterConfig>
              <hashTree/>
            </hashTree>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="基础数据" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主管理" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;keyword&quot;:&quot;测试货主&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/customer/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="customer_id 货主id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">customer_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="承运商" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;filter&quot;: &quot;自动化&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-carrier</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="carrier_Id 承运商id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">carrier_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="业务机会" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;keyword&quot;: &quot;测试业务机会&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/project/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="project_Id 业务机会ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">project_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询库位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;binUseType&quot;: [&#xd;
        &quot;1&quot;&#xd;
    ],&#xd;
    &quot;warehouseBinCode&quot;: &quot;自动化&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/warehouse-bin/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="actualBin_Id  库位ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">actualBin_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="品质获取" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;name&quot;: &quot;良品&quot;,&#xd;
  &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c395-1431-6c9a-6f2684476fc3&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-quality/paging-cargo-quality-relation</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="quality_id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">quality_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="quality_name" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">quality_name</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="工作台获取" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/work-station/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="workStationId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">workStationId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">工作台ID</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="查询货类、策略" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基础货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;keyword&quot;: &quot;自动化&quot;,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargoTypeId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;keyword&quot;: &quot;自动化&quot;,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type-of-warehouse/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargoTypeOfWarehouseId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;lotAttrName&quot;: &quot;自动化&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/lot-attr/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="lotAttrId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">lotAttrId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyName&quot;: &quot;自动化&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/allocate-strategy/paging-allocate-strategy-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="allocateStrategyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">allocateStrategyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyName&quot;: &quot;自动化&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/pick-strategy/paging-pick-strategy-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putawayStrategyId1" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">putawayStrategyId1</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyName&quot;: &quot;自动化&quot;,&#xd;
  &quot;strategyType&quot;: 1,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-strategy/paging-put-away-strategy-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putawayStrategyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">putawayStrategyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type-of-customer/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId " enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargoTypeOfCustomerId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="TestPlan.comments">货主货类ID</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础资料" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="库区库位" enabled="false"/>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
              <stringProp name="CounterConfig.start">0</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">n</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库区" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pId&quot;:&quot;&quot;,&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;areaType&quot;:&quot;10&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/warehouse-area/warehouse-area</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="warehouseAreaId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">warehouseAreaId</stringProp>
                <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="96784904">error</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="库位创建" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库位" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;warehouseAreaId&quot;:${warehouseAreaId},&#xd;
    &quot;storageCondition&quot;:&quot;0&quot;,&#xd;
    &quot;binUseType&quot;:[&#xd;
        &quot;1&quot;,&#xd;
        &quot;2&quot;,&#xd;
        &quot;3&quot;,&#xd;
        &quot;4&quot;,&#xd;
        &quot;5&quot;,&#xd;
        &quot;6&quot;&#xd;
    ],&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;layers&quot;:1,&#xd;
    &quot;columns&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;rows&quot;:1,&#xd;
    &quot;binType&quot;:&quot;0&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/warehouse-bin/warehouse-bin</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="96784904">error</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="actualBin_Id" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">actualBin_Id</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="新建货类、策略" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基础货类" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-type/cargo-type</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="cargoTypeId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">cargoTypeId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库货类" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pId&quot;:&quot;&quot;,&#xd;
    &quot;isSelectTop&quot;: true,&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-type-of-warehouse/cargo-type-of-warehouse</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="cargoTypeOfWarehouseId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">cargoTypeOfWarehouseId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
  &quot;productionDateVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;expireDateVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;entryDateVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;productionBatchVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;plantVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;boxNoVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;batchCodeVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;returnReasonVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;originCountryVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;boxQtyVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;inventoryMarkVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/lot-attr/lot-attr</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="lotAttrId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">lotAttrId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;2&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/allocate-strategy/allocate-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="allocateStrategyId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">allocateStrategyId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略-分配规则" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;strategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;name&quot;:&quot;${name}${__counter(false,id)}&quot;,&#xd;
    &quot;sequenceNo&quot;:1,&#xd;
    &quot;fixedAreaOrBin&quot;:1,&#xd;
    &quot;enableLotAttrRule&quot;:true,&#xd;
    &quot;outBinRule&quot;:10,&#xd;
    &quot;areas&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;allocateRuleSourceTypes&quot;:[&#xd;
        10,&#xd;
        20,&#xd;
        30,&#xd;
        40,&#xd;
        50,&#xd;
        60&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/allocate-rule/allocate-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;3&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pick-strategy/pick-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="putawayStrategyId1" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">putawayStrategyId1</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略-规则配置" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;strategyId&quot;:&quot;${putawayStrategyId1}&quot;,&#xd;
    &quot;id&quot;:&quot;&quot;,&#xd;
    &quot;name&quot;:&quot;1&quot;,&#xd;
    &quot;sequenceNo&quot;:2,&#xd;
    &quot;pickingOrderType&quot;:2,&#xd;
    &quot;cGroupPickOrderMaxQty&quot;:1000,&#xd;
    &quot;orderMinQtyLimit&quot;:1,&#xd;
    &quot;isSplitByBinQty&quot;:false,&#xd;
    &quot;isSplitByPickOrderVol&quot;:false,&#xd;
    &quot;isSplitByPack&quot;:false,&#xd;
    &quot;secKillTypes&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pick-rule/pick-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略-规则配置" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;strategyId&quot;:&quot;${putawayStrategyId1}&quot;,&#xd;
  &quot;id&quot;: &quot;&quot;,&#xd;
  &quot;name&quot;: &quot;3&quot;,&#xd;
  &quot;sequenceNo&quot;: 3,&#xd;
  &quot;pickingOrderType&quot;: 1,&#xd;
  &quot;cGroupPickOrderMaxQty&quot;: 111,&#xd;
  &quot;orderMinQtyLimit&quot;: 1,&#xd;
  &quot;isSplitByBinQty&quot;: false,&#xd;
  &quot;isSplitByPickOrderVol&quot;: false,&#xd;
  &quot;isSplitByPack&quot;: false,&#xd;
  &quot;secKillTypes&quot;: [],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pick-rule/pick-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;1&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/put-away-strategy/put-away-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="putawayStrategyId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">putawayStrategyId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略-新建规则" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;${name}${__counter(false,id)}&quot;,&#xd;
    &quot;sequenceNo&quot;:1,&#xd;
    &quot;BinUseType&quot;:&quot;&quot;,&#xd;
    &quot;targetAreaId&quot;:&quot;&quot;,&#xd;
    &quot;allowEmpty&quot;:true,&#xd;
    &quot;strategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;putAwayTypes&quot;:[&#xd;
        1&#xd;
    ],&#xd;
    &quot;abcTypes&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;putAwayRuleBinSorts&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;expireDate&quot;:null,&#xd;
    &quot;entryDate&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/put-away-rule/put-away-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="创建商品" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品计量单位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-unit-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="unitId 计量单位" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">unitId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;value&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-1" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-1" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_1" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargoId_1</stringProp>
                  <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                  <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/cargo-setting/warehouse-cargo-setting</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-2" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-2" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_2" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargoId_2</stringProp>
                  <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_2},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/cargo-setting/warehouse-cargo-setting</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-3" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-3" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_3" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargoId_3</stringProp>
                  <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/cargo-setting/warehouse-cargo-setting</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="商品资料获取" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取商品数据" enabled="true">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select code,name from Basic_Cargos where id = ${cargoId_1} or  id = ${cargoId_2} or id =${cargoId_3} </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">code,codename</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="商品资料获取" enabled="false">
            <stringProp name="ForeachController.inputVal">cargoId</stringProp>
            <stringProp name="ForeachController.returnVal">cargoId</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">10</stringProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取商品信息" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: ${cargoId}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/cargo/get-cargo-by-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="code" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="codename" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">codename</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="商品信息赋值" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;code_${__counter(false,code_no)}&quot;,&quot;${code}&quot;);

vars.put(&quot;codename_${__counter(false,codename_no)}&quot;, &quot;${codename}&quot;);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="入库管理" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="收货单创建" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="生成客户指令号" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;customerOrderCode&quot;,&quot;ans${__time(,)}${__counter(FALSE,customerOrderCode)}&quot;);

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;${customerOrderCode}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:0.00001,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;${customerOrderCode}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_2},&#xd;
            &quot;skuCode&quot;: &quot;${codename_2}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_2}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_3},&#xd;
            &quot;skuCode&quot;: &quot;${codename_3}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_3}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="收货单创建" enabled="false"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="生成客户指令号" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;customerOrderCode&quot;,&quot;ans${__time(,)}${__counter(FALSE,customerOrderCode)}&quot;);

</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${__time(,)}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:0.00001,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;${customerOrderCode}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="到货通知单(PC收货）-多商品" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;counter_ji&quot;,&quot;0&quot;);

vars.put(&quot;receiveWorkId&quot;,&quot;&quot;);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">code_id</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取收货管理单号" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select no from In_Asns where CustomerOrderCode like &quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">asnId</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货管理单号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/receive-order/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="creatorId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">creatorId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">ietms[0].creatorId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ASNid" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">asnId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].asnId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取收货信息" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${no_dao}&quot;,&#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-receive</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查LPN效验容器" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;${time}${code_id}&quot;,    //容器号&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/check-lpn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="生成临时容器id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">rq_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="true">
              <stringProp name="ForeachController.inputVal">cargoId</stringProp>
              <stringProp name="ForeachController.returnVal">cargoId</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">10</stringProp>
            </ForeachController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数+1" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${counter_ji});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;counter_ji&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${__V(code_${counter_ji},)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${__V(codename_${counter_ji},)}&quot;,     //商品名称,   &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveWorkId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">receiveWorkId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;receiveWorkId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查看是否生成上架单" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${totalCount}&quot;!=1 &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;putAwayOrderStatus&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="100526016">items</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">totalCount</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后通知" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      收货完成后，没有生成上架单&#xd;
      收货通知单号：${no_dao}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="库内管理" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="商品上架" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;putAwayOrderStatus&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="100526016">items</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="put_id" enabled="true">
                <stringProp name="TestPlan.comments">上架单ID</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">put_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderNo" enabled="true">
                <stringProp name="TestPlan.comments">上架单ID</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">putAwayOrderNo</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;putAwayOrderNo&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架详情" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;:&quot;${outbound_id_1}&quot;,&#xd;
    &quot;pageSize&quot;:100,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/get-by-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="lotValueId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">lotValueId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;lotValueId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="qualityId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">qualityId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;qualityId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="batchNo" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">batchNo</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;batchNo&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cargoId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;cargoId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="put-id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">put-good-id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">details[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品上架" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;:&quot;${put_id}&quot;,&#xd;
    &quot;putAwayWorkerId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${qualityId}&quot;,&#xd;
            &quot;actualLpnId&quot;:null,&#xd;
            &quot;sourceBinId&quot;:&quot;3a04595a-a685-b953-ca11-3465338e8b41&quot;, &#xd;
            &quot;planBinId&quot;:null,&#xd;
//            &quot;actualBinId&quot;:&quot;3a045a25-2ee7-1686-f972-99fccbb28ab7&quot;,&#xd;
            &quot;actualBinId&quot;:&quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;actualQty&quot;:500,&#xd;
            &quot;boxNum&quot;:1,&#xd;
            &quot;lotValueId&quot;:&quot;${lotValueId}&quot;,&#xd;
            &quot;batchNo&quot;:&quot;${batchNo}&quot;,&#xd;
            &quot;id&quot;:&quot;${put-good-id_1}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${qualityId}&quot;,&#xd;
            &quot;actualLpnId&quot;:null,&#xd;
            &quot;sourceBinId&quot;:&quot;3a04595a-a685-b953-ca11-3465338e8b41&quot;,  //内置库位，可写死&#xd;
            &quot;planBinId&quot;:null,&#xd;
//            &quot;actualBinId&quot;:&quot;3a045a25-2ee7-1686-f972-99fccbb28ab7&quot;,  //目标库位&#xd;
            &quot;actualBinId&quot;:&quot;${actualBin_Id}&quot;, &#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;actualQty&quot;:1000,&#xd;
            &quot;boxNum&quot;:1,&#xd;
            &quot;lotValueId&quot;:&quot;${lotValueId}&quot;,&#xd;
            &quot;batchNo&quot;:&quot;${batchNo}&quot;,&#xd;
            &quot;id&quot;:&quot;${put-good-id_2}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${qualityId}&quot;,&#xd;
            &quot;actualLpnId&quot;:null,&#xd;
            &quot;sourceBinId&quot;:&quot;3a04595a-a685-b953-ca11-3465338e8b41&quot;,&#xd;
            &quot;planBinId&quot;:null,&#xd;
//            &quot;actualBinId&quot;:&quot;3a045a25-2ee7-1686-f972-99fccbb28ab7&quot;,&#xd;
            &quot;actualBinId&quot;:&quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;actualQty&quot;:1000,&#xd;
            &quot;boxNum&quot;:1,&#xd;
            &quot;lotValueId&quot;:&quot;${lotValueId}&quot;,&#xd;
            &quot;batchNo&quot;:&quot;${batchNo}&quot;,&#xd;
            &quot;id&quot;:&quot;${put-good-id_3}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;requestId&quot;:&quot;${__UUID}&quot;,&#xd;
    &quot;token&quot;:&quot;3a042b18e076d3843233ae4e12b00554&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/put-away-order/confirmed</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="判断上架单状态是否变更" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${putAwayOrderStatusName}&quot;!=&quot;上架完成&quot;)}
</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理-判断状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="100526016">items</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="put_id" enabled="true">
                  <stringProp name="TestPlan.comments">上架单ID</stringProp>
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">put_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderNo" enabled="true">
                  <stringProp name="TestPlan.comments">上架单ID</stringProp>
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">putAwayOrderNo</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;putAwayOrderNo&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderStatusName" enabled="true">
                  <stringProp name="TestPlan.comments">上架单状态</stringProp>
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">putAwayOrderStatusName</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;putAwayOrderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="false">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="-404062943">全场景造数据</stringProp>
                <stringProp name="641834625">公共方法</stringProp>
                <stringProp name="652232942">判断库存</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="差异单上架" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="判断是否获取差异单明细" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${statusStr}&quot;!=&quot;新建&quot; &amp;&amp; ${w_counter}&lt;5,)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过上架单号查询差异单" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;sourceOrderNo&quot;: &quot;&quot;,&#xd;
    &quot;sourceOrderType&quot;: &quot;1&quot;,&#xd;
    &quot;status&quot;: &quot;10&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/difference-order/paging</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="difference_id" enabled="true">
                  <stringProp name="TestPlan.comments">差异单ID</stringProp>
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">difference_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="statusStr" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">statusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;statusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过上架单号查询差异单" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;sourceOrderNo&quot;: &quot;${putAwayOrderNo}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/difference-order/paging</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="difference_id" enabled="true">
                  <stringProp name="TestPlan.comments">差异单ID</stringProp>
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">difference_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="statusStr" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">statusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;statusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过差异单ID取明细ID" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;differenceOrderId&quot;: &quot;${difference_id}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/difference-order/get-all-detail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="detailId 差异单明细id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">detailId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;detailId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="differenceQty 差异数量" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">differenceQty</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;differenceQty&quot;:(.+?).</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="差异单重新上架" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;id&quot;: &quot;${difference_id}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;differenceOrderDetailId&quot;: &quot;${detailId}&quot;,&#xd;
            &quot;binId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;qty&quot;: 500&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/difference-order/re-put-away</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询库存操作是否完成" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${statusStr}&quot;!=&quot;已处理&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}
</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过上架单号查询差异单" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;sourceOrderNo&quot;: &quot;${putAwayOrderNo}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/difference-order/paging</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="statusStr" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">statusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;statusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      数量调整一直卡在库存扣减中&#xd;
      数量调整单号：${adjustmentOrderNo_1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="数量调整" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="数量调整明细" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;cargoId&quot;: ${cargoId_1},&#xd;
    &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
    &quot;lotValueDto&quot;: {},&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/qty-adjustment-order/get-inventory</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="inventoryAccountId 数量调整id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">inventoryAccountId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行数量调整" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
    &quot;orderSubType&quot;: 10,&#xd;
    &quot;reason&quot;: 0,&#xd;
    &quot;remark&quot;: &quot;&quot;,&#xd;
    &quot;isAutoConfirm&quot;: true,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;inventoryAccountId&quot;: &quot;${inventoryAccountId}&quot;,&#xd;
            &quot;qty&quot;: 10&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/qty-adjustment-order/qty-adjustment-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="adjustmentOrderId 调整订单ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">adjustmentOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="零库存调整" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
    &quot;isAutoConfirm&quot;: true,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lotAttrValueDto&quot;: {},&#xd;
            &quot;skuName&quot;: {&#xd;
                &quot;value&quot;: &quot;3a049251-4d1f-50b2-5573-a5087be8d6d4&quot;,&#xd;
                &quot;label&quot;: &quot;test1&quot;,&#xd;
                &quot;key&quot;: &quot;3a049251-4d1f-50b2-5573-a5087be8d6d4&quot;&#xd;
            },&#xd;
            &quot;skuBarcode&quot;: &quot;test1&quot;,&#xd;
            &quot;name&quot;: &quot;自动化-1&quot;,&#xd;
            &quot;unitId&quot;: &quot;只&quot;,&#xd;
            &quot;qualityId&quot;: &quot;3a0458a8-5325-2782-efcd-eac5132b8a81&quot;,&#xd;
            &quot;binId&quot;: {&#xd;
                &quot;value&quot;: &quot;3a049268-dc70-c8e4-b723-f77cf67095e5&quot;,&#xd;
                &quot;label&quot;: &quot;拣选区&quot;,&#xd;
                &quot;key&quot;: &quot;3a049268-dc70-c8e4-b723-f77cf67095e5&quot;&#xd;
            },&#xd;
            &quot;qty&quot;: 100,&#xd;
            &quot;warehouseBinId&quot;: &quot;3a049268-dc70-c8e4-b723-f77cf67095e5&quot;,&#xd;
            &quot;key&quot;: &quot;b5294c6a96aa49c0b94ea16e7ac1684e&quot;,&#xd;
            &quot;cargoId&quot;: &quot;3a049251-4d1f-50b2-5573-a5087be8d6d4&quot;,&#xd;
            &quot;projectId&quot;: &quot;${project_Id}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/qty-adjustment-order/zero-inventory-adjustment-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询调整订单单号 adjustmentOrderNo" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select NO from OP_AdjustmentOrders where id = ${adjustmentOrderId}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">adjustmentOrderNo</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    ${adjustmentOrderId}&#xd;
  ],&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/qty-adjustment-order/multiple-confirmed</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询库存操作是否完成" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${orderStatusName}&quot;!=&quot;完成&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;no&quot;: &quot;${adjustmentOrderNo_1}&quot;,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/qty-adjustment-order/paging-query</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="orderStatusName" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">orderStatusName</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;orderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});


a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      数量调整一直卡在库存扣减中&#xd;
      数量调整单号：${adjustmentOrderNo_1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf1</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="属性调整" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="属性调整明细" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;cargoId&quot;: ${cargoId_1},&#xd;
  &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
  &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
  &quot;lotValueDto&quot;: {},&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/attribute-adjustment-order/get-inventory</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="inventoryAccountId 属性调整id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">inventoryAccountId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="属性调整-参数写死" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
  &quot;adjustmentTypeId&quot;: &quot;3a045a07-740b-995c-b4fb-9fdc36633fbb&quot;,&#xd;
  &quot;reason&quot;: 0,&#xd;
  &quot;remark&quot;: &quot;&quot;,&#xd;
  &quot;isAutoConfirm&quot;: true,&#xd;
  &quot;details&quot;: [&#xd;
    {&#xd;
      &quot;inventoryAccountId&quot;: &quot;${inventoryAccountId}&quot;,&#xd;
      &quot;actualCustomerId&quot;: &quot;3a04bfb3-cbf9-26c7-e756-4fda17dfe6a0&quot;,&#xd;
      &quot;actualProjectId&quot;: &quot;3a04bfb3-cd97-49d2-a066-3000899cdee2&quot;, //写死，新的业务机会&#xd;
      &quot;actualCargoId&quot;: ${cargoId_2},&#xd;
      &quot;actualQualityId&quot;: &quot;${quality_id}&quot;,  //品质ID&#xd;
      &quot;actualBinId&quot;: &quot;3a04c0c8-2786-36e7-7296-78d688602b91&quot;,   // 写死，该库位为数量调整专用&#xd;
      &quot;qty&quot;: 10,&#xd;
      &quot;actualBatchCode&quot;: &quot;1&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/attribute-adjustment-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="adjustmentOrderId 调整订单ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">adjustmentOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询调整订单单号 adjustmentOrderNo" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select NO from OP_AdjustmentOrders where id = ${adjustmentOrderId}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">adjustmentOrderNo</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询库存操作是否完成" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${orderStatusName}&quot;!=&quot;完成&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;no&quot;: &quot;${adjustmentOrderNo_1}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/attribute-adjustment-order/paging-query</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="orderStatusName" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">orderStatusName</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;orderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="调试取样器" enabled="true">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      属性调整一直卡在库存扣减中&#xd;
      属性调整单号：${adjustmentOrderNo_1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="批属性调整" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性调整明细" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;cargoId&quot;: &quot;3a04c147-a2f1-2b2f-e7eb-ca197dcdc176&quot;,&#xd;
  &quot;warehouseBinId&quot;: &quot;3a04c0c8-2786-36e7-7296-78d688602b91&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
  &quot;lotValueDto&quot;: {},&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/lot-attr-adjustment-order/get-inventory</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="inventoryAccountId 属性调整id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">inventoryAccountId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性调整-参数写死" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;details&quot;: [&#xd;
    {&#xd;
      &quot;inventoryAccountId&quot;: &quot;${inventoryAccountId}&quot;,&#xd;
      &quot;actualLotAttrValueDto&quot;: {&#xd;
        &quot;productionDate&quot;: &quot;2022-06-29&quot;,&#xd;
        &quot;expireDate&quot;: &quot;2023-06-03&quot;,&#xd;
        &quot;entryDate&quot;: &quot;2023-06-03&quot;,&#xd;
        &quot;productionBatch&quot;: &quot;1&quot;,&#xd;
        &quot;plant&quot;: &quot;1&quot;,&#xd;
        &quot;boxNo&quot;: &quot;1&quot;,&#xd;
        &quot;batchCode&quot;: &quot;1&quot;,&#xd;
        &quot;returnReason&quot;: &quot;1&quot;,&#xd;
        &quot;virtualWarehouse&quot;: &quot;1&quot;,&#xd;
        &quot;boxQty&quot;: 1,&#xd;
        &quot;purchaseOrder&quot;: &quot;1&quot;&#xd;
      },&#xd;
      &quot;qty&quot;: 1&#xd;
    }&#xd;
  ],&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
  &quot;isAutoConfirm&quot;: true,&#xd;
  &quot;orderSubType&quot;: &quot;&quot;,&#xd;
  &quot;remark&quot;: &quot;&quot;,&#xd;
  &quot;reason&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/lot-attr-adjustment-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="adjustmentOrderId 调整订单ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">adjustmentOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询调整订单单号 adjustmentOrderNo" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select NO from OP_AdjustmentOrders where id = ${adjustmentOrderId}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">adjustmentOrderNo</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询库存操作是否完成" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${orderStatusName_pi}&quot;!=&quot;完成&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;no&quot;: &quot;${adjustmentOrderNo_1}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/lot-attr-adjustment-order/paging-query</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="orderStatusName" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">orderStatusName_pi</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;orderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      批属性调整一直卡在库存扣减中&#xd;
      批属性调整单号：${adjustmentOrderNo_1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="普通出库" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;outBoundStatusStr&quot;,&quot;0&quot;); //普通出库查询分配状态

vars.put(&quot;w_counter_kcfp&quot;,&quot;0&quot;); //普通出库库存分配后状态</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建普通出库单" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="手动创建普通出库通知单接口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;20&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;30&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:0.0001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
         {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:0.0001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
            	&#xd;
            }&#xd;
            },&#xd;
             {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:0.0001,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
            }&#xd;
            }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a045a27-1152-04d4-5a7c-b4b2ee35db56&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="JDBC 预处理程序" enabled="true">
                <stringProp name="dataSource">mysql</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">select iaa.CargoId
from OP_InventoryAccountAdvances iaa INNER JOIN INV_AccountBalances iab ON iab.Id = iaa.Id
where iab.AvailableQty &gt; 1000</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">id</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCPreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="EDI创建普通出库通知单接口" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;adapterCode&quot;: &quot;JD&quot;,   //适配器&#xd;
	&quot;deliveryOrder&quot;: {&#xd;
		&quot;deliveryOrderCode&quot;: &quot;dd${time}${ti}&quot;,  //客户指令号&#xd;
		&quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
		&quot;businessOrderType&quot;: &quot;PTCK&quot;,&#xd;
		&quot;orderType&quot;: 20,&#xd;
		&quot;customerCode&quot;: &quot;LCS202100000001&quot;,&#xd;
		&quot;opportunityCode&quot;: &quot;PR202100000001&quot;,&#xd;
		&quot;warehouseCode&quot;: &quot;W100001&quot;,&#xd;
		&quot;transportMode&quot;: 10,&#xd;
		&quot;receivedTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;latestOutBoundTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;requiredDeliveryTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;requiredSendTime&quot;: &quot;2022-05-12T10:08:19.600Z&quot;,&#xd;
		&quot;receiverInfo&quot;: {&#xd;
			&quot;name&quot;: &quot;开心超人&quot;,&#xd;
			&quot;zipCode&quot;: &quot;518000&quot;,&#xd;
			&quot;tel&quot;: &quot;1888888888&quot;,&#xd;
			&quot;province&quot;: &quot;广东省&quot;,&#xd;
			&quot;city&quot;: &quot;深圳市&quot;,&#xd;
			&quot;area&quot;: &quot;南山区&quot;,&#xd;
			&quot;detailAddress&quot;: &quot;越海全球供应链&quot;&#xd;
		},&#xd;
		&quot;remark&quot;: &quot;订单备注:测试&quot;&#xd;
	},&#xd;
	&quot;orderLines&quot;: [&#xd;
	 { &#xd;
            &quot;orderLineNo&quot;:&quot;0100&quot;,   //序号&#xd;
            &quot;cargoCode&quot;:&quot;${code}&quot;,   //sku&#xd;
            &quot;qualityCode&quot;:&quot;${quality_name}&quot;,  //品质&#xd;
            &quot;noticeQty&quot;:333,    //通知数量&#xd;
            &quot;batchCode&quot;:&quot;1&quot;,  //行号&#xd;
            &quot;produceCode&quot;:&quot;string&quot;,&#xd;
            &quot;remark&quot;:&quot;备注&quot;,&#xd;
        }&#xd;
	]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/open-out-bound-notice-order/stock-out-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言响应状态200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="当查询出订单后跳出" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${customerOrderCode}&quot;!=&quot;dd${time}${ti}&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单详情" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;2029-03-22 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-notice-order/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待3秒" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">pt_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues"> </stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">no_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues"> </stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">customerOrderCode</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;customerOrderCode&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开始出库-创建普通出库单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${pt_id}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_id}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bounding</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看新建出库单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;2029-03-22 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pt_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">no_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="分配库存" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配成功" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;outBoundOrderIds&quot;:[&#xd;
        &quot;${pt_id1}&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-order/allocate-by-system</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">库存分配不够</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询分配状态" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr}&quot;!=&quot;已分配&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询分配状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待5秒" enabled="true">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言状态" enabled="false">
                  <stringProp name="JSON_PATH">items[0].outBoundStatusStr</stringProp>
                  <stringProp name="EXPECTED_VALUE">已分配</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      普通出库单状态一直在库存扣减中&#xd;
      普通出库单号：${no_id1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="批次确认与拣货" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="使用批量创建批次" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;outBoundOrderIds&quot;:[&#xd;
        &quot;${pt_id1}&quot;&#xd;
    ],&#xd;
   &quot;pickStrategyId&quot;:&quot;${putawayStrategyId1}&quot;,     //拣货策略id&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/generate-pick-batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取批量批次号id" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;outBoundOrderNo&quot;:&quot;${no_id1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/wave/paging-to-bWave-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取合并批次id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">hbpc_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取合并批次单号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">hbpc_no</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进行批次确认" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;waveIds&quot;:[&#xd;
        &quot;${hbpc_id}&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/confirm-pick-batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取拣货单号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${hbpc_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-common-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">jhd_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号单号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">jhd_no</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货开始" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pickingUser&quot;:&quot;caoyi&quot;,&#xd;
    &quot;no&quot;:&quot;${jhd_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/start-picking</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货结束" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${jhd_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;,&#xd;
      &quot;requestId&quot;: &quot;${__UUID}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/sale-end-picking</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1504044297">拣货单号不存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">5</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;outBoundStatusStr&quot;,&quot;0&quot;); //普通出库查询分配状态

vars.put(&quot;w_counter_kcfp&quot;,&quot;0&quot;); //普通出库库存分配后状态

vars.put (&quot;outBoundStatusStr1&quot;, &quot;0&quot;);

vars.put (&quot;pickingOrderStatusStr&quot;, &quot;0&quot;);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="拣货结束后查看拣货单状态" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${pickingOrderStatusStr}&quot;!=&quot;拣货结束&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取拣货单号" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${hbpc_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号id" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">jhd_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取拣货单号单号" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">jhd_no</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="pickingOrderStatusStr 拣货单状态" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">pickingOrderStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;pickingOrderStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归&#xd;
      拣货结束后拣货单一直库存扣减中&#xd;
      拣货单号：${jhd_no}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;所有人&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: &quot;@all&quot;&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="逆向流程" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消拣货结束" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;pickingOrderId&quot;: &quot;${jhd_id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/cancel-common-picking-end</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消拣货开始" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pickingOrderId&quot;: &quot;${jhd_id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/cancel-common-picking-start</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消批次确认" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;waveIds&quot;: [&#xd;
        &quot;${hbpc_id}&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/wave/cancel-confirm-pick-batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消拣货批次" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;outBoundOrderIds&quot;: [&#xd;
    &quot;${pt_id1}&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/wave/cancel-generate-pick-batch</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消分配" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;:&quot;${pt_id1}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/out-bound-order/cancel-allocate</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询分配状态" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr1}&quot;!=&quot;新建&quot; &amp;&amp; ${w_counter_kcfp}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询分配状态" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;dd${time}${ti}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-common-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="等待5秒" enabled="true">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="断言状态" enabled="false">
                  <stringProp name="JSON_PATH">items[0].outBoundStatusStr</stringProp>
                  <stringProp name="EXPECTED_VALUE">已分配</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">true</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outBoundStatusStr1</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter_kcfp}); // 普通出库库存分配

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter_kcfp&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      普通出库单取消分配后状态没回到新建&#xd;
      普通出库单号：${no_id1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="分配库存" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="84424398">YHWMS</stringProp>
                <stringProp name="-1364696058">全流程回归</stringProp>
                <stringProp name="817305669">普通出库</stringProp>
                <stringProp name="662071660">分配库存</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="批次确认拣货" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="84424398">YHWMS</stringProp>
                <stringProp name="-1364696058">全流程回归</stringProp>
                <stringProp name="817305669">普通出库</stringProp>
                <stringProp name="-736525900">批次确认与拣货</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="批次确认" enabled="false">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="-404062943">全场景造数据</stringProp>
                <stringProp name="817305669">普通出库</stringProp>
                <stringProp name="-736525900">批次确认与拣货</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="出库确认" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${pt_id1}&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/out-bound-order/commorder-confirm-out-bound</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="销售出库" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="新建销售出库单" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="edi创建" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;adapterCode&quot;: &quot;QiMenAdapter&quot;,&#xd;
	&quot;deliveryOrder&quot;: {&#xd;
		&quot;deliveryOrderCode&quot;: &quot;edi${time}&quot;,&#xd;
		&quot;transportMode&quot;: 20,&#xd;
		&quot;orderSourceCode&quot;: &quot;ZY&quot;,&#xd;
		&quot;sourceOrderNo&quot;: &quot;07261&quot;,&#xd;
		&quot;customerPurchaseOrder&quot;: null,&#xd;
		&quot;businessOrderType&quot;: &quot;JYCK&quot;,&#xd;
		&quot;warehouseCode&quot;: &quot;W100001&quot;,&#xd;
		&quot;orderFlag&quot;: &quot;COD&quot;,&#xd;
		&quot;shopNick&quot;: &quot;淘宝店&quot;,&#xd;
		&quot;logisticsCode&quot;: &quot;ZTO&quot;,&#xd;
		&quot;expressCode&quot;: &quot;Y12345&quot;,&#xd;
		&quot;deliveryRequirements&quot;: {&#xd;
			&quot;scheduleType&quot;: &quot;101&quot;,&#xd;
			&quot;scheduleDay&quot;: &quot;2022-06-10&quot;,&#xd;
			&quot;scheduleStartTime&quot;: &quot;12:00:00&quot;,&#xd;
			&quot;scheduleEndTime&quot;: &quot;13:00:00&quot;,&#xd;
			&quot;deliveryType&quot;: &quot;PTPS&quot;&#xd;
		},&#xd;
		&quot;senderInfo&quot;: {&#xd;
			&quot;company&quot;: &quot;淘宝&quot;,&#xd;
			&quot;name&quot;: &quot;老王&quot;,&#xd;
			&quot;zipCode&quot;: &quot;043300&quot;,&#xd;
			&quot;companyCode&quot;: null,&#xd;
			&quot;tel&quot;: &quot;808786543&quot;,&#xd;
			&quot;mobile&quot;: &quot;13423456785&quot;,&#xd;
			&quot;email&quot;: &quot;878987654@qq.com&quot;,&#xd;
			&quot;countryCode&quot;: &quot;045565&quot;,&#xd;
			&quot;province&quot;: &quot;浙江省&quot;,&#xd;
			&quot;city&quot;: &quot;杭州&quot;,&#xd;
			&quot;area&quot;: &quot;余杭&quot;,&#xd;
			&quot;town&quot;: &quot;横加桥&quot;,&#xd;
			&quot;detailAddress&quot;: &quot;杭州市余杭区989号&quot;&#xd;
		},&#xd;
		&quot;receiverInfo&quot;: {&#xd;
			&quot;idType&quot;: &quot;1&quot;,&#xd;
			&quot;idNumber&quot;: &quot;12345&quot;,&#xd;
			&quot;oaid&quot;: &quot;oaid&quot;,&#xd;
			&quot;company&quot;: &quot;淘宝&quot;,&#xd;
			&quot;name&quot;: &quot;老王&quot;,&#xd;
			&quot;zipCode&quot;: &quot;043300&quot;,&#xd;
			&quot;companyCode&quot;: null,&#xd;
			&quot;tel&quot;: &quot;808786543&quot;,&#xd;
			&quot;mobile&quot;: &quot;13423456785&quot;,&#xd;
			&quot;email&quot;: &quot;878987654@qq.com&quot;,&#xd;
			&quot;countryCode&quot;: &quot;045565&quot;,&#xd;
			&quot;province&quot;: &quot;浙江省&quot;,&#xd;
			&quot;city&quot;: &quot;杭州&quot;,&#xd;
			&quot;area&quot;: &quot;余杭&quot;,&#xd;
			&quot;town&quot;: &quot;横加桥&quot;,&#xd;
			&quot;detailAddress&quot;: &quot;杭州市余杭区989号&quot;&#xd;
		},&#xd;
		&quot;isUrgency&quot;: true,&#xd;
		&quot;invoiceFlag&quot;: true,&#xd;
		&quot;invoices&quot;: [{&#xd;
			&quot;type&quot;: &quot;INVOICE&quot;,&#xd;
			&quot;header&quot;: &quot;天猫科技有限公司&quot;,&#xd;
			&quot;amount&quot;: 100.0,&#xd;
			&quot;content&quot;: &quot;增值税100元&quot;,&#xd;
			&quot;detail&quot;: {&#xd;
				&quot;items&quot;: []&#xd;
			},&#xd;
			&quot;taxNumber&quot;: &quot;123&quot;&#xd;
		}],&#xd;
		&quot;remark&quot;: &quot;备注信息&quot;,&#xd;
		&quot;customerCode&quot;: &quot;LCS202100000001&quot;,&#xd;
		&quot;opportunityCode&quot;: &quot;PR202100000001&quot;,&#xd;
		&quot;receivedTime&quot;: &quot;2022-06-09T09:00:00&quot;,&#xd;
		&quot;latestOutBoundTime&quot;: &quot;2022-06-10T09:00:00&quot;,&#xd;
		&quot;requiredDeliveryTime&quot;: null,&#xd;
		&quot;requiredSendTime&quot;: null,&#xd;
		&quot;latestCollectionTime&quot;: &quot;2022-06-10T09:30:00&quot;,&#xd;
		&quot;oaidOrderSourceCode&quot;: null,&#xd;
		&quot;allowStockOut&quot;: true&#xd;
	},&#xd;
	&quot;orderLines&quot;: [{&#xd;
		&quot;orderLineNo&quot;: &quot;0100&quot;,&#xd;
		&quot;cargoCode&quot;: &quot;ces-03&quot;,&#xd;
		&quot;cargoName&quot;: &quot;IN123&quot;,&#xd;
		&quot;qualityCode&quot;: &quot;良品&quot;,&#xd;
		&quot;noticeQty&quot;: 2.0,&#xd;
		&quot;batchCode&quot;: &quot;PCODE123&quot;,&#xd;
		&quot;produceCode&quot;: &quot;P1234&quot;,&#xd;
		&quot;productDate&quot;: &quot;2022-06-01T00:00:00&quot;,&#xd;
		&quot;expireDate&quot;: &quot;2023-05-31T00:00:00&quot;&#xd;
	}],&#xd;
	&quot;extendProps&quot;: null&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">https://operations.yhwms.api.staging.yhglobal.cn/api/app/open-out-bound-notice-order/delivery-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售出库通知单(手动创建页面)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;10&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;edc${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${carrier_Id}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;consigneeName&quot;:&quot;自动化&quot;,&#xd;
    &quot;consigneeTel&quot;:&quot;17777777777&quot;,&#xd;
    &quot;province&quot;:&quot;广东省&quot;,&#xd;
    &quot;city&quot;:&quot;深圳市&quot;,&#xd;
    &quot;area&quot;:&quot;罗湖区&quot;,&#xd;
    &quot;consigneeAddress&quot;:&quot;自动化&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="当创建成功就跳出" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${customerOrderCode}&quot;!=&quot;edc${time}${ti}&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单详情" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;edc${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;2021-03-14 00:00:00&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;2024-03-22 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/query/api/app/out-bound-notice-order/paging-sale-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">dzd_id1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">dzh_id1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">customerOrderCode</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;customerOrderCode&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="summaryNwgt 重量" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">summaryNwgt</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;summaryNwgt&quot;:(.+?),</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="循环校验" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="869052411">测试计划</stringProp>
                  <stringProp name="869052411">测试计划</stringProp>
                  <stringProp name="914278565">用例集合</stringProp>
                  <stringProp name="641834625">公共方法</stringProp>
                  <stringProp name="758907536">循环校验</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开始出库-创建销售出库单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${dzd_id1}&quot;,&#xd;
            &quot;no&quot;:&quot;${dzh_id1}&quot;&#xd;
        },&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/out-bound-notice-order/sale-out-bounding</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message">204</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看新建出库单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;edc${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,,P-1D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,,P1D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-order/paging-sale-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id11" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">dzd_id11</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号11" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">dzh_id11</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outBoundOrder_id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">outBoundOrder_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="out_no 出库单号" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">out_no</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="当状态更新为预分配则跳出" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${outBoundStatusStr}&quot;!=&quot;预分配&quot;&amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看新建出库单" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;customerOrderCode&quot;:&quot;edc${time}${ti}&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,,P-1D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(yyyy-MM-dd HH:mm:ss,,P1D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/out-bound-order/paging-sale-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单id11" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">dzd_id11</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取订单号11" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">dzh_id11</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">2000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.*?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败${retry}次后退出" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      销售出库状态没有变更为预分配&#xd;
      出库单号：${out_no}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单预分配" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;outBoundOrderIds&quot;: [&#xd;
        &quot;${outBoundOrder_id}&quot;&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-order/pre-allot</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="波次汇总,确认" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="波次汇总" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 100,&#xd;
  &quot;customerId&quot;: &quot;&quot;,&#xd;
  &quot;outBoundType&quot;: 10,&#xd;
  &quot;creationStartTime&quot;: &quot;&quot;,&#xd;
  &quot;creationEndTime&quot;: &quot;&quot;,&#xd;
  &quot;orderSource&quot;: [],&#xd;
  &quot;latestOutBoundStartTime&quot;: &quot;&quot;,&#xd;
  &quot;latestOutBoundEndTime&quot;: &quot;&quot;,&#xd;
  &quot;carrierId&quot;: &quot;&quot;,&#xd;
  &quot;customerOrderCode&quot;: &quot;&quot;,&#xd;
  &quot;consigneeProvince&quot;: &quot;&quot;,&#xd;
  &quot;no&quot;: &quot;${dzh_id11}&quot;,&#xd;
  &quot;logisticsNo&quot;: &quot;&quot;,&#xd;
  &quot;summarySkuMinQty&quot;: &quot;&quot;,&#xd;
  &quot;summarySkuMaxQty&quot;: &quot;&quot;,&#xd;
  &quot;summaryNoticeMinQty&quot;: &quot;&quot;,&#xd;
  &quot;summaryNoticeMaxQty&quot;: &quot;&quot;,&#xd;
  &quot;inShopName&quot;: &quot;&quot;,&#xd;
  &quot;notInShopName&quot;: &quot;&quot;,&#xd;
  &quot;orderTagValue&quot;: &quot;&quot;,&#xd;
  &quot;paramsName&quot;: &quot;&quot;,&#xd;
  &quot;orderSourceCode&quot;: &quot;&quot;,&#xd;
   &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
   &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-waving-order/query-and-create-wave-query-result</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="queryId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">queryId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.queryId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="波次汇总选择策略确认" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pickingStrategyId&quot;:&quot;${putawayStrategyId1}&quot;,&#xd;
    &quot;isLastWave&quot;:false,&#xd;
    &quot;detail&quot;:[&#xd;
        {&#xd;
            &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
            &quot;carrierId&quot;:&quot;${carrier_Id}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;queryId&quot;:&quot;${queryId}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/wave-summary</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取波次单号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;outBoundOrderNo&quot;:&quot;${dzh_id11}&quot;,&#xd;
    &quot;beginCreationTime&quot;:&quot;2021-04-11 00:00:00&quot;,&#xd;
    &quot;endCreationTime&quot;:&quot;2025-04-19 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/wave/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="IDbc_id1" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bc_id1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.items[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="单号bc_dh1" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bc_dh1</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.items[0].waveNo</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="波次确认" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;waveId&quot;:[&#xd;
        &quot;${bc_id1}&quot;&#xd;
    ],&#xd;
   &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/wave/wave-confirm</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应204断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49590">204</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看是否波次确认报错" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;outBoundOrderNo&quot;:&quot;${dzh_id11}&quot;,&#xd;
    &quot;beginCreationTime&quot;:&quot;2021-04-11 00:00:00&quot;,&#xd;
    &quot;endCreationTime&quot;:&quot;2025-04-19 00:00:00&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/wave/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="failAllocateReason 波次确认状态" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">failAllocateReason</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;failAllocateReason&quot;:(.+?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="当波次确认出错时" enabled="true">
              <stringProp name="IfController.condition">${failAllocateReason}!=&quot;&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      波次确认出错了&#xd;
      波次单号：&quot;${bc_dh1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="拣货" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查询是否生成拣货单号" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${pickingOrderStatusStr}&quot;!=&quot;新建&quot; &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取拣货单单号" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${bc_dh1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-sale-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="单号jh_dh1" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">jh_dh1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">pickingOrderStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;pickingOrderStatusStr&quot;:&quot;(.*?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块控制器" enabled="false">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="869052411">测试计划</stringProp>
                  <stringProp name="869052411">测试计划</stringProp>
                  <stringProp name="-404062943">全场景造数据</stringProp>
                  <stringProp name="641834625">公共方法</stringProp>
                  <stringProp name="758907536">循环校验</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货开始" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pickingUser&quot;:&quot;caoyi&quot;,&#xd;
    &quot;no&quot;:&quot;${jh_dh1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/sale-start-picking</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">检查请求和返回code</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货结束" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${jh_dh1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/picking-order/sale-end-picking</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="判断拣货单是否拣货结束成功" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${pickingOrderStatusStr}&quot;!=&quot;拣货结束&quot;)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="判断拣货单是否拣货结束成功" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${bc_dh1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-sale-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="单号jh_dh1" enabled="false">
                  <stringProp name="JSONPostProcessor.referenceNames">jh_dh1</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">.items[0].no</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">pickingOrderStatusStr</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;pickingOrderStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">jh_dh1</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="包裹管理" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看包裹号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;pickOrderNo&quot;:&quot;${jh_dh1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/order-package/paging-sale-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="判断是否生成包裹号" enabled="true">
                <stringProp name="JSON_PATH">items[0].pickOrderNo</stringProp>
                <stringProp name="EXPECTED_VALUE">${jh_dh1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取包裹单号bg_no" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bg_no</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="actualPackageId 包裹ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">actualPackageId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;actualPackageId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看包裹详情" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;id&quot;: &quot;${actualPackageId}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/order-package/paging-detail-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="重新获取barcodes，便于下面循环" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">barcodes</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;barcodes&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="循环质检商品数量" enabled="true">
              <stringProp name="ForeachController.inputVal">barcodes</stringProp>
              <stringProp name="ForeachController.returnVal">barcodes</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">10</stringProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="包裹质检" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;orderPackageNo&quot;: &quot;${bg_no}&quot;,&#xd;
  &quot;workStationId&quot;: &quot;${workStationId}&quot;,&#xd;
  &quot;barcode&quot;: &quot;${barcodes}&quot;,&#xd;
  &quot;boxNo&quot;: &quot;&quot;,&#xd;
  &quot;qty&quot;: 10,&#xd;
  &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/order-package-quality-check/quality-check-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="输入包材信息" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;orderPackageNo&quot;: &quot;${bg_no}&quot;,&#xd;
  &quot;packMaterialCode&quot;: &quot;baocai&quot;,&#xd;
  &quot;workStationId&quot;: &quot;${workStationId}&quot;,&#xd;
  &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/order-package-quality-check/pack-material-competed-quality-check</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看包裹号(提取运单号)" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;pickOrderNo&quot;:&quot;${jh_dh1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/order-package/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取运单号bg_ydh" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bg_ydh</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].logisticsNo</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="打板" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成临时容器" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;${time}${code_id}&quot;,    //容器号&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/check-lpn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="生成临时容器id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">rq_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;no&quot;: &quot;${bg_ydh}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pack-board-order/check-weigh</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="称重打版" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;actualWgt&quot;: &quot;${summaryNwgt}&quot;,&#xd;
  &quot;containerNo&quot;: &quot;${time}${code_id}&quot;,&#xd;
  &quot;logisticsNo&quot;: &quot;${bg_ydh}&quot;,&#xd;
  &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pack-board-order/board</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="完成打版" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;containerNo&quot;: &quot;${bg_ydh}&quot;,&#xd;
  &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pack-board-order/board-completed</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="交接" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取交接数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;packBoardStatus&quot;: &quot;20&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/pack-board-order/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="containerNo 交接容器号" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">containerNo</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;containerNo&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="交接" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;containerCode&quot;: &quot;${containerNo}&quot;,&#xd;
  &quot;handOverOrderId&quot;: null,&#xd;
  &quot;carNo&quot;: &quot;${containerNo}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/hand-over-order/verify-container-code</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="交接获取容器号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;carNo&quot;: &quot;${containerNo}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/hand-over-order/verify-car-no</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="containerId 完成交接需要" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">containerId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;containerId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="handOverOrderId 完成交接需要" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">handOverOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;handOverOrderId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="完成交接" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;handOverOrderId&quot;: &quot;${handOverOrderId}&quot;,&#xd;
  &quot;containerIds&quot;: [&#xd;
    &quot;${containerId}&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/hand-over-order/hand-overed</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="波次汇总" enabled="false"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="创建出库单" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="大宗-50商品" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
  &quot;type&quot;: &quot;10&quot;,&#xd;
  &quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
  &quot;customerOrderCode&quot;: &quot;大宗${__time(ddSS,)}${__counter(FALSE,)}&quot;,&#xd;
  &quot;transportMode&quot;: &quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${boci_carrierId}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
  &quot;consigneeName&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;consigneeTel&quot;: &quot;123&quot;,&#xd;
  &quot;province&quot;: &quot;山西省&quot;,&#xd;
  &quot;city&quot;: &quot;阳泉市&quot;,&#xd;
  &quot;area&quot;: &quot;城区&quot;,&#xd;
  &quot;consigneeAddress&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;createBasicOutBoundNoticeOrderDetails&quot;: [&#xd;
    {&#xd;
      &quot;cargoId&quot;: ${boci_good_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 50,&#xd;
      &quot;nwgt&quot;: 50,&#xd;
      &quot;gwgt&quot;: 50,&#xd;
      &quot;volume&quot;: 50,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="单品多件-循环7" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">7</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单品多件" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
  &quot;type&quot;: &quot;10&quot;,&#xd;
  &quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
  &quot;customerOrderCode&quot;: &quot;单品多件${__time(ddSS,)}${__counter(FALSE,)}&quot;,&#xd;
  &quot;transportMode&quot;: &quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${boci_carrierId}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
  &quot;consigneeName&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;consigneeTel&quot;: &quot;123&quot;,&#xd;
  &quot;province&quot;: &quot;山西省&quot;,&#xd;
  &quot;city&quot;: &quot;阳泉市&quot;,&#xd;
  &quot;area&quot;: &quot;城区&quot;,&#xd;
  &quot;consigneeAddress&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;createBasicOutBoundNoticeOrderDetails&quot;: [&#xd;
    {&#xd;
      &quot;cargoId&quot;: ${boci_good_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 2,&#xd;
      &quot;nwgt&quot;: 2,&#xd;
      &quot;gwgt&quot;: 2,&#xd;
      &quot;volume&quot;: 2,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="单品单件-循环6" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">6</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="单品多件" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
  &quot;type&quot;: &quot;10&quot;,&#xd;
  &quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
  &quot;customerOrderCode&quot;: &quot;单品多件${__time(ddSS,)}${__counter(FALSE,)}&quot;,&#xd;
  &quot;transportMode&quot;: &quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${boci_carrierId}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
  &quot;consigneeName&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;consigneeTel&quot;: &quot;123&quot;,&#xd;
  &quot;province&quot;: &quot;山西省&quot;,&#xd;
  &quot;city&quot;: &quot;阳泉市&quot;,&#xd;
  &quot;area&quot;: &quot;城区&quot;,&#xd;
  &quot;consigneeAddress&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;createBasicOutBoundNoticeOrderDetails&quot;: [&#xd;
    {&#xd;
      &quot;cargoId&quot;: ${boci_good_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 1,&#xd;
      &quot;nwgt&quot;: 1,&#xd;
      &quot;gwgt&quot;: 1,&#xd;
      &quot;volume&quot;: 1,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="多品单件-循环7" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">7</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="多品单件" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
  &quot;type&quot;: &quot;10&quot;,&#xd;
  &quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
  &quot;customerOrderCode&quot;: &quot;多品单件${__time(ddSS,)}${__counter(FALSE,)}&quot;,&#xd;
  &quot;transportMode&quot;: &quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${boci_carrierId}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
  &quot;consigneeName&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;consigneeTel&quot;: &quot;123&quot;,&#xd;
  &quot;province&quot;: &quot;山西省&quot;,&#xd;
  &quot;city&quot;: &quot;阳泉市&quot;,&#xd;
  &quot;area&quot;: &quot;城区&quot;,&#xd;
  &quot;consigneeAddress&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;createBasicOutBoundNoticeOrderDetails&quot;: [&#xd;
    {&#xd;
      &quot;cargoId&quot;: ${boci_good_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 1,&#xd;
      &quot;nwgt&quot;: 1,&#xd;
      &quot;gwgt&quot;: 1,&#xd;
      &quot;volume&quot;: 1,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    },{&#xd;
      &quot;cargoId&quot;: ${boci_good_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 1,&#xd;
      &quot;nwgt&quot;: 1,&#xd;
      &quot;gwgt&quot;: 1,&#xd;
      &quot;volume&quot;: 1,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="多品多件-循环5" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">5</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="多品多件" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
  &quot;type&quot;: &quot;10&quot;,&#xd;
  &quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
  &quot;customerOrderCode&quot;: &quot;多品多件${__time(ddSS,)}${__counter(FALSE,)}&quot;,&#xd;
  &quot;transportMode&quot;: &quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${boci_carrierId}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
  &quot;consigneeName&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;consigneeTel&quot;: &quot;123&quot;,&#xd;
  &quot;province&quot;: &quot;山西省&quot;,&#xd;
  &quot;city&quot;: &quot;阳泉市&quot;,&#xd;
  &quot;area&quot;: &quot;城区&quot;,&#xd;
  &quot;consigneeAddress&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;createBasicOutBoundNoticeOrderDetails&quot;: [&#xd;
    {&#xd;
      &quot;cargoId&quot;: ${boci_good_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 2,&#xd;
      &quot;nwgt&quot;: 2,&#xd;
      &quot;gwgt&quot;: 2,&#xd;
      &quot;volume&quot;: 2,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    },{&#xd;
      &quot;cargoId&quot;: ${boci_good_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 2,&#xd;
      &quot;nwgt&quot;: 2,&#xd;
      &quot;gwgt&quot;: 2,&#xd;
      &quot;volume&quot;: 2,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="2号单品2件" enabled="false">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">2</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2号单品2件" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
  &quot;type&quot;: &quot;10&quot;,&#xd;
  &quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
  &quot;customerOrderCode&quot;: &quot;2号2件${__time(ddSS,)}${__counter(FALSE,)}&quot;,&#xd;
  &quot;transportMode&quot;: &quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${boci_carrierId}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
  &quot;consigneeName&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;consigneeTel&quot;: &quot;123&quot;,&#xd;
  &quot;province&quot;: &quot;山西省&quot;,&#xd;
  &quot;city&quot;: &quot;阳泉市&quot;,&#xd;
  &quot;area&quot;: &quot;城区&quot;,&#xd;
  &quot;consigneeAddress&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;createBasicOutBoundNoticeOrderDetails&quot;: [&#xd;
    {&#xd;
      &quot;cargoId&quot;: ${boci_good_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 2,&#xd;
      &quot;nwgt&quot;: 2,&#xd;
      &quot;gwgt&quot;: 2,&#xd;
      &quot;volume&quot;: 2,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="多品2单" enabled="false"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="多品单件" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
  &quot;type&quot;: &quot;10&quot;,&#xd;
  &quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
  &quot;customerOrderCode&quot;: &quot;2号2件${__time(SS,)}${__counter(FALSE,)}&quot;,&#xd;
  &quot;transportMode&quot;: &quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${boci_carrierId}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
  &quot;consigneeName&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;consigneeTel&quot;: &quot;123&quot;,&#xd;
  &quot;province&quot;: &quot;山西省&quot;,&#xd;
  &quot;city&quot;: &quot;阳泉市&quot;,&#xd;
  &quot;area&quot;: &quot;城区&quot;,&#xd;
  &quot;consigneeAddress&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;createBasicOutBoundNoticeOrderDetails&quot;: [&#xd;
    {&#xd;
      &quot;cargoId&quot;: ${boci_good_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 2,&#xd;
      &quot;nwgt&quot;: 2,&#xd;
      &quot;gwgt&quot;: 2,&#xd;
      &quot;volume&quot;: 2,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    },{&#xd;
      &quot;cargoId&quot;: ${boci_good_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 2,&#xd;
      &quot;nwgt&quot;: 2,&#xd;
      &quot;gwgt&quot;: 2,&#xd;
      &quot;volume&quot;: 2,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="多品单件" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
  &quot;type&quot;: &quot;10&quot;,&#xd;
  &quot;orderSourceCode&quot;: &quot;JD&quot;,&#xd;
  &quot;customerOrderCode&quot;: &quot;1号2件${__time(SS,)}${__counter(FALSE,)}&quot;,&#xd;
  &quot;transportMode&quot;: &quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${boci_carrierId}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
  &quot;consigneeName&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;consigneeTel&quot;: &quot;123&quot;,&#xd;
  &quot;province&quot;: &quot;山西省&quot;,&#xd;
  &quot;city&quot;: &quot;阳泉市&quot;,&#xd;
  &quot;area&quot;: &quot;城区&quot;,&#xd;
  &quot;consigneeAddress&quot;: &quot;波次汇总&quot;,&#xd;
  &quot;createBasicOutBoundNoticeOrderDetails&quot;: [&#xd;
    {&#xd;
      &quot;cargoId&quot;: ${boci_good_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 2,&#xd;
      &quot;nwgt&quot;: 2,&#xd;
      &quot;gwgt&quot;: 2,&#xd;
      &quot;volume&quot;: 2,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    },{&#xd;
      &quot;cargoId&quot;: ${boci_good_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
      &quot;qty&quot;: 2,&#xd;
      &quot;nwgt&quot;: 2,&#xd;
      &quot;gwgt&quot;: 2,&#xd;
      &quot;volume&quot;: 2,&#xd;
      &quot;currency&quot;: &quot;RMB&quot;,&#xd;
      &quot;lotAttrValueDto&quot;: {}&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售出库通知单(手动创建页面)" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;10&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;edc${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${carrier_Id}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;consigneeName&quot;:&quot;自动化&quot;,&#xd;
    &quot;consigneeTel&quot;:&quot;17777777777&quot;,&#xd;
    &quot;province&quot;:&quot;广东省&quot;,&#xd;
    &quot;city&quot;:&quot;深圳市&quot;,&#xd;
    &quot;area&quot;:&quot;罗湖区&quot;,&#xd;
    &quot;consigneeAddress&quot;:&quot;自动化&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">//wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 100,&#xd;
    &quot;carrierId&quot;:&quot;${boci_carrierId}&quot;,&#xd;
  &quot;creationStartTime&quot;: &quot;2022-07-07 00:00:00&quot;,&#xd;
  &quot;creationEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd HH:mm:ss,,P1D,,)}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/out-bound-notice-order/paging-sale-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outBoundStatusStr 查询出库单状态" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">outBoundStatusStr</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;outBoundStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="bc_id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">boci_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="boci_no" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">boci_no</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="当出库单状态为新建时" enabled="true">
              <stringProp name="IfController.condition">&quot;${outBoundStatusStr}&quot; == &quot;新建&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="true">
                <stringProp name="ForeachController.inputVal">boci_id</stringProp>
                <stringProp name="ForeachController.returnVal">boci_id</stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
                <stringProp name="ForeachController.endIndex">26</stringProp>
              </ForeachController>
              <hashTree>
                <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="true">
                  <stringProp name="ForeachController.inputVal">boci_no</stringProp>
                  <stringProp name="ForeachController.returnVal">boci_no</stringProp>
                  <boolProp name="ForeachController.useSeparator">true</boolProp>
                  <stringProp name="ForeachController.startIndex">0</stringProp>
                  <stringProp name="ForeachController.endIndex">30</stringProp>
                </ForeachController>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开始出库" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;${boci_id}&quot;,&#xd;
      &quot;no&quot;: &quot;${boci_no}&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/out-bound-notice-order/sale-out-bounding</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
            </hashTree>
            <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime控制器" enabled="true">
              <stringProp name="RunTime.seconds">3000</stringProp>
            </RunTime>
            <hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While控制器" enabled="true">
                <stringProp name="WhileController.condition">${__javaScript(&quot;${totalOrder}&quot;&lt;=&quot;26&quot;,)}</stringProp>
              </WhileController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询波次汇总" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 100,&#xd;
  &quot;customerId&quot;: &quot;&quot;,&#xd;
  &quot;outBoundType&quot;: 10,&#xd;
  &quot;creationStartTime&quot;: &quot;&quot;,&#xd;
  &quot;creationEndTime&quot;: &quot;&quot;,&#xd;
  &quot;orderSource&quot;: [],&#xd;
  &quot;latestOutBoundStartTime&quot;: &quot;&quot;,&#xd;
  &quot;latestOutBoundEndTime&quot;: &quot;&quot;,&#xd;
  &quot;carrierId&quot;: &quot;${boci_carrierId}&quot;,&#xd;
  &quot;inCargoId&quot;:${cargoId_1}&#xd;
  &quot;customerOrderCode&quot;: &quot;&quot;,&#xd;
  &quot;consigneeProvince&quot;: &quot;&quot;,&#xd;
  &quot;no&quot;: &quot;&quot;,&#xd;
  &quot;logisticsNo&quot;: &quot;&quot;,&#xd;
  &quot;summarySkuMinQty&quot;: &quot;&quot;,&#xd;
  &quot;summarySkuMaxQty&quot;: &quot;&quot;,&#xd;
  &quot;summaryNoticeMinQty&quot;: &quot;&quot;,&#xd;
  &quot;summaryNoticeMaxQty&quot;: &quot;&quot;,&#xd;
  &quot;inShopName&quot;: &quot;&quot;,&#xd;
  &quot;notInShopName&quot;: &quot;&quot;,&#xd;
  &quot;orderTagValue&quot;: &quot;&quot;,&#xd;
  &quot;paramsName&quot;: &quot;&quot;,&#xd;
  &quot;orderSourceCode&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/out-bound-waving-order/query-and-create-wave-query-result</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="queryId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">queryId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;queryId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalOrder" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">totalOrder</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;totalOrder&quot;:(.+?),</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                    <stringProp name="ConstantTimer.delay">3000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="波次汇总" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pickingStrategyId&quot;: &quot;3a050c67-fc63-d9d6-a4d9-047036b6fef9&quot;,&#xd;
  &quot;isLastWave&quot;: false,&#xd;
  &quot;detail&quot;: [&#xd;
    {&#xd;
      &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
      &quot;carrierId&quot;: &quot;${boci_carrierId}&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;queryId&quot;: &quot;${queryId}&quot;,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/wave/wave-summary</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="拣货单质检" enabled="false"/>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="包裹质检" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看包裹号" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;pickOrderNo&quot;:&quot;${jh_dh1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">//wms/yhwms/query/api/app/order-package/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言" enabled="true">
                <stringProp name="JSON_PATH">items[0].pickOrderNo</stringProp>
                <stringProp name="EXPECTED_VALUE">${jh_dh1}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取包裹单号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bg_no</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].no</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="调试" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;carrierId&quot;: &quot;3a04c578-02c0-8371-8ced-456c64da1b61&quot;,&#xd;
  &quot;status&quot;: &quot;10&quot;,&#xd;
  &quot;creationStartTime&quot;: &quot;2022-06-24 00:00:00&quot;,&#xd;
  &quot;creationEndTime&quot;: &quot;2026-07-02 00:00:00&quot;,&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/out-bound-notice-order/paging-sale-list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">no</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="false">
            <stringProp name="ForeachController.inputVal">id</stringProp>
            <stringProp name="ForeachController.returnVal">idid</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">10</stringProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;items&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;${idid}&quot;,&#xd;
      &quot;no&quot;: &quot;${no}_${__counter(false,)}&quot;,&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bounding</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主管理" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">http://api.beta.yhglobal.cn/wms/yhwms/query/api/app/customer/paging-list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">keyword</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;keyword&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.net.URLDecoder;
import org.json.*;

//response1= prev.getSamplerData();      //取request body数据
//log.info(response1);
String samplerData = prev.queryString;  // 只取post data 数据
log.info(samplerData);
JSONObject aa=new JSONObject(samplerData);
String subData = aa.get(&quot;keyword&quot;).toString(); // 获取memberid 的value值
log.info(subData);
String r = URLDecoder.decode(subData,&quot;utf-8&quot;);   //转码，用于汉字
log.info(&quot;参数为：&quot;+r);
FileWriter fstream = new FileWriter(&quot;D:\\221411.txt&quot;,true);  //写入TXT文件，路径下无文件时自动创建
BufferedWriter out = new BufferedWriter(fstream);
out.write(r+&quot;\n&quot;);    //写入的数据

out.close();
fstream.close();
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基础货类" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;isSelectTop&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04de22-cd97-3341-6aca-95d940ac0845&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/cargo-type/paging-list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoTypeOfCustomerId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cargoTypeOfCustomerId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">items</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单状态" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;no&quot;: &quot;${adjustmentOrderNo_1}&quot;,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/qty-adjustment-order/paging-query</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="orderStatusName" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">orderStatusName</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;orderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${w_counter}" enabled="true">
            <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);
if ${w_counter} &gt; ${retry}:
	vars.put(&quot;w_counter&quot;,0)
 
log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${w_counter}" enabled="true">
            <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;2022-07-08T00:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;2022-07-09T00:00:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:0.00001,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname"></stringProp>
              <stringProp name="RegexExtractor.regex"></stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="调试取样器" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="PDA" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;no_dao&quot;,&quot; &quot;);

vars.put(&quot;success&quot;,&quot; &quot;);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-warehouseId</stringProp>
              <stringProp name="Header.value">${defaultWarehouseId}</stringProp>
            </elementProp>
            <elementProp name="Authorization" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${token} </stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="基础数据" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="914278565">用例集合</stringProp>
            <stringProp name="701366788">基础数据</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="收货单" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="-404062943">全场景造数据</stringProp>
            <stringProp name="645032659">入库管理</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="标准收货" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货单信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;no&quot;: &quot;${no_dao}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work/get-receive</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="虚拟容器获取" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: &quot;${time}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work/check-lpn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="containerId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">containerId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="简单控制器" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="收货" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;concurrencyId&quot;: &quot;3a05227e-29d1-e327-cbc0-be4bba97a8d1&quot;,&#xd;
  &quot;receiveWorkId&quot;: null,&#xd;
  &quot;receiveOrderId&quot;: &quot;${receiveOrderId}&quot;,&#xd;
  &quot;cargoId&quot;: ${cargoId_1},&#xd;
  &quot;containerId&quot;: &quot;${containerId}&quot;,&#xd;
  &quot;serialNumber&quot;: &quot;&quot;,&#xd;
  &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
  &quot;number&quot;: &quot;1000&quot;,&#xd;
  &quot;qualityName&quot;: &quot;${quality_name}&quot;,&#xd;
  &quot;cargoName&quot;: &quot;${codename_1}&quot;,&#xd;
  &quot;containerNo&quot;: &quot;3212&quot;,&#xd;
  &quot;batchProperty&quot;: {&#xd;
    &quot;productionDate&quot;: &quot;&quot;,&#xd;
    &quot;expireDate&quot;: &quot;&quot;,&#xd;
    &quot;entryDate&quot;: &quot;&quot;,&#xd;
    &quot;productionBatch&quot;: &quot;&quot;,&#xd;
    &quot;plant&quot;: &quot;&quot;,&#xd;
    &quot;batchCode&quot;: &quot;&quot;,&#xd;
    &quot;returnReason&quot;: &quot;&quot;,&#xd;
    &quot;virtualWarehouse&quot;: &quot;&quot;,&#xd;
    &quot;boxQty&quot;: &quot;&quot;,&#xd;
    &quot;boxNo&quot;: &quot;&quot;,&#xd;
    &quot;purchaseOrder&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货单信息" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;barCode&quot;: &quot; &quot;,&#xd;
  &quot;no&quot;: &quot;${no_dao}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work/get-receive</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="收货" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;concurrencyId&quot;: &quot;3a05227e-29d1-e327-cbc0-be4bba97a8d1&quot;,&#xd;
  &quot;receiveWorkId&quot;: null,&#xd;
  &quot;receiveOrderId&quot;: &quot;${receiveOrderId}&quot;,&#xd;
  &quot;cargoId&quot;: ${cargoId_2},&#xd;
  &quot;containerId&quot;: &quot;${containerId}&quot;,&#xd;
  &quot;serialNumber&quot;: &quot;&quot;,&#xd;
  &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
  &quot;number&quot;: &quot;1000&quot;,&#xd;
  &quot;qualityName&quot;: &quot;${quality_name}&quot;,&#xd;
  &quot;cargoName&quot;: &quot;${codename_2}&quot;,&#xd;
  &quot;containerNo&quot;: &quot;3212&quot;,&#xd;
  &quot;batchProperty&quot;: {&#xd;
    &quot;productionDate&quot;: &quot;&quot;,&#xd;
    &quot;expireDate&quot;: &quot;&quot;,&#xd;
    &quot;entryDate&quot;: &quot;&quot;,&#xd;
    &quot;productionBatch&quot;: &quot;&quot;,&#xd;
    &quot;plant&quot;: &quot;&quot;,&#xd;
    &quot;batchCode&quot;: &quot;&quot;,&#xd;
    &quot;returnReason&quot;: &quot;&quot;,&#xd;
    &quot;virtualWarehouse&quot;: &quot;&quot;,&#xd;
    &quot;boxQty&quot;: &quot;&quot;,&#xd;
    &quot;boxNo&quot;: &quot;&quot;,&#xd;
    &quot;purchaseOrder&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货单信息" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;barCode&quot;: &quot; &quot;,&#xd;
  &quot;no&quot;: &quot;${no_dao}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work/get-receive</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="收货" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;concurrencyId&quot;: &quot;3a05227e-29d1-e327-cbc0-be4bba97a8d1&quot;,&#xd;
  &quot;receiveWorkId&quot;: null,&#xd;
  &quot;receiveOrderId&quot;: &quot;${receiveOrderId}&quot;,&#xd;
  &quot;cargoId&quot;: ${cargoId_3},&#xd;
  &quot;containerId&quot;: &quot;${containerId}&quot;,&#xd;
  &quot;serialNumber&quot;: &quot;&quot;,&#xd;
  &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
  &quot;number&quot;: &quot;1000&quot;,&#xd;
  &quot;qualityName&quot;: &quot;${quality_name}&quot;,&#xd;
  &quot;cargoName&quot;: &quot;${codename_3}&quot;,&#xd;
  &quot;containerNo&quot;: &quot;3212&quot;,&#xd;
  &quot;batchProperty&quot;: {&#xd;
    &quot;productionDate&quot;: &quot;&quot;,&#xd;
    &quot;expireDate&quot;: &quot;&quot;,&#xd;
    &quot;entryDate&quot;: &quot;&quot;,&#xd;
    &quot;productionBatch&quot;: &quot;&quot;,&#xd;
    &quot;plant&quot;: &quot;&quot;,&#xd;
    &quot;batchCode&quot;: &quot;&quot;,&#xd;
    &quot;returnReason&quot;: &quot;&quot;,&#xd;
    &quot;virtualWarehouse&quot;: &quot;&quot;,&#xd;
    &quot;boxQty&quot;: &quot;&quot;,&#xd;
    &quot;boxNo&quot;: &quot;&quot;,&#xd;
    &quot;purchaseOrder&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货单信息" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;barCode&quot;: &quot; &quot;,&#xd;
  &quot;no&quot;: &quot;${no_dao}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work/get-receive</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="标准上架" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;lpn&quot;: &quot;&quot;,&#xd;
  &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
  &quot;putAwayOrderStatus&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04e351-c0e9-1a07-5f98-67f63bab46d2&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="paging_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">pda_put_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="pda_put_no" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">pda_put_no</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;putAwayOrderNo&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询容器ID" enabled="true">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select FromContainerCode from OP_PutAwayOrders where No =&quot;${pda_put_no}&quot;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">FromContainerCode</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取上架单数据" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${pda_put_id}&quot;,&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04e351-c0e9-1a07-5f98-67f63bab46d2&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-order/paging-detail-list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="skuBarcode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">skuCode</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;skuCode&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取上架数据" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;containerCode&quot;: &quot;${FromContainerCode_1}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-put-away-order/get-put-away</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayId " enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">putAwayId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;putAwayId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderDetailId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">putAwayOrderDetailId</stringProp>
              <stringProp name="RegexExtractor.regex">putAwayOrderDetailId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="多次上架" enabled="true">
            <stringProp name="WhileController.condition">${__javaScript(&quot;${success}&quot;!=&quot;false&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取上架数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;containerCode&quot;: &quot;${FromContainerCode_1}&quot;,&#xd;
  &quot;skuBarCode&quot;: &quot;&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-put-away-order/get-put-away</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayId " enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">putAwayId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;putAwayId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderDetailId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">putAwayOrderDetailId</stringProp>
                <stringProp name="RegexExtractor.regex">putAwayOrderDetailId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="skuCode" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">skuCode</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;skuCode&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="success" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">success</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;success&quot;:(.+?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">6000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;putAwayId&quot;: &quot;${putAwayId}&quot;,&#xd;
  &quot;skuBarCode&quot;: &quot;${skuCode}&quot;,&#xd;
  &quot;planQty&quot;: 1000,&#xd;
  &quot;warehouseBinCode&quot;: &quot;1&quot;,&#xd;
  &quot;actualQty&quot;: &quot;1000&quot;,&#xd;
  &quot;isCreateDifferenceOrder&quot;: false,&#xd;
  &quot;putAwayOrderDetailId&quot;: &quot;${putAwayOrderDetailId}&quot;,&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-put-away-order/confirmed</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="判断库存" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;no&quot;,&quot;${pda_put_no}&quot;);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询是否上架完成" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;putAwayOrderNo&quot;: &quot;${no}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderStatusName" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">putAwayOrderStatusName</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;putAwayOrderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询二级库存流水" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;outSourceCode&quot;: &quot;${no}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/inventory-account-running-record-query/get-account-advance</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">totalCount</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断上架单状态" enabled="true">
              <stringProp name="IfController.condition">&quot;${totalCount}&quot; != &quot;6&quot; || &quot;${putAwayOrderStatusName}&quot; == &quot;库存扣减中&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      二级库存流水不正确&#xd;
      数量调整单号：${no}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="拣货" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="普通拣货" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="普通出库测试数据" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="914278565">用例集合</stringProp>
                <stringProp name="-2108990772">普通出库拣货用例</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PDA普通拣货" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="领取拣货任务" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pickingOrderNo&quot;: &quot;${jhd_no}&quot;,&#xd;
  &quot;isFromCommonOutBoundOrder&quot;: true,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pda-picking-order/check-task</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${totalCount}</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进入拣货页面获取拣货数据" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${jhd_id}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/pda-picking-order/pda-paging-common-detail</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="拣货明细源库位名称—pickWarehouseBinCode" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">pickWarehouseBinCode</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;pickWarehouseBinCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="商品条码—cargoCode" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoCode</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;cargoCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="待检数量-allocateQty" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">allocateQty</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;allocateQty&quot;:</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
                    <stringProp name="BoundaryExtractor.default"></stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="pickingOrderId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">pickingOrderId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;pickingOrderId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="warehouseBinId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">warehouseBinId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;warehouseBinId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="pickingOrderDetailId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">pickingOrderDetailId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;pickingOrderDetailId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="customerId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">customerId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;customerId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;cargoId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货确认" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;warehouseBinId&quot;: &quot;${warehouseBinId}&quot;,&#xd;
  &quot;pickingQty&quot;: ${allocateQty},&#xd;
  &quot;skuBarcode&quot;: &quot;${cargoCode}&quot;,&#xd;
  &quot;targetBinCode&quot;: &quot;${pickWarehouseBinCode}&quot;,&#xd;
  &quot;allocateQty&quot;: ${allocateQty},&#xd;
  &quot;pickingOrderId&quot;: &quot;${pickingOrderId}&quot;,&#xd;
  &quot;pickingOrderDetailId&quot;: &quot;${pickingOrderDetailId}&quot;,&#xd;
  &quot;customerId&quot;: &quot;${customerId}&quot;,&#xd;
  &quot;cargoId&quot;: &quot;${cargoId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pda-picking-order/pick-confirmed</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="拣货结束跳出" enabled="true">
                <stringProp name="WhileController.condition">${__javaScript(&quot;${pickingOrderStatusStr}&quot;!=&quot;拣货结束&quot;&amp;&amp; ${w_counter}&lt;=${retry})}</stringProp>
              </WhileController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                  <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货结束" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${hbpc_no}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-common-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">pickingOrderStatusStr</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;pickingOrderStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                  <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;PDA回归测试&#xd;
      PDA普通拣货一直卡在库存扣减中&#xd;
      拣货单：${jhd_no}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49586">200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">20</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="销售拣货" enabled="true"/>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="销售出库测试数据" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="869052411">测试计划</stringProp>
                <stringProp name="914278565">用例集合</stringProp>
                <stringProp name="1226549774">销售出库拣货用例</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PDA销售拣货" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="领取拣货任务" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pickingOrderNo&quot;: &quot;${jh_dh1}&quot;,&#xd;
  &quot;isFromCommonOutBoundOrder&quot;: true,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pda-picking-order/check-task</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${totalCount}</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进入拣货页面获取拣货数据" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${jhd_id}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/pda-picking-order/pda-paging-sale-detail</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="拣货明细源库位名称—pickWarehouseBinCode" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">pickWarehouseBinCode</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;pickWarehouseBinCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="商品条码—cargoCode" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoCode</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;cargoCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="待检数量-allocateQty" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">allocateQty</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;allocateQty&quot;:</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
                    <stringProp name="BoundaryExtractor.default"></stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="pickingOrderId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">pickingOrderId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;pickingOrderId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="warehouseBinId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">warehouseBinId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;warehouseBinId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="pickingOrderDetailId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">pickingOrderDetailId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;pickingOrderDetailId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="customerId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">customerId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;customerId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;cargoId&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货确认" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;warehouseBinId&quot;: &quot;${warehouseBinId}&quot;,&#xd;
  &quot;pickingQty&quot;: ${allocateQty},&#xd;
  &quot;skuBarcode&quot;: &quot;${cargoCode}&quot;,&#xd;
  &quot;targetBinCode&quot;: &quot;${pickWarehouseBinCode}&quot;,&#xd;
  &quot;allocateQty&quot;: ${allocateQty},&#xd;
  &quot;pickingOrderId&quot;: &quot;${pickingOrderId}&quot;,&#xd;
  &quot;pickingOrderDetailId&quot;: &quot;${pickingOrderDetailId}&quot;,&#xd;
  &quot;customerId&quot;: &quot;${customerId}&quot;,&#xd;
  &quot;cargoId&quot;: &quot;${cargoId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pda-picking-order/pick-confirmed</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="拣货结束跳出" enabled="true">
                <stringProp name="WhileController.condition">${__javaScript(&quot;${pickingOrderStatusStr}&quot;!=&quot;拣货结束&quot;&amp;&amp; ${w_counter}&lt;=${retry})}</stringProp>
              </WhileController>
              <hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
                  <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);

</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货结束" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;waveNo&quot;:&quot;${bc_dh1}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/picking-order/paging-sale-list</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">pickingOrderStatusStr</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;pickingOrderStatusStr&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败后退出" enabled="true">
                  <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;PDA回归测试&#xd;
      PDA销售拣货一直卡在库存扣减中&#xd;
      拣货单：${jh_dh1}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;罗志勇&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17674121038&#xd;
       }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="49586">200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">20</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="标准移位" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select code
from Basic_WarehouseBins where  id = &quot;${actualBin_Id}&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">actualBin_code</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;warehouseBinCode&quot;: &quot;存储区&quot;,&#xd;
  &quot;barcode&quot;: &quot;${actualBin_code}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-relocation/pda-check-relocation-param</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">availableQty</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;availableQty&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="移位" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;warehouseBinId&quot;: &quot;3a0507e0-1eb7-56dd-ef7e-8c028f5c16a8&quot;,&#xd;
  &quot;barcode&quot;: &quot;${actualBin_code_1}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-relocation/find-inventory-account-advance-lot-value</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">availableQty</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;availableQty&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template"></stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${project_Id}&quot;,&#xd;
  &quot;cargoId&quot;: ${cargoId_1},&#xd;
  &quot;warehouseBinCode&quot;: &quot;${actualBin_code_1}&quot;,&#xd;
  &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
  &quot;lotValueId&quot;: &quot;${lotAttrId}&quot;,&#xd;
  &quot;sourceWarehouseBinId&quot;: &quot;${actualBin_Id_fang}&quot;,&#xd;
  &quot;relocationQty&quot;: &quot;${availableQty}&quot;,&#xd;
  &quot;availableQty&quot;: 1,&#xd;
  &quot;skuBarcode&quot;: &quot;${code_1}&quot;,&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-relocation/relocation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="容器移位" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
  &quot;barcode&quot;: &quot;test1&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-container-relocation/find-container-inventory-account-advance-lot-value</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;containerCode&quot;: &quot;q10&quot;,&#xd;
  &quot;sourceBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
  &quot;projectId&quot;: &quot;${project_Id}&quot;,&#xd;
  &quot;cargoId&quot;: &quot;${carrier_Id}&quot;,&#xd;
  &quot;sourceBinCode&quot;: &quot;测试-07&quot;,&#xd;
  &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
  &quot;lotValueId&quot;: &quot;${lotValueId}&quot;,&#xd;
  &quot;relocationQty&quot;: &quot;10&quot;,&#xd;
  &quot;skuBarcode&quot;: &quot;1-5011&quot;,&#xd;
  &quot;requestId&quot;: &quot;${__UUID}&quot;,&#xd;
  &quot;warehouseAreaName&quot;: &quot;测试TEST&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-container-relocation/container-relocation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取上架单数据" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;3a050d9e-bc61-9dda-3378-31353d6aeb18&quot;,&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04e351-c0e9-1a07-5f98-67f63bab46d2&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-order/paging-detail-list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="skuBarcode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">skuBarcode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;skuBarcode&quot;:&quot;(.+?[A-Za-z0-9])&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">totalCount</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="调试取样器" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="唯一码采集" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="适配器" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="WarehouseCode" elementType="Argument">
              <stringProp name="Argument.name">WarehouseCode</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">仓库，BOE001 苏州仓   BOE002 北京大兴仓</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JDF入库" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;platformNo&quot;: &quot;JDF&quot;,&#xd;
  &quot;timestamp&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;messageType&quot;: 1,&#xd;
  &quot;datas&quot;: [&#xd;
    {&#xd;
      &quot;messageId&quot;: &quot;${__UUID}&quot;,&#xd;
      &quot;messageData&quot;: &quot;{\&quot;SenderInfo\&quot;:{\&quot;SenderAddress\&quot;:\&quot;苏州工业园区唯亭镇浦田路18号\&quot;,\&quot;SenderName\&quot;:\&quot;吴军\&quot;,\&quot;SenderPhone\&quot;:\&quot;0512-62804732\&quot;,\&quot;SenderMobile\&quot;:\&quot;0512-62804732\&quot;,\&quot;SenderCity\&quot;:\&quot;苏州市\&quot;},\&quot;OrderType\&quot;:\&quot;102\&quot;,\&quot;OrderCreateTime\&quot;:\&quot;2022-08-08 15:56:27\&quot;,\&quot;TmsServiceName\&quot;:\&quot;吴军\&quot;,\&quot;OrderItemList\&quot;:[{\&quot;ItemCode\&quot;:\&quot;JDF-WYM-2\&quot;,\&quot;InventoryType\&quot;:\&quot;22622\&quot;,\&quot;ItemQuantity\&quot;:\&quot;100\&quot;,\&quot;ItemNo\&quot;:\&quot;000010\&quot;,\&quot;ItemName\&quot;:\&quot;JDF-WYM-2\&quot;}],\&quot;OwnerCode\&quot;:\&quot;BOE6800\&quot;,\&quot;ReceiverInfo\&quot;:{\&quot;ReceiverMobile\&quot;:\&quot;18136088796\&quot;,\&quot;ReceiverAddress\&quot;:\&quot;江苏省苏州市吴中区唯亭街道苏州工业园区浦田路18号\&quot;,\&quot;ReceiverProvince\&quot;:\&quot;江苏\&quot;,\&quot;ReceiverCity\&quot;:\&quot;苏州市\&quot;,\&quot;ReceiverName\&quot;:\&quot;石小军\&quot;},\&quot;OrderNo\&quot;:\&quot;BOE${__time(,)}${__counter(false,)}\&quot;,\&quot;WarehouseCode\&quot;:\&quot;BOE001\&quot;,\&quot;OrderSourceNo\&quot;:\&quot;BOE${__time(,)}${__counter(false,)}\&quot;}&quot;,&#xd;
      &quot;digest&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://erp.edi.api.staging.yhglobal.cn/api/open/TestReceive</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JDF入库" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;platformNo&quot;: &quot;JDF&quot;,&#xd;
  &quot;timestamp&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;messageType&quot;: 1,&#xd;
  &quot;datas&quot;: [&#xd;
    {&#xd;
      &quot;messageId&quot;: &quot;${__UUID}&quot;,&#xd;
      &quot;messageData&quot;: &quot;{\&quot;SenderInfo\&quot;:{\&quot;SenderAddress\&quot;:\&quot;苏州工业园区唯亭镇浦田路18号\&quot;,\&quot;SenderName\&quot;:\&quot;吴军\&quot;,\&quot;SenderPhone\&quot;:\&quot;0512-62804732\&quot;,\&quot;SenderMobile\&quot;:\&quot;0512-62804732\&quot;,\&quot;SenderCity\&quot;:\&quot;苏州市\&quot;},\&quot;OrderType\&quot;:\&quot;102\&quot;,\&quot;OrderCreateTime\&quot;:\&quot;2022-08-08 15:56:27\&quot;,\&quot;TmsServiceName\&quot;:\&quot;吴军\&quot;,\&quot;OrderItemList\&quot;:[{\&quot;ItemCode\&quot;:\&quot;JDF-WYM-2\&quot;,\&quot;InventoryType\&quot;:\&quot;22622\&quot;,\&quot;ItemQuantity\&quot;:\&quot;100\&quot;,\&quot;ItemNo\&quot;:\&quot;000010\&quot;,\&quot;ItemName\&quot;:\&quot;\&quot;}],\&quot;OwnerCode\&quot;:\&quot;BOE6800\&quot;,\&quot;ReceiverInfo\&quot;:{\&quot;ReceiverMobile\&quot;:\&quot;18136088796\&quot;,\&quot;ReceiverAddress\&quot;:\&quot;江苏省苏州市吴中区唯亭街道苏州工业园区浦田路18号\&quot;,\&quot;ReceiverProvince\&quot;:\&quot;江苏\&quot;,\&quot;ReceiverCity\&quot;:\&quot;苏州市\&quot;,\&quot;ReceiverName\&quot;:\&quot;石小军\&quot;},\&quot;OrderNo\&quot;:\&quot;BOE${__time(,)}${__counter(false,)}\&quot;,\&quot;WarehouseCode\&quot;:\&quot;BOE001\&quot;,\&quot;OrderSourceNo\&quot;:\&quot;BOE${__time(,)}${__counter(false,)}\&quot;}&quot;,&#xd;
      &quot;digest&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://erp.edi.api.staging.yhglobal.cn/api/open/TestReceive</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="取消订单" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;platformNo&quot;: &quot;JDF&quot;,&#xd;
  &quot;timestamp&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;messageType&quot;: 30,&#xd;
  &quot;datas&quot;: [&#xd;
    {&#xd;
      &quot;messageId&quot;: &quot;${__UUID}&quot;,&#xd;
      &quot;messageData&quot;: &quot;{\&quot;WarehouseCode\&quot;:\&quot;BOE001\&quot;,\&quot;OrderNo\&quot;:\&quot;BOE16641747442681\&quot;,\&quot;OwnerCode\&quot;:\&quot;BOE6800\&quot;,\&quot;OrderType\&quot;:\&quot;10\&quot;}&quot;,&#xd;
      &quot;digest&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://erp.edi.api.staging.yhglobal.cn/api/open/TestReceive</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="功能模块" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
          <stringProp name="RegexExtractor.useHeaders">false</stringProp>
          <stringProp name="RegexExtractor.refname"></stringProp>
          <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
          <stringProp name="RegexExtractor.template">$1$</stringProp>
          <stringProp name="RegexExtractor.default"></stringProp>
          <stringProp name="RegexExtractor.match_number">1</stringProp>
        </RegexExtractor>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础数据" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="基础数据获取" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="869052411">测试计划</stringProp>
              <stringProp name="84424398">YHWMS</stringProp>
              <stringProp name="-1364696058">全流程回归</stringProp>
              <stringProp name="-295315453">基础数据获取</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础资料" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="库区库位" enabled="true"/>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
                <stringProp name="CounterConfig.start">0</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">n</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库区" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pId&quot;:&quot;&quot;,&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;areaType&quot;:&quot;10&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/warehouse-area/warehouse-area</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="warehouseAreaId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">warehouseAreaId</stringProp>
                  <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="96784904">error</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">20</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="库位创建" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库位" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;warehouseAreaId&quot;:${warehouseAreaId},&#xd;
    &quot;storageCondition&quot;:&quot;0&quot;,&#xd;
    &quot;binUseType&quot;:[&#xd;
        &quot;1&quot;,&#xd;
        &quot;2&quot;,&#xd;
        &quot;3&quot;,&#xd;
        &quot;4&quot;,&#xd;
        &quot;5&quot;,&#xd;
        &quot;6&quot;&#xd;
    ],&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;layers&quot;:1,&#xd;
    &quot;columns&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;rows&quot;:1,&#xd;
    &quot;binType&quot;:&quot;0&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/warehouse-bin/warehouse-bin</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="96784904">error</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="actualBin_Id" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">actualBin_Id</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.default"></stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="新建货类、策略" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基础货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-type/cargo-type</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="cargoTypeId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">cargoTypeId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库货类" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;pId&quot;:&quot;&quot;,&#xd;
    &quot;isSelectTop&quot;: true,&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-type-of-warehouse/cargo-type-of-warehouse</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="cargoTypeOfWarehouseId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">cargoTypeOfWarehouseId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;productionDateVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:true&#xd;
    },&#xd;
    &quot;expireDateVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:true&#xd;
    },&#xd;
    &quot;entryDateVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;productionBatchVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;plantVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;boxNoVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;batchCodeVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;returnReasonVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;virtualWarehouseVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;boxQtyVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;purchaseOrderVo&quot;:{&#xd;
        &quot;isRequired&quot;:false,&#xd;
        &quot;isSelected&quot;:false&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/lot-attr/lot-attr</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="lotAttrId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">lotAttrId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;2&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/allocate-strategy/allocate-strategy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="allocateStrategyId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">allocateStrategyId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略-分配规则" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;strategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;name&quot;:&quot;${name}${__counter(false,id)}&quot;,&#xd;
    &quot;sequenceNo&quot;:1,&#xd;
    &quot;fixedAreaOrBin&quot;:1,&#xd;
    &quot;enableLotAttrRule&quot;:true,&#xd;
    &quot;outBinRule&quot;:10,&#xd;
    &quot;areas&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;allocateRuleSourceTypes&quot;:[&#xd;
        10,&#xd;
        20,&#xd;
        30,&#xd;
        40,&#xd;
        50,&#xd;
        60&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/allocate-rule/allocate-rule</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;3&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pick-strategy/pick-strategy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="putawayStrategyId1" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">putawayStrategyId1</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略-规则配置" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;strategyId&quot;:&quot;${putawayStrategyId1}&quot;,&#xd;
    &quot;id&quot;:&quot;&quot;,&#xd;
    &quot;name&quot;:&quot;1&quot;,&#xd;
    &quot;sequenceNo&quot;:2,&#xd;
    &quot;pickingOrderType&quot;:2,&#xd;
    &quot;cGroupPickOrderMaxQty&quot;:1000,&#xd;
    &quot;orderMinQtyLimit&quot;:1,&#xd;
    &quot;isSplitByBinQty&quot;:false,&#xd;
    &quot;isSplitByPickOrderVol&quot;:false,&#xd;
    &quot;isSplitByPack&quot;:false,&#xd;
    &quot;secKillTypes&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pick-rule/pick-rule</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;自动化${name}${__counter(false,id)}&quot;,&#xd;
    &quot;strategyType&quot;:&quot;1&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/put-away-strategy/put-away-strategy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="putawayStrategyId" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">putawayStrategyId</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default"></stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略-新建规则" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;:&quot;${name}${__counter(false,id)}&quot;,&#xd;
    &quot;sequenceNo&quot;:1,&#xd;
    &quot;BinUseType&quot;:&quot;&quot;,&#xd;
    &quot;targetAreaId&quot;:&quot;&quot;,&#xd;
    &quot;allowEmpty&quot;:true,&#xd;
    &quot;strategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;putAwayTypes&quot;:[&#xd;
        1&#xd;
    ],&#xd;
    &quot;abcTypes&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;putAwayRuleBinSorts&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;expireDate&quot;:null,&#xd;
    &quot;entryDate&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/put-away-rule/put-away-rule</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="创建商品" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品计量单位" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-unit-selector</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="unitId 计量单位" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">unitId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;value&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-1" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-1" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_1" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId_1</stringProp>
                    <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_1" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_1}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">codename_1</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-2" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-2" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;2-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_2" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId_2</stringProp>
                    <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_2},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_2" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_2}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">codename_2</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-3" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-3" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;3-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_3" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">cargoId_3</stringProp>
                    <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                    <stringProp name="RegexExtractor.match_number"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_3" enabled="true">
                  <stringProp name="dataSource">mysql</stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_3}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames">codename_3</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品资料获取" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取商品数据" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select code,name from Basic_Cargos where id = ${cargoId_1} or  id = ${cargoId_2} or id =${cargoId_3}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">code,codename</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="基础资料" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="货主管理" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主管理" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/customer/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/warehouse-user/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主管理-查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;keyword&quot;: &quot;测试货主&quot;,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/customer/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="customer_id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">customer_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主管理-其他配置" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${customer_Id}&quot;,&#xd;
    &quot;senderName&quot;: &quot;测试货主&quot;,&#xd;
    &quot;senderPhone&quot;: &quot;12345678911&quot;,&#xd;
    &quot;province&quot;: &quot;北京市&quot;,&#xd;
    &quot;city&quot;: &quot;市辖区&quot;,&#xd;
    &quot;area&quot;: &quot;朝阳区&quot;,&#xd;
    &quot;address&quot;: &quot;我是一个很长很长很长很长很长很长很长很长很长的地址&quot;,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/customer/update-customer-extend</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="反馈配置获取" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/param-setting/find-feedback-setting-type</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="反馈配置保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
  &quot;details&quot;: [&#xd;
    {&#xd;
      &quot;settingType&quot;: 50,&#xd;
      &quot;paramValue&quot;: true&#xd;
    },&#xd;
    {&#xd;
      &quot;settingType&quot;: 51,&#xd;
      &quot;paramValue&quot;: true&#xd;
    },&#xd;
    {&#xd;
      &quot;settingType&quot;: 52,&#xd;
      &quot;paramValue&quot;: true&#xd;
    },&#xd;
    {&#xd;
      &quot;settingType&quot;: 53,&#xd;
      &quot;paramValue&quot;: true&#xd;
    },&#xd;
    {&#xd;
      &quot;settingType&quot;: 54,&#xd;
      &quot;paramValue&quot;: true&#xd;
    },&#xd;
    {&#xd;
      &quot;settingType&quot;: 55,&#xd;
      &quot;paramValue&quot;: true&#xd;
    },&#xd;
    {&#xd;
      &quot;settingType&quot;: 56,&#xd;
      &quot;paramValue&quot;: true&#xd;
    },&#xd;
    {&#xd;
      &quot;settingType&quot;: 57,&#xd;
      &quot;paramValue&quot;: false&#xd;
    },&#xd;
    {&#xd;
      &quot;settingType&quot;: 58,&#xd;
      &quot;paramValue&quot;: true&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/param-setting/or-update</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="发货地配置修改" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
  &quot;supplySettingType&quot;: &quot;1&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/customer-supply-setting/or-update</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主管理-锁定" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${customer_Id}&quot;,&#xd;
    &quot;isLocked&quot;: true,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/customer/is-locked</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建表单处查询货主" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;filter&quot;: &quot;&quot;,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/selector/find-all-customer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主管理-解锁" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${customer_Id}&quot;,&#xd;
    &quot;isLocked&quot;: false,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/customer/is-locked</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="承运商" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="承运商查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/carrier/get-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货主查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;filter&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/selector/find-all-customer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="所有仓库查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;filter&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/selector/find-all-warehouse</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="承运商下拉框" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-carrier</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单来源" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-order-source</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="面单打印方式" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-print-type</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="平台" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/express-setting/platform-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="platformId 平台" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">platformId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;value&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="平台服务商" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;platformId&quot;: &quot;${platformId}&quot;,&#xd;
  &quot;name&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/express-setting/platform-service-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="平台店铺" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;platformId&quot;: &quot;${platformId}&quot;,&#xd;
  &quot;name&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/express-setting/shop-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="shopId 平台店铺" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">shopId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;value&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="店铺订购网点" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;shopId&quot;: &quot;${shopId}&quot;,&#xd;
  &quot;filter&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/express-setting/net-work-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建承运商" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;: &quot;${__time(,)}&quot;,&#xd;
    &quot;name&quot;: &quot;自动化${__time(,)}&quot;,&#xd;
    &quot;applySource&quot;: &quot;UserCreate&quot;,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/carrier</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询承运商" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;filter&quot;: &quot;自动化&quot;,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/carrier/get-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MdmCarriers_name" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MdmCarriers_name</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MdmCarriers_code" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MdmCarriers_code</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建相同code的承运商" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;: &quot;${MdmCarriers_code}&quot;,&#xd;
    &quot;name&quot;: &quot;${MdmCarriers_name}&quot;,&#xd;
    &quot;applySource&quot;: &quot;UserCreate&quot;,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/carrier</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="忽略状态，接口为500是正常" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="23859266">已存在</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable"></stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改承运商" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;: &quot;${MdmCarriers_code}&quot;,&#xd;
    &quot;name&quot;: &quot;${MdmCarriers_name}&quot;,&#xd;
    &quot;englishName&quot;: null,&#xd;
    &quot;simpleName&quot;: null,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/carrier/update</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="禁用承运商" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;: &quot;${MdmCarriers_code}&quot;,&#xd;
    &quot;enable&quot;: false,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/carrier/enable</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建表单处查询承运商-查不到" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-carrier</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1755672115">${MdmCarriers_name}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启用承运商" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;: &quot;${MdmCarriers_code}&quot;,&#xd;
    &quot;enable&quot;: true,&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/carrier/enable</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建表单处查询承运商-能够查到" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;userId&quot;: &quot;3a0458b4-2283-6722-fb10-6282ed16f839&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-carrier</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1755672115">${MdmCarriers_name}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="容器" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增容器类型" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/container-type/container-type</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="容器类型" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10000,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/container-type/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="container_id 容器类型id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">containerTypeId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑容器类型" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;row&quot;: null,&#xd;
  &quot;cell&quot;: null,&#xd;
  &quot;layer&quot;: null,&#xd;
  &quot;isHasGrid&quot;: false,&#xd;
  &quot;maxBearing&quot;: null,&#xd;
  &quot;maxCapacity&quot;: null,&#xd;
  &quot;maxHeight&quot;: null,&#xd;
  &quot;maxWidth&quot;: null,&#xd;
  &quot;maxLength&quot;: null,&#xd;
  &quot;weight&quot;: null,&#xd;
  &quot;length&quot;: null,&#xd;
  &quot;width&quot;: null,&#xd;
  &quot;height&quot;: null,&#xd;
  &quot;volume&quot;: null,&#xd;
  &quot;id&quot;: &quot;${containerTypeId}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/container-type/update-container-type</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="停用容器类型" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${containerTypeId}&quot;,&#xd;
  &quot;disabled&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/container-type/enable-or-disable-container-type</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启用容器类型" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${containerTypeId}&quot;,&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/container-type/enable-or-disable-container-type</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增容器" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;barcode&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;containerTypeId&quot;: &quot;${containerTypeId}&quot;,&#xd;
  &quot;isStorage&quot;: true,&#xd;
  &quot;isPacking&quot;: true,&#xd;
  &quot;isIn&quot;: true,&#xd;
  &quot;isOut&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/container/container</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="容器查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/container/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="container_id 容器id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">container_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑容器" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${container_Id}&quot;,&#xd;
  &quot;code&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;barcode&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;containerTypeId&quot;: &quot;${containerTypeId}&quot;,&#xd;
  &quot;isStorage&quot;: true,&#xd;
  &quot;isPacking&quot;: true,&#xd;
  &quot;isIn&quot;: true,&#xd;
  &quot;isOut&quot;: true,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/container/update-container</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="停用容器" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${container_Id}&quot;,&#xd;
  &quot;disabled&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/container/enable-or-disable-container</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启用容器" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${container_Id}&quot;,&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/container/enable-or-disable-container</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="工作台" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增工作台" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;workStationTypes&quot;: [&#xd;
    &quot;2&quot;,&#xd;
    &quot;3&quot;,&#xd;
    &quot;4&quot;,&#xd;
    &quot;5&quot;,&#xd;
    &quot;0&quot;,&#xd;
    &quot;1&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/work-station/work-station</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="工作台" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/work-station/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="工作台id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">work_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="工作台类型" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-work-station-type-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑工作台" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;workStationTypes&quot;: [&#xd;
    &quot;0&quot;,&#xd;
    &quot;2&quot;,&#xd;
    &quot;1&quot;,&#xd;
    &quot;4&quot;,&#xd;
    &quot;5&quot;,&#xd;
    &quot;3&quot;&#xd;
  ],&#xd;
  &quot;id&quot;: &quot;${work_id}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/work-station/update-work-station</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="停用工作台" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${work_id}&quot;,&#xd;
  &quot;disabled&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/work-station/enable-or-disable-work-station</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启用工作台" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${work_id}&quot;,&#xd;
  &quot;disabled&quot;: false,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/work-station/enable-or-disable-work-station</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="仓库配置" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库列表" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/warehouses/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="wId 仓库id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">wId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="配置货主" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;wId&quot;: &quot;${wId}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/warehouses/paging-list-customer</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="库区" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增库区" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pId&quot;: &quot;&quot;,&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;areaType&quot;: &quot;10&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/warehouse-area/warehouse-area</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库区查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;isContainsSystem&quot;: false,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/warehouse-area/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="providerKey" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">providerKey</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">warehouse_name</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库区配置规则-abc" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-abc-type-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品品质" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;filter&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-cargo-quality-by-warehouse-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库区配置点击调用的接口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;providerKey&quot;: &quot;${providerKey}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/warehouse-bin-rule/get-warehouse-bin-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="规则配置保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;ruleType&quot;: 1,&#xd;
  &quot;providerKeyId&quot;: &quot;${providerKey}&quot;,&#xd;
  &quot;allowMixProductionData&quot;: false,&#xd;
  &quot;allowMixExpireDate&quot;: false,&#xd;
  &quot;allowMixEntryDate&quot;: false,&#xd;
  &quot;allowMixProductionBatch&quot;: false,&#xd;
  &quot;allowMixPlant&quot;: false,&#xd;
  &quot;allowMixBoxNo&quot;: false,&#xd;
  &quot;allowMixBatchCode&quot;: false,&#xd;
  &quot;allowMixReturnReason&quot;: false,&#xd;
  &quot;allowMixOriginCountry&quot;: false,&#xd;
  &quot;allowMixBoxQty&quot;: false,&#xd;
  &quot;allowMixInventoryMark&quot;: false,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/warehouse-area/warehouse-area-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑库区" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-area-type-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库区下拉框" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-warehouse-area-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询库区信息" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${providerKey}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/warehouse-area/paging-list-by-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存编辑" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pId&quot;: null,&#xd;
  &quot;name&quot;: &quot;${warehouse_name}&quot;,&#xd;
  &quot;area&quot;: null,&#xd;
  &quot;areaType&quot;: &quot;10&quot;,&#xd;
  &quot;id&quot;: &quot;${providerKey}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/warehouse-area/update-warehouse-area</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除库区" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${providerKey}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/warehouse-area/delete-warehouse-area</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="库位" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="储藏条件" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-storage-condition-type-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库位使用方式" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-bin-use-type-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库位类型" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-bin-type-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库区下拉框" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-warehouse-area-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="库区id warehouseAreaId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">warehouseAreaId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增库位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;warehouseAreaId&quot;: &quot;${warehouseAreaId}&quot;,&#xd;
  &quot;binUseType&quot;: [&#xd;
    &quot;8&quot;,&#xd;
    &quot;7&quot;,&#xd;
    &quot;6&quot;,&#xd;
    &quot;5&quot;,&#xd;
    &quot;4&quot;,&#xd;
    &quot;3&quot;,&#xd;
    &quot;2&quot;,&#xd;
    &quot;1&quot;,&#xd;
    &quot;9&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/warehouse-bin/warehouse-bin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询库位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/warehouse-bin/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="库位id actualBin_Id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">actualBin_Id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑库位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;length&quot;: null,&#xd;
  &quot;warehouseAreaId&quot;: &quot;${warehouseAreaId}&quot;,&#xd;
  &quot;height&quot;: null,&#xd;
  &quot;width&quot;: null,&#xd;
  &quot;storageCondition&quot;: &quot;0&quot;,&#xd;
  &quot;columns&quot;: null,&#xd;
  &quot;binType&quot;: &quot;0&quot;,&#xd;
  &quot;rows&quot;: null,&#xd;
  &quot;layers&quot;: null,&#xd;
  &quot;binUseType&quot;: [&#xd;
    &quot;5&quot;,&#xd;
    &quot;8&quot;,&#xd;
    &quot;3&quot;,&#xd;
    &quot;9&quot;,&#xd;
    &quot;6&quot;,&#xd;
    &quot;2&quot;,&#xd;
    &quot;4&quot;,&#xd;
    &quot;7&quot;,&#xd;
    &quot;1&quot;&#xd;
  ],&#xd;
  &quot;id&quot;: &quot;${actualBin_Id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/warehouse-bin/update-warehouse-bin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库位规则配置" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;ruleType&quot;: 0,&#xd;
  &quot;providerKeyId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
  &quot;allowOut&quot;: false,&#xd;
  &quot;allowReply&quot;: false,&#xd;
  &quot;allowMixSku&quot;: false,&#xd;
  &quot;isDiscardLpn&quot;: false,&#xd;
  &quot;allowMixLotAttribute&quot;: false,&#xd;
  &quot;allowMixProductionData&quot;: false,&#xd;
  &quot;allowMixExpireDate&quot;: false,&#xd;
  &quot;allowMixEntryDate&quot;: false,&#xd;
  &quot;allowMixProductionBatch&quot;: false,&#xd;
  &quot;allowMixPlant&quot;: false,&#xd;
  &quot;allowMixBoxNo&quot;: false,&#xd;
  &quot;allowMixBatchCode&quot;: false,&#xd;
  &quot;allowMixReturnReason&quot;: false,&#xd;
  &quot;allowMixOriginCountry&quot;: false,&#xd;
  &quot;allowMixBoxQty&quot;: false,&#xd;
  &quot;allowMixInventoryMark&quot;: false,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/warehouse-bin/warehouse-bin-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除库位" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${actualBin_Id}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/warehouse-bin/delete-warehouse-bin</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="批属性管理" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增批属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;productionDateVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;expireDateVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;entryDateVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;productionBatchVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;plantVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;boxNoVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;batchCodeVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;returnReasonVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;originCountryVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;boxQtyVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;inventoryMarkVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/lot-attr/lot-attr</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="lotAttrId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">lotAttrid</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/lot-attr/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看批属性详情" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;lotAttrId&quot;: &quot;${lotAttrid}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/lot-attr-rotation-rule/get-lot-attr-rotation-rule-by-lot-attr-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改批属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${lotAttrid}&quot;,&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;description&quot;: null,&#xd;
  &quot;isForAll&quot;: false,&#xd;
  &quot;productionDateVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: true&#xd;
  },&#xd;
  &quot;expireDateVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;entryDateVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;productionBatchVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;plantVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;boxNoVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;batchCodeVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;returnReasonVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;originCountryVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;boxQtyVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;inventoryMarkVo&quot;: {&#xd;
    &quot;isRequired&quot;: false,&#xd;
    &quot;isSelected&quot;: false&#xd;
  },&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/lot-attr/update-lot-attr</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="规则配置-是否匹配" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-perfect-match-type-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="规则匹配-升降序" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-lot-attr-rotation-sort-type-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="周转配置" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;lotAttrId&quot;: &quot;${lotAttrid}&quot;,&#xd;
  &quot;details&quot;: [&#xd;
    {&#xd;
      &quot;lotAttrCode&quot;: &quot;BatchNo&quot;,&#xd;
      &quot;sequence&quot;: 1,&#xd;
      &quot;sort&quot;: 1,&#xd;
      &quot;perfectMatchType&quot;: &quot;1&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;lotAttrCode&quot;: &quot;PickSequence&quot;,&#xd;
      &quot;sequence&quot;: 2,&#xd;
      &quot;sort&quot;: 1,&#xd;
      &quot;perfectMatchType&quot;: &quot;1&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/lot-attr-rotation-rule/lot-attr-rotation-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="批属性关联仓库调用" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;lotAttrId&quot;: &quot;${lotAttrid}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/lot-attr/get-lot-attr-warehouse-by-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="关联仓库-仓库" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/selector/get-warehouse-selector</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="关联仓库" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;lotAttrId&quot;: &quot;${lotAttrid}&quot;,&#xd;
  &quot;warehouseIds&quot;: [&#xd;
    &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/lot-attr/set-warehouse-for-lot-attr</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除批属性" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${lotAttrid}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/lot-attr/delete-lot-attr</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="分配策略" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增分配策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;strategyType&quot;: &quot;2&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/allocate-strategy/allocate-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="strategyid 分配策略id" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">strategyid</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">$1$</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/allocate-strategy/paging-allocate-strategy-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增分配策略规则" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;strategyId&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;name&quot;: &quot;1&quot;,&#xd;
  &quot;sequenceNo&quot;: 1,&#xd;
  &quot;fixedAreaOrBin&quot;: 1,&#xd;
  &quot;enableLotAttrRule&quot;: true,&#xd;
  &quot;areas&quot;: [],&#xd;
  &quot;allocateRuleSourceTypes&quot;: [&#xd;
    10,&#xd;
    20,&#xd;
    30,&#xd;
    40,&#xd;
    50,&#xd;
    60&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/allocate-rule/allocate-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="strategy_ruleid" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">strategy_ruleid</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">$1$</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略-规则停用" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategy_ruleid}&quot;,&#xd;
  &quot;isActive&quot;: false,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/allocate-rule/active-allocate-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略详情" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/allocate-rule/paging-allocate-rule-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-403018671">${strategy_ruleid}</stringProp>
                  <stringProp name="51814924">&quot;enabled&quot;:false</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">规则没有新建成功</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配规则-规则编辑" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;strategyId&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;name&quot;: &quot;1&quot;,&#xd;
  &quot;sequenceNo&quot;: 1,&#xd;
  &quot;fixedAreaOrBin&quot;: 1,&#xd;
  &quot;enableLotAttrRule&quot;: true,&#xd;
  &quot;areas&quot;: [],&#xd;
  &quot;allocateRuleSourceTypes&quot;: [&#xd;
    40,&#xd;
    50,&#xd;
    60,&#xd;
    30,&#xd;
    10,&#xd;
    20&#xd;
  ],&#xd;
  &quot;id&quot;: &quot;${strategy_ruleid}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
  &quot;enabled&quot;: true,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/allocate-rule/update-allocate-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略-规则删除" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategy_ruleid}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/allocate-rule/delete-allocate-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑分配策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;remark&quot;: null,&#xd;
  &quot;id&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;strategyType&quot;: &quot;2&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/allocate-strategy/update-allocate-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除分配策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/allocate-strategy/delete-allocate-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分配策略查询-删除查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/allocate-strategy/paging-allocate-strategy-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-567887560">${strategyid}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="拣货策略" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增拣货策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;strategyType&quot;: &quot;3&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pick-strategy/pick-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="strategyid 拣货策略id" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">strategyid</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">$1$</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyType&quot;: 3,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/pick-strategy/paging-pick-strategy-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增拣货策略规则" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;strategyId&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;id&quot;: &quot;&quot;,&#xd;
  &quot;name&quot;: &quot;1&quot;,&#xd;
  &quot;sequenceNo&quot;: 1,&#xd;
  &quot;pickingOrderType&quot;: 4,&#xd;
  &quot;cGroupPickOrderMaxQty&quot;: 10,&#xd;
  &quot;orderMinQtyLimit&quot;: 1,&#xd;
  &quot;isSplitByBinQty&quot;: false,&#xd;
  &quot;isSplitByPickOrderVol&quot;: false,&#xd;
  &quot;isSplitByPack&quot;: false,&#xd;
  &quot;secKillTypes&quot;: [&#xd;
    1,&#xd;
    2,&#xd;
    3,&#xd;
    4&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pick-rule/pick-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="strategy_ruleid 规则id" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">strategy_ruleid</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">$1$</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略-规则停用" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategy_ruleid}&quot;,&#xd;
  &quot;isActive&quot;: false,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pick-rule/active-pick-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略详情" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/pick-rule/paging-pick-rule-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-403018671">${strategy_ruleid}</stringProp>
                  <stringProp name="51814924">&quot;enabled&quot;:false</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略-规则编辑" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;strategyId&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;id&quot;: &quot;${strategy_ruleid}&quot;,&#xd;
  &quot;name&quot;: &quot;1&quot;,&#xd;
  &quot;sequenceNo&quot;: 1,&#xd;
  &quot;pickingOrderType&quot;: 4,&#xd;
  &quot;cGroupPickOrderMaxQty&quot;: 10,&#xd;
  &quot;orderMinQtyLimit&quot;: 1,&#xd;
  &quot;isSplitByBinQty&quot;: false,&#xd;
  &quot;isSplitByPickOrderVol&quot;: false,&#xd;
  &quot;isSplitByPack&quot;: false,&#xd;
  &quot;secKillTypes&quot;: [&#xd;
    4,&#xd;
    3,&#xd;
    2,&#xd;
    1&#xd;
  ],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pick-rule/update-pick-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略-规则删除" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategy_ruleid}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pick-rule/delete-pick-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑拣货策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;remark&quot;: null,&#xd;
  &quot;id&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;strategyType&quot;: &quot;3&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pick-strategy/update-pick-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除拣货策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pick-strategy/delete-pick-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拣货策略查询-删除查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyType&quot;: 3,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/pick-strategy/paging-pick-strategy-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-567887560">${strategyid}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="上架策略" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增上架策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;strategyType&quot;: &quot;1&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/put-away-strategy/put-away-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="strategyid 上架策略id" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">strategyid</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">$1$</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyType&quot;: 1,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-strategy/paging-put-away-strategy-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-567887560">${strategyid}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增上架策略-规则" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;2&quot;,&#xd;
  &quot;sequenceNo&quot;: 2,&#xd;
  &quot;BinUseType&quot;: &quot;&quot;,&#xd;
  &quot;targetAreaId&quot;: &quot;&quot;,&#xd;
  &quot;allowEmpty&quot;: true,&#xd;
  &quot;strategyId&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;putAwayTypes&quot;: [&#xd;
    10,&#xd;
    20,&#xd;
    30&#xd;
  ],&#xd;
  &quot;abcTypes&quot;: [&#xd;
    1,&#xd;
    2,&#xd;
    3&#xd;
  ],&#xd;
  &quot;putAwayRuleBinSorts&quot;: [],&#xd;
  &quot;expireDate&quot;: null,&#xd;
  &quot;entryDate&quot;: null,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/put-away-rule/put-away-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="strategy_ruleid" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">strategy_ruleid</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;</stringProp>
                <stringProp name="BoundaryExtractor.default"></stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">$1$</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略-停用" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategy_ruleid}&quot;,&#xd;
  &quot;isActive&quot;: false,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/put-away-rule/active-put-away-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略详情" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-rule/paging-put-away-rule-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-403018671">${strategy_ruleid}</stringProp>
                  <stringProp name="51814924">&quot;enabled&quot;:false</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">规则没有新建成功</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略-规则编辑" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategy_ruleid}&quot;,&#xd;
  &quot;strategyId&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;name&quot;: &quot;1&quot;,&#xd;
  &quot;sequenceNo&quot;: 1,&#xd;
  &quot;BinUseType&quot;: null,&#xd;
  &quot;targetAreaId&quot;: null,&#xd;
  &quot;allowEmpty&quot;: true,&#xd;
  &quot;putAwayTypes&quot;: [],&#xd;
  &quot;abcTypes&quot;: [],&#xd;
  &quot;productionDate&quot;: null,&#xd;
  &quot;expireDate&quot;: null,&#xd;
  &quot;entryDate&quot;: null,&#xd;
  &quot;productionBatch&quot;: null,&#xd;
  &quot;plant&quot;: &quot;&quot;,&#xd;
  &quot;boxNo&quot;: &quot;&quot;,&#xd;
  &quot;batchCode&quot;: &quot;&quot;,&#xd;
  &quot;returnReason&quot;: &quot;&quot;,&#xd;
  &quot;originCountry&quot;: &quot;&quot;,&#xd;
  &quot;boxQty&quot;: null,&#xd;
  &quot;inventoryMark&quot;: &quot;&quot;,&#xd;
  &quot;putAwayRuleBinSorts&quot;: [],&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/put-away-rule/update-put-away-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略-规则删除" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategy_ruleid}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/put-away-rule/delete-put-away-rule</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="编辑上架策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;remark&quot;: null,&#xd;
  &quot;id&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;strategyType&quot;: &quot;1&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/put-away-strategy/update-put-away-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除上架策略" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${strategyid}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/put-away-strategy/delete-put-away-strategy</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上架策略查询-删除查询" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;strategyType&quot;: 1,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-strategy/paging-put-away-strategy-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-567887560">${strategyid}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="调试" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">2</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">1</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;outBoundStatusStr&quot;,&quot;0&quot;); //普通出库查询分配状态

vars.put(&quot;w_counter_kcfp&quot;,&quot;0&quot;); //普通出库库存分配后状态

vars.put(&quot;code1&quot;,&quot;0&quot;);
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="基础数据" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="84424398">YHWMS</stringProp>
            <stringProp name="914278565">用例集合</stringProp>
            <stringProp name="701366788">基础数据</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="pda_put_no" elementType="Argument">
              <stringProp name="Argument.name">pda_put_no</stringProp>
              <stringProp name="Argument.value">TTTUO2022071100000001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="id" elementType="Argument">
              <stringProp name="Argument.name">id</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="totalCount_1" elementType="Argument">
              <stringProp name="Argument.name">totalCount_1</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="totalCount_2" elementType="Argument">
              <stringProp name="Argument.name">totalCount_2</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="移位补货造数据" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品计量单位" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-unit-selector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="unitId 计量单位" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">unitId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;value&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-1" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_1" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cargoId_1</stringProp>
                <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/cargo-setting/warehouse-cargo-setting</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_1" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_1}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">codename_1</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取商品数据" enabled="true">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select code,name from Basic_Cargos where id = ${cargoId_1} </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">code,codename</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="收货单创建" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;3a0507e0-1eb7-56dd-ef7e-8c028f5c16a8&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="收货单创建" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;3CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;3a0502cf-d466-d746-5262-de853b128444&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;3a0507e0-1eb7-56dd-ef7e-8c028f5c16a8&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="收货单创建" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;1CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;3a0507e0-1eb7-56dd-ef7e-8c028f5c16a8&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售出库通知单(手动创建页面)" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;10&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;edc1${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${carrier_Id}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;consigneeName&quot;:&quot;自动化&quot;,&#xd;
    &quot;consigneeTel&quot;:&quot;17777777777&quot;,&#xd;
    &quot;province&quot;:&quot;广东省&quot;,&#xd;
    &quot;city&quot;:&quot;深圳市&quot;,&#xd;
    &quot;area&quot;:&quot;罗湖区&quot;,&#xd;
    &quot;consigneeAddress&quot;:&quot;自动化&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售出库通知单(手动创建页面)" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;10&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;edc${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${carrier_Id}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;consigneeName&quot;:&quot;自动化&quot;,&#xd;
    &quot;consigneeTel&quot;:&quot;17777777777&quot;,&#xd;
    &quot;province&quot;:&quot;广东省&quot;,&#xd;
    &quot;city&quot;:&quot;深圳市&quot;,&#xd;
    &quot;area&quot;:&quot;罗湖区&quot;,&#xd;
    &quot;consigneeAddress&quot;:&quot;自动化&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售出库通知单(手动创建页面)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;10&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;2edc${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${carrier_Id}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;consigneeName&quot;:&quot;自动化&quot;,&#xd;
    &quot;consigneeTel&quot;:&quot;17777777777&quot;,&#xd;
    &quot;province&quot;:&quot;广东省&quot;,&#xd;
    &quot;city&quot;:&quot;深圳市&quot;,&#xd;
    &quot;area&quot;:&quot;罗湖区&quot;,&#xd;
    &quot;consigneeAddress&quot;:&quot;自动化&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:1200,&#xd;
            &quot;nwgt&quot;:1200,&#xd;
            &quot;gwgt&quot;:1200,&#xd;
            &quot;volume&quot;:1200,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="入库唯一码采集" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="收货单创建" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:&quot;3a05b341-9c3a-b8b8-d781-42316855052f&quot;,&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:&quot;3a05b341-9c3a-b8b8-d781-42316855052f&quot;,&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;: &quot;3a05b341-9c3a-b8b8-d781-42316855052f&quot;,&#xd;
            &quot;skuCode&quot;: &quot;test-wym-1&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;3a04fd11-008c-180d-f263-1b6b5449d950&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="staging" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品计量单位" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-unit-selector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="unitId 计量单位" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">unitId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;value&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-1" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_1" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cargoId_1</stringProp>
                <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_1" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_1}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">codename_1</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取商品数据" enabled="true">
            <stringProp name="dataSource">mysql</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select code,name from Basic_Cargos where id = ${cargoId_1} </stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">code,codename</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="收货单创建" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;3a04fe55-700d-f2a1-1ba7-0eb18f073ef9&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="收货单创建" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;1CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;3a050ceb-e646-34d7-7dfb-228e6123b983&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售出库通知单(手动创建页面)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;10&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;edc1${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${carrier_Id}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;consigneeName&quot;:&quot;自动化&quot;,&#xd;
    &quot;consigneeTel&quot;:&quot;17777777777&quot;,&#xd;
    &quot;province&quot;:&quot;广东省&quot;,&#xd;
    &quot;city&quot;:&quot;深圳市&quot;,&#xd;
    &quot;area&quot;:&quot;罗湖区&quot;,&#xd;
    &quot;consigneeAddress&quot;:&quot;自动化&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售出库通知单(手动创建页面)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;10&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;edc${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${carrier_Id}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;consigneeName&quot;:&quot;自动化&quot;,&#xd;
    &quot;consigneeTel&quot;:&quot;17777777777&quot;,&#xd;
    &quot;province&quot;:&quot;广东省&quot;,&#xd;
    &quot;city&quot;:&quot;深圳市&quot;,&#xd;
    &quot;area&quot;:&quot;罗湖区&quot;,&#xd;
    &quot;consigneeAddress&quot;:&quot;自动化&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:10,&#xd;
            &quot;nwgt&quot;:10,&#xd;
            &quot;gwgt&quot;:10,&#xd;
            &quot;volume&quot;:10,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售出库通知单(手动创建页面)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;type&quot;:&quot;10&quot;,&#xd;
    &quot;orderSourceCode&quot;:&quot;JD&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;2edc${time}${ti}&quot;,&#xd;
    &quot;transportMode&quot;:&quot;20&quot;,&#xd;
    &quot;carrierId&quot;:&quot;${carrier_Id}&quot;,&#xd;
    &quot;receivedTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:00:00.000Z&quot;,&#xd;
    &quot;latestOutBoundTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P-2D,,)}T16:30:00.000Z&quot;,&#xd;
    &quot;consigneeName&quot;:&quot;自动化&quot;,&#xd;
    &quot;consigneeTel&quot;:&quot;17777777777&quot;,&#xd;
    &quot;province&quot;:&quot;广东省&quot;,&#xd;
    &quot;city&quot;:&quot;深圳市&quot;,&#xd;
    &quot;area&quot;:&quot;罗湖区&quot;,&#xd;
    &quot;consigneeAddress&quot;:&quot;自动化&quot;,&#xd;
    &quot;createBasicOutBoundNoticeOrderDetails&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;qty&quot;:1200,&#xd;
            &quot;nwgt&quot;:1200,&#xd;
            &quot;gwgt&quot;:1200,&#xd;
            &quot;volume&quot;:1200,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;token&quot;:&quot;3a046ddb099f3b818eb76938c87ad62c&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/out-bound-notice-order/out-bound-order-notice</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="判断库存" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
            <stringProp name="BeanShellSampler.query">vars.put(&quot;no&quot;,&quot;${pda_put_no}&quot;);
vars.put(&quot;no&quot;,&quot;${ruku_put_no}&quot;);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询是否上架完成" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;putAwayOrderNo&quot;: &quot;${no}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderStatusName" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">putAwayOrderStatusName</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;putAwayOrderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询二级库存流水" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;outSourceCode&quot;: &quot;${no}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/inventory-account-running-record-query/get-account-advance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">totalCount</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断上架单状态" enabled="true">
            <stringProp name="IfController.condition">&quot;${totalCount}&quot; != &quot;5&quot; || &quot;${putAwayOrderStatusName}&quot; == &quot;库存扣减中&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      二级库存流水不正确&#xd;
      数量调整单号：${no}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="标准收货" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品计量单位" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/selector/get-unit-selector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="unitId 计量单位" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">unitId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;value&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品-1" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建商品-1" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;name&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;cargoTypeId&quot;:&quot;${cargoTypeId}&quot;,&#xd;
    &quot;cargoTypeOfCustomerId&quot;:&quot;${cargoTypeOfCustomerId}&quot;,&#xd;
    &quot;cargoTypeOfWarehouseId&quot;:&quot;${cargoTypeOfWarehouseId}&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;spec&quot;:&quot;1&quot;,&#xd;
    &quot;model&quot;:&quot;1&quot;,&#xd;
    &quot;brand&quot;:&quot;1&quot;,&#xd;
    &quot;unitId&quot;:&quot;${unitId}&quot;,&#xd;
    &quot;hsCode&quot;:&quot;1&quot;,&#xd;
    &quot;storageCondition&quot;:null,&#xd;
    &quot;barCode&quot;:&quot;1-${name}${__counter(false,id)}&quot;,&#xd;
    &quot;length&quot;:1,&#xd;
    &quot;width&quot;:1,&#xd;
    &quot;height&quot;:1,&#xd;
    &quot;vol&quot;:&quot;1&quot;,&#xd;
    &quot;nwgt&quot;:1,&#xd;
    &quot;gwgt&quot;:1,&#xd;
    &quot;createCargoPackInputs&quot;:[&#xd;
&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo/cargo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId_1" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cargoId_1</stringProp>
                <stringProp name="RegexExtractor.regex">(.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商品-规则配置" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;lotAttrId&quot;:&quot;${lotAttrId}&quot;,&#xd;
    &quot;putawayStrategyId&quot;:&quot;${putawayStrategyId}&quot;,&#xd;
    &quot;allocateStrategyId&quot;:&quot;${allocateStrategyId}&quot;,&#xd;
    &quot;isInSnCheck&quot;:null,&#xd;
    &quot;isOutSnCheck&quot;:null,&#xd;
    &quot;isCustomerValidation&quot;:null,&#xd;
    &quot;snReplaceText&quot;:null,&#xd;
    &quot;snReplaceRule&quot;:null,&#xd;
    &quot;snCheckRule&quot;:null,&#xd;
    &quot;snSeparator&quot;:null,&#xd;
    &quot;isCheckModel&quot;:null,&#xd;
    &quot;modelBarCode&quot;:null,&#xd;
    &quot;expDays&quot;:null,&#xd;
    &quot;alertDays&quot;:null,&#xd;
    &quot;forbidSaleDays&quot;:null,&#xd;
    &quot;rejectionDays&quot;:null,&#xd;
    &quot;productDateLimitDays&quot;:null,&#xd;
    &quot;replenishMaxQty&quot;:null,&#xd;
    &quot;replenishMinQty&quot;:null,&#xd;
    &quot;maxStoreQty&quot;:null,&#xd;
    &quot;minStoreQty&quot;:null,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/cargo-setting/customer-cargo-setting</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="codename_1" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select name from Basic_Cargos where id = ${cargoId_1}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">codename_1</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="商品资料获取" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取商品数据" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select code,name from Basic_Cargos where id = ${cargoId_1}</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">code,codename</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">2000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_1},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">no_dao</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id_dao</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货单信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;no&quot;: &quot;${no_dao}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work/get-receive</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="虚拟容器获取" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: &quot;${time}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work/check-lpn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="containerId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">containerId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="简单控制器" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="收货" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;concurrencyId&quot;: &quot;3a05227e-29d1-e327-cbc0-be4bba97a8d1&quot;,&#xd;
  &quot;receiveWorkId&quot;: null,&#xd;
  &quot;receiveOrderId&quot;: &quot;${receiveOrderId}&quot;,&#xd;
  &quot;cargoId&quot;: ${cargoId_1},&#xd;
  &quot;containerId&quot;: &quot;${containerId}&quot;,&#xd;
  &quot;serialNumber&quot;: &quot;&quot;,&#xd;
  &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
  &quot;number&quot;: &quot;1000&quot;,&#xd;
  &quot;qualityName&quot;: &quot;${quality_name}&quot;,&#xd;
  &quot;cargoName&quot;: &quot;${codename_1}&quot;,&#xd;
  &quot;containerNo&quot;: &quot;3212&quot;,&#xd;
  &quot;batchProperty&quot;: {&#xd;
    &quot;productionDate&quot;: &quot;&quot;,&#xd;
    &quot;expireDate&quot;: &quot;&quot;,&#xd;
    &quot;entryDate&quot;: &quot;&quot;,&#xd;
    &quot;productionBatch&quot;: &quot;&quot;,&#xd;
    &quot;plant&quot;: &quot;&quot;,&#xd;
    &quot;batchCode&quot;: &quot;&quot;,&#xd;
    &quot;returnReason&quot;: &quot;&quot;,&#xd;
    &quot;virtualWarehouse&quot;: &quot;&quot;,&#xd;
    &quot;boxQty&quot;: &quot;&quot;,&#xd;
    &quot;boxNo&quot;: &quot;&quot;,&#xd;
    &quot;purchaseOrder&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;no&quot;: &quot;${no_dao}&quot;,&#xd;
  &quot;barCode&quot;: &quot;${codename_1}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work/get-receive</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货单信息" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;barCode&quot;: &quot; &quot;,&#xd;
  &quot;no&quot;: &quot;${no_dao}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-receive-work/get-receive</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="模块" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="84424398">YHWMS</stringProp>
            <stringProp name="-1364696058">全流程回归</stringProp>
            <stringProp name="817305669">普通出库</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="查库存" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="一级库存${adjustmentOrderNo_1}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;outSourceCode&quot;: &quot;${adjustmentOrderNo_1}&quot;,&#xd;
  &quot;occurrenceBeginDateTime&quot;: &quot;2022-09-21 00:00:00&quot;,&#xd;
  &quot;occurrenceEndDateTime&quot;: &quot;2022-09-29 00:00:00&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/inventory-account-running-record-query/get-account</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">totalCount_1</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-354752020">&quot;totalCount&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="二级库存 ${adjustmentOrderNo_1}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;outSourceCode&quot;: &quot;${adjustmentOrderNo_1}&quot;,&#xd;
  &quot;occurrenceBeginDateTime&quot;: &quot;2022-09-21 00:00:00&quot;,&#xd;
  &quot;occurrenceEndDateTime&quot;: &quot;2022-09-29 00:00:00&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/inventory-account-running-record-query/get-account-advance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-354752020">&quot;totalCount&quot;:1</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">totalCount_2</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
            <stringProp name="IfController.condition">${totalCount_2} != 1 || ${totalCount_1} != 1</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
              <stringProp name="dataSource">mysql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select
        REQUESTING_ENGINE_TRANSACTION_ID AS &apos;等待中的事务号&apos; ,
        BLOCKING_ENGINE_TRANSACTION_ID AS &apos;阻塞的事务号&apos;,
        trx.trx_id ,
        trx.trx_state ,
        trx.trx_started,
        trx.trx_query
from
        information_schema.INNODB_TRX trx
left join performance_schema.data_lock_waits lockwait on lockwait.BLOCKING_ENGINE_TRANSACTION_ID = trx.trx_id ;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">-1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="100526016">items</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="put_id" enabled="true">
            <stringProp name="TestPlan.comments">上架单ID</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">put_id</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderNo" enabled="true">
            <stringProp name="TestPlan.comments">上架单ID</stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">putAwayOrderNo</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;putAwayOrderNo&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderStatusName" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">putAwayOrderStatusName</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;putAwayOrderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While控制器" enabled="false">
          <stringProp name="WhileController.condition">${__javaScript(&quot;${putAwayOrderStatusName}&quot;!=&quot;上架完成&quot;)}</stringProp>
        </WhileController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="100526016">items</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="put_id" enabled="true">
              <stringProp name="TestPlan.comments">上架单ID</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">put_id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderNo" enabled="true">
              <stringProp name="TestPlan.comments">上架单ID</stringProp>
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">putAwayOrderNo</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;putAwayOrderNo&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="putAwayOrderStatusName" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">putAwayOrderStatusName</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;putAwayOrderStatusName&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环${w_counter}" enabled="true">
            <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后通知" enabled="true">
            <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell 取样器" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;totalCount&quot;,&quot;0&quot;);</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;BUG验证&#xd;
      快速收货上架后，上架单状态不正确&#xd;
      单号：${no_dao}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">20</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="入库管理" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="收货单创建" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="到货通知" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;,&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;projectId&quot;:&quot;${project_Id}&quot;,&#xd;
    &quot;asnStockType&quot;:&quot;1&quot;,&#xd;
    &quot;customerOrderCode&quot;:&quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;,&#xd;
&quot;orderSource&quot;: &quot;抖音&quot;,&#xd;
&quot;carrierCode&quot;: &quot;ZT&quot;,&#xd;
&quot;expectStartTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:00:00.000Z&quot;,&#xd;
&quot;expectEndTime&quot;: &quot;${__timeShift(yyyy-MM-dd,,P+2D,,)}T16:30:00.000Z&quot;,&#xd;
&quot;logisticsNo&quot;: &quot;123&quot;,&#xd;
&quot;remark&quot;: &quot;1&quot;,&#xd;
&quot;asnSender&quot;: {&#xd;
&quot;companyCode&quot;: &quot;2&quot;,&#xd;
&quot;companyName&quot;: &quot;2&quot;,&#xd;
&quot;senderName&quot;: &quot;2&quot;,&#xd;
&quot;senderTel&quot;: &quot;1&quot;,&#xd;
&quot;province&quot;: &quot;北京市&quot;,&#xd;
&quot;city&quot;: &quot;市辖区&quot;,&#xd;
&quot;area&quot;: &quot;东城区&quot;,&#xd;
&quot;address&quot;: &quot;1&quot;&#xd;
},&#xd;
    &quot;details&quot;:[&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_1},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_2},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:1000,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;cargoId&quot;:${cargoId_3},&#xd;
            &quot;qualityId&quot;:&quot;${quality_id}&quot;,&#xd;
            &quot;volume&quot;:0.00001,&#xd;
            &quot;nwgt&quot;:1000,&#xd;
            &quot;gwgt&quot;:1000,&#xd;
            &quot;planQty&quot;:1000,&#xd;
            &quot;currency&quot;:&quot;RMB&quot;,&#xd;
            &quot;lotAttrValueDto&quot;:{&#xd;
&#xd;
            }&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;3a040cc0-bb44-f502-7672-17355dd5b664&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/asn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="通过其中一个商品的SKU去查" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/asn/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="no_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">no_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_dao" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">id_dao</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建收货单" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;type&quot;:1,&#xd;
    &quot;items&quot;:[&#xd;
        {&#xd;
            &quot;id&quot;:&quot;${id_dao}&quot;,&#xd;
            &quot;no&quot;:&quot;${no_dao}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-order</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="快速上架" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取快速上架数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/get-by-asn-id</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargosku_id  商品SKU id" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cargosku_id</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快速上架" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;asnId&quot;: &quot;${id_dao}&quot;,&#xd;
    &quot;asnNo&quot;: &quot;${no_dao}&quot;,&#xd;
    &quot;details&quot;: [&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_1},&#xd;
            &quot;skuCode&quot;: &quot;${codename_1}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_1}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_2},&#xd;
            &quot;skuCode&quot;: &quot;${codename_2}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_2}&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;lineNo&quot;: &quot;&quot;,&#xd;
            &quot;skuId&quot;:${cargoId_3},&#xd;
            &quot;skuCode&quot;: &quot;${codename_3}&quot;,&#xd;
            &quot;qualityId&quot;: &quot;${quality_id}&quot;,&#xd;
            &quot;warehouseBinId&quot;: &quot;${actualBin_Id}&quot;,&#xd;
            &quot;planQty&quot;: 1000,&#xd;
            &quot;actualQty&quot;: 1000,&#xd;
            &quot;lotAttrValueDto&quot;: {&#xd;
                &quot;productionDate&quot;: &quot;&quot;,&#xd;
                &quot;expireDate&quot;: &quot;&quot;,&#xd;
                &quot;entryDate&quot;: &quot;&quot;,&#xd;
                &quot;productionBatch&quot;: null,&#xd;
                &quot;plant&quot;: null,&#xd;
                &quot;boxNo&quot;: null,&#xd;
                &quot;batchCode&quot;: null,&#xd;
                &quot;returnReason&quot;: null,&#xd;
                &quot;virtualWarehouse&quot;: null,&#xd;
                &quot;boxQty&quot;: null,&#xd;
                &quot;purchaseOrder&quot;: null&#xd;
            },&#xd;
            &quot;id&quot;: &quot;${cargosku_id_3}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/receive-put-away/confirmed-receive-put-away</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="到货通知单(PC收货）-多商品" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">code_id</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取收货管理单号" enabled="false">
              <stringProp name="dataSource"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select no from In_Asns where CustomerOrderCode like &quot;CY${time}${__counter(FALSE,customerOrderCode)}&quot;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">asnId</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取收货管理单号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;pageIndex&quot;:1,&#xd;
    &quot;pageSize&quot;:10,&#xd;
    &quot;cargoId&quot;:${cargoId_3},&#xd;
    &quot;creationStartTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,-P2D,,)}&quot;,&#xd;
    &quot;creationEndTime&quot;:&quot;${__timeShift(YYYY-MM-dd HH:mm:ss,,P2D,,)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/receive-order/paging-list</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="creatorId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">creatorId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">ietms[0].creatorId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ASNid" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">asnId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">items[0].asnId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取收货信息" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;no&quot;:&quot;${no_dao}&quot;,&#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-receive</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveOrderId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">receiveOrderId</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;receiveOrderId&quot;:&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查LPN效验容器" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;code&quot;:&quot;${time}${code_id}&quot;,    //容器号&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/check-lpn</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="生成临时容器id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">rq_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">data.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="初始化变量" enabled="true">
              <stringProp name="BeanShellSampler.query">vars.put(&quot;sourceOrderTypeStr&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;w_counter&quot;,&quot;0&quot;);

vars.put(&quot;putAwayOrderStatusName&quot;,&quot;0&quot;);

vars.put(&quot;totalCount&quot;,&quot;0&quot;);

vars.put(&quot;receiveWorkId&quot;,&quot;&quot;)</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="true">
              <stringProp name="ForeachController.inputVal">cargoId</stringProp>
              <stringProp name="ForeachController.returnVal">cargoId</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">0</stringProp>
              <stringProp name="ForeachController.endIndex">10</stringProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-获取商品信息" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;customerId&quot;:&quot;${customer_Id}&quot;,&#xd;
    &quot;asnId&quot;:&quot;${asnId}&quot;,&#xd;
    &quot;barCode&quot;:&quot;${__V(code_${__counter(,code)},)}&quot;,&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work/get-cargo</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="concurrencyId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">concurrencyId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;concurrencyId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PC收货-检查收货作业" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;concurrencyId&quot;:&quot;${concurrencyId}&quot;,  //上游返回的id 但是提取出来也无法走通  页面发现是另一个id  找不到这个id来源&#xd;
    &quot;receiveWorkId&quot;:&quot;${receiveWorkId}&quot;, &#xd;
    &quot;receiveOrderId&quot;:&quot;${receiveOrderId}&quot;, &#xd;
    &quot;workStationId&quot;:&quot;${workStationId}&quot;,   //工作台id&#xd;
    &quot;workStationName&quot;:&quot;工作台&quot;,//工作台名称&#xd;
    &quot;cargoId&quot;:${cargoId},   //商品id&#xd;
    &quot;cargoName&quot;:&quot;${__V(codename_${__counter(,codename)},)}&quot;,     //商品名称,   &#xd;
    &quot;qualityId&quot;:&quot;${quality_id}&quot;,   //品质id&#xd;
    &quot;qualityName&quot;:&quot;${quality_name}&quot;,    //品质名称&#xd;
    &quot;containerId&quot;:&quot;${rq_id}&quot;,  //容器id&#xd;
    &quot;containerNo&quot;:&quot;${time}${code_id}&quot;,  //容器&#xd;
    &quot;number&quot;:1000,  //数量&#xd;
    &quot;boxNum&quot;:1,      //蓝号&#xd;
    &quot;batchProperty&quot;:{&#xd;
        &quot;productionBatch&quot;:&quot;&quot;,&#xd;
        &quot;plant&quot;:&quot;&quot;,&#xd;
        &quot;boxNo&quot;:&quot;&quot;,&#xd;
        &quot;batchCode&quot;:&quot;&quot;,&#xd;
        &quot;returnReason&quot;:&quot;&quot;,&#xd;
        &quot;virtualWarehouse&quot;:&quot;&quot;,&#xd;
        &quot;boxQty&quot;:null,&#xd;
        &quot;purchaseOrder&quot;:&quot;&quot;&#xd;
    },&#xd;
    &quot;userId&quot;:&quot;${userId}&quot;,&#xd;
    &quot;warehouseId&quot;:&quot;${defaultWarehouseId}&quot;&#xd;
}&#xd;
&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/operations/api/app/pc-receive-work</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="receiveWorkId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">receiveWorkId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;receiveWorkId&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="查看是否生成上架单" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${totalCount}&quot;!=1 &amp;&amp; ${w_counter}&lt;=${retry},)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询上架管理" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;asnNo&quot;:&quot;${no_dao}&quot;,&#xd;
  &quot;putAwayOrderStatus&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;${userId}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/wms/yhwms/query/api/app/put-away-order/paging-list</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="outbound_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">outbound_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="100526016">items</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="totalCount" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">totalCount</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;totalCount&quot;:(.+?),</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="循环次数${w_counter}" enabled="true">
                <stringProp name="BeanShellSampler.query">int a1=Integer.valueOf(${w_counter});

a1=a1+1;

String bb=String.valueOf(a1);

vars.put(&quot;w_counter&quot;,bb);

log.info(&quot;============进入while循环=======&quot;);

log.info(&quot;a1===&quot;+a1);

log.info(&quot;bb===&quot;+bb);
</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="失败5次后通知" enabled="true">
                <stringProp name="IfController.condition">${w_counter}&gt;${retry}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="企业微信机器人报错" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;msgtype&quot;:&quot;text&quot;,&#xd;
    &quot;text&quot;:{&#xd;
      &quot;content&quot;:&quot;主流程回归测试&#xd;
      收货完成后，没有生成上架单&#xd;
      收货通知单号：${no_dao}&quot;,&#xd;
       &quot;mentioned_list&quot;:&quot;何曹懿&quot;,&#xd;
       &quot;mentioned_mobile_list&quot;: 17775777816&#xd;
       }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73f1e1c5-cc1f-4df7-a2fa-4a37b6f810cf</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">20</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="唯一码采集" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看单号列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;uniqueCodeOrderType&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;startTime&quot;: &quot;${__time(YYYY-MM-dd,)}&quot;,&#xd;
  &quot;endTime&quot;: &quot;${__timeShift(yyyy-MM-dd ,,P1D,,)}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/pda-unique-code/paging-list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="wym_no 采集唯一码单号" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">wym_no</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;no&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="使用单号进入详情" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;no&quot;: &quot;${wym_no}&quot;,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/pda-unique-code/get-by-no</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取订单内SKU" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;uniqueCodeSkuCollectionType&quot;: 10,&#xd;
  &quot;pageIndex&quot;: 1,&#xd;
  &quot;pageSize&quot;: 10,&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;no&quot;: &quot;${wym_no}&quot;,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">wms/yhwms/query/api/app/pda-unique-code/get-unique-code-sku</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="wym_total 商品数量" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">wym_total</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;total&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="orderId 订单ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">orderId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;orderId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cargoId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cargoId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;cargoId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="true">
            <stringProp name="ForeachController.inputVal">cargoId</stringProp>
            <stringProp name="ForeachController.returnVal">cargoId</stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">10</stringProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="采集" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;uniqueCode&quot;: &quot;${__time(,)}&quot;,&#xd;
  &quot;qty&quot;: ${wym_total},&#xd;
  &quot;userId&quot;: &quot;3a04f979-c345-6246-f9cc-60188d4539c6&quot;,&#xd;
  &quot;no&quot;: &quot;${wym_no}&quot;,&#xd;
  &quot;orderId&quot;: &quot;${orderId}&quot;,&#xd;
  &quot;cargoId&quot;: &quot;${cargoId}&quot;,&#xd;
  &quot;customerId&quot;: &quot;${customer_Id}&quot;,&#xd;
  &quot;sourceType&quot;: 10,&#xd;
  &quot;warehouseId&quot;: &quot;3a005819-15b1-8fe1-33b5-1831545559d1&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">wms/yhwms/operations/api/app/pda-unique-code/case-scan</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="edi创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;adapterCode&quot;: &quot;QiMenAdapter&quot;,&#xd;
	&quot;deliveryOrder&quot;: {&#xd;
		&quot;deliveryOrderCode&quot;: &quot;edi${time}&quot;,&#xd;
		&quot;transportMode&quot;: 20,&#xd;
		&quot;orderSourceCode&quot;: &quot;ZY&quot;,&#xd;
		&quot;sourceOrderNo&quot;: &quot;07261&quot;,&#xd;
		&quot;customerPurchaseOrder&quot;: null,&#xd;
		&quot;businessOrderType&quot;: &quot;JYCK&quot;,&#xd;
		&quot;warehouseCode&quot;: &quot;W100001&quot;,&#xd;
		&quot;orderFlag&quot;: &quot;COD&quot;,&#xd;
		&quot;shopNick&quot;: &quot;淘宝店&quot;,&#xd;
		&quot;logisticsCode&quot;: &quot;ZTO&quot;,&#xd;
		&quot;expressCode&quot;: &quot;Y12345&quot;,&#xd;
		&quot;deliveryRequirements&quot;: {&#xd;
			&quot;scheduleType&quot;: &quot;101&quot;,&#xd;
			&quot;scheduleDay&quot;: &quot;2022-06-10&quot;,&#xd;
			&quot;scheduleStartTime&quot;: &quot;12:00:00&quot;,&#xd;
			&quot;scheduleEndTime&quot;: &quot;13:00:00&quot;,&#xd;
			&quot;deliveryType&quot;: &quot;PTPS&quot;&#xd;
		},&#xd;
		&quot;senderInfo&quot;: {&#xd;
			&quot;company&quot;: &quot;淘宝&quot;,&#xd;
			&quot;name&quot;: &quot;老王&quot;,&#xd;
			&quot;zipCode&quot;: &quot;043300&quot;,&#xd;
			&quot;companyCode&quot;: null,&#xd;
			&quot;tel&quot;: &quot;808786543&quot;,&#xd;
			&quot;mobile&quot;: &quot;13423456785&quot;,&#xd;
			&quot;email&quot;: &quot;878987654@qq.com&quot;,&#xd;
			&quot;countryCode&quot;: &quot;045565&quot;,&#xd;
			&quot;province&quot;: &quot;浙江省&quot;,&#xd;
			&quot;city&quot;: &quot;杭州&quot;,&#xd;
			&quot;area&quot;: &quot;余杭&quot;,&#xd;
			&quot;town&quot;: &quot;横加桥&quot;,&#xd;
			&quot;detailAddress&quot;: &quot;杭州市余杭区989号&quot;&#xd;
		},&#xd;
		&quot;receiverInfo&quot;: {&#xd;
			&quot;idType&quot;: &quot;1&quot;,&#xd;
			&quot;idNumber&quot;: &quot;12345&quot;,&#xd;
			&quot;oaid&quot;: &quot;oaid&quot;,&#xd;
			&quot;company&quot;: &quot;淘宝&quot;,&#xd;
			&quot;name&quot;: &quot;老王&quot;,&#xd;
			&quot;zipCode&quot;: &quot;043300&quot;,&#xd;
			&quot;companyCode&quot;: null,&#xd;
			&quot;tel&quot;: &quot;808786543&quot;,&#xd;
			&quot;mobile&quot;: &quot;13423456785&quot;,&#xd;
			&quot;email&quot;: &quot;878987654@qq.com&quot;,&#xd;
			&quot;countryCode&quot;: &quot;045565&quot;,&#xd;
			&quot;province&quot;: &quot;浙江省&quot;,&#xd;
			&quot;city&quot;: &quot;杭州&quot;,&#xd;
			&quot;area&quot;: &quot;余杭&quot;,&#xd;
			&quot;town&quot;: &quot;横加桥&quot;,&#xd;
			&quot;detailAddress&quot;: &quot;杭州市余杭区989号&quot;&#xd;
		},&#xd;
		&quot;isUrgency&quot;: true,&#xd;
		&quot;invoiceFlag&quot;: true,&#xd;
		&quot;invoices&quot;: [{&#xd;
			&quot;type&quot;: &quot;INVOICE&quot;,&#xd;
			&quot;header&quot;: &quot;天猫科技有限公司&quot;,&#xd;
			&quot;amount&quot;: 100.0,&#xd;
			&quot;content&quot;: &quot;增值税100元&quot;,&#xd;
			&quot;detail&quot;: {&#xd;
				&quot;items&quot;: []&#xd;
			},&#xd;
			&quot;taxNumber&quot;: &quot;123&quot;&#xd;
		}],&#xd;
		&quot;remark&quot;: &quot;备注信息&quot;,&#xd;
		&quot;customerCode&quot;: &quot;LCS202100000001&quot;,&#xd;
		&quot;opportunityCode&quot;: &quot;PR202100000001&quot;,&#xd;
		&quot;receivedTime&quot;: &quot;2022-06-09T09:00:00&quot;,&#xd;
		&quot;latestOutBoundTime&quot;: &quot;2022-06-10T09:00:00&quot;,&#xd;
		&quot;requiredDeliveryTime&quot;: null,&#xd;
		&quot;requiredSendTime&quot;: null,&#xd;
		&quot;latestCollectionTime&quot;: &quot;2022-06-10T09:30:00&quot;,&#xd;
		&quot;oaidOrderSourceCode&quot;: null,&#xd;
		&quot;allowStockOut&quot;: true&#xd;
	},&#xd;
	&quot;orderLines&quot;: [{&#xd;
		&quot;orderLineNo&quot;: &quot;0100&quot;,&#xd;
		&quot;cargoCode&quot;: &quot;ces-03&quot;,&#xd;
		&quot;cargoName&quot;: &quot;IN123&quot;,&#xd;
		&quot;qualityCode&quot;: &quot;良品&quot;,&#xd;
		&quot;noticeQty&quot;: 2.0,&#xd;
		&quot;batchCode&quot;: &quot;PCODE123&quot;,&#xd;
		&quot;produceCode&quot;: &quot;P1234&quot;,&#xd;
		&quot;productDate&quot;: &quot;2022-06-01T00:00:00&quot;,&#xd;
		&quot;expireDate&quot;: &quot;2023-05-31T00:00:00&quot;&#xd;
	}],&#xd;
	&quot;extendProps&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">https://operations.yhwms.api.staging.yhglobal.cn/api/app/open-out-bound-notice-order/delivery-order</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">id11</stringProp>
            <stringProp name="RegexExtractor.regex">true,&quot;message&quot;:&quot;(.+?)&quot;,&quot;data&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="生成客户指令号" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.put(&quot;khzlh&quot;,&quot;CY${__time(,)}${__counter(FALSE,customerOrderCode)}&quot;);

</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">true</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="调试取样器" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="用表格察看结果" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
